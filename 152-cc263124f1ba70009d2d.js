(window.webpackJsonp=window.webpackJsonp||[]).push([[152,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],{1355:function(e){e.exports=JSON.parse('{"_from":"terra-form-input@^2.0.0","_id":"terra-form-input@2.21.0","_inBundle":false,"_integrity":"sha512-ewEPFyGexib2/sgOerm9lnorBPx8M47IFFPUH8Xu8b3nxSCUOOvJgN3RgR/vjC+6iEv9cIefxBjTpsz9ajePFg==","_location":"/terra-form-input","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-form-input@^2.0.0","name":"terra-form-input","escapedName":"terra-form-input","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/","/terra-clinical-onset-picker","/terra-clinical-onset-picker/terra-date-picker","/terra-date-picker","/terra-form-fieldset","/terra-paginator","/terra-search-field","/terra-time-input"],"_resolved":"https://registry.npmjs.org/terra-form-input/-/terra-form-input-2.21.0.tgz","_shasum":"1e54c01e169cd04e6e05a1ac4511fb72822d4979","_spec":"terra-form-input@^2.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-core/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","terra-doc-template":"^2.15.0","terra-form-field":"^3.19.0","terra-icon":"^3.16.0"},"deprecated":false,"description":"Element for building out inputs in a form.","gitHead":"0b893dc4a80250c0b485a5f205f2defde7c38ecf","homepage":"https://github.com/cerner/terra-core#readme","keywords":["Cerner","Terra","terra-form-input","FormInput","UI"],"license":"Apache-2.0","main":"lib/Input.js","name":"terra-form-input","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"2.21.0"}')},2457:function(e,n,t){"use strict";t.r(n),n.default='# Terra Form Input Field\n\n[terra-form-input](https://github.com/cerner/terra-core/tree/master/packages/terra-form-input) component that is wrapped inside a\n[terra-form-field](https://github.com/cerner/terra-core/tree/master/packages/terra-form-field) component.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-form-input`\n\n## Usage\n\n```jsx\nimport React from \'react\';\nimport InputField from \'terra-form-input/lib/InputField\';\n\n<InputField\n  inputId="input-id"\n  name="description"\n  value="I\'m a software engineer working at Cerner"\n  required\n  label="Enter a Description"\n  isInline\n/>\n```\n\n## Component Features\n\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\n\n\x3c!-- Uncomment supported features.\n * [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n * [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n --\x3e\n'},2458:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport IconError from 'terra-icon/lib/icon/IconError';\nimport Input from './Input';\n\nconst propTypes = {\n  /**\n   * Id of the input. Populates both the input and the htmlFor prop of the wrapper Field.\n   */\n  inputId: PropTypes.string.isRequired,\n  /**\n   * The label of the form control children.\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * The defaultValue of the input field. Use this to create an uncontrolled input.\n   */\n  defaultValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  /**\n   * Whether the input is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Error message for when the input is invalid.\n   */\n  error: PropTypes.node,\n  /**\n   * Error Icon to display when the input is invalid.\n   */\n  errorIcon: PropTypes.element,\n  /**\n   * Help element to display with the input.\n   */\n  help: PropTypes.node,\n  /**\n   * Whether or not to hide the required indicator on the label.\n   */\n  hideRequired: PropTypes.bool,\n  /**\n   * Attributes to attach to the input object\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  inputAttrs: PropTypes.object,\n  /**\n   * Whether or not the field is an inline field.\n   */\n  isInline: PropTypes.bool,\n  /**\n   * Whether or not the field is invalid.\n   */\n  isInvalid: PropTypes.bool,\n  /**\n   * Whether or not the label is visible. Use this props to hide a label while still creating it on the DOM for accessibility.\n   */\n  isLabelHidden: PropTypes.bool,\n  /**\n   * Attributes to attach to the label.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  labelAttrs: PropTypes.object,\n  /**\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\n   */\n  maxWidth: PropTypes.string,\n  /**\n   * Function to trigger when user changes the input value. Provide a function to create a controlled input.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Ref callback to pass into the ref attribute of the html input element.\n   */\n  refCallback: PropTypes.func,\n  /**\n   * Whether or not the field is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * Whether or not to append the 'optional' label to a non-required field label.\n   */\n  showOptional: PropTypes.bool,\n  /**\n   * Specifies the type of input element to display.\n   */\n  type: PropTypes.string,\n  /**\n   * The value of the input field. Use this to create a controlled input.\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nconst defaultProps = {\n  defaultValue: undefined,\n  disabled: false,\n  error: null,\n  errorIcon: <IconError />,\n  help: null,\n  hideRequired: false,\n  inputAttrs: {},\n  isInline: false,\n  isInvalid: false,\n  isLabelHidden: false,\n  labelAttrs: {},\n  onChange: undefined,\n  maxWidth: undefined,\n  refCallback: undefined,\n  required: false,\n  showOptional: false,\n  type: undefined,\n  value: undefined,\n};\n\nconst InputField = (props) => {\n  const {\n    defaultValue,\n    disabled,\n    error,\n    errorIcon,\n    help,\n    hideRequired,\n    inputAttrs,\n    inputId,\n    isInline,\n    isInvalid,\n    isLabelHidden,\n    label,\n    labelAttrs,\n    maxWidth,\n    onChange,\n    refCallback,\n    required,\n    showOptional,\n    type,\n    value,\n    ...customProps\n  } = props;\n\n  let ariaDescriptionIds;\n\n  if (help && error && isInvalid) {\n    ariaDescriptionIds = `${inputId}-error ${inputId}-help`;\n  } else {\n    if (help) {\n      ariaDescriptionIds = `${inputId}-help`;\n    }\n\n    if (error && isInvalid) {\n      ariaDescriptionIds = `${inputId}-error`;\n    }\n  }\n\n  const inputType = type || inputAttrs.type;\n  return (\n    <Field\n      label={label}\n      labelAttrs={labelAttrs}\n      error={error}\n      errorIcon={errorIcon}\n      help={help}\n      hideRequired={hideRequired}\n      required={required}\n      showOptional={showOptional}\n      isInvalid={isInvalid}\n      isInline={isInline}\n      isLabelHidden={isLabelHidden}\n      htmlFor={inputId}\n      maxWidth={maxWidth}\n      {...customProps}\n    >\n      <Input\n        {...inputAttrs}\n        disabled={inputAttrs.disabled || disabled}\n        id={inputId}\n        type={inputType}\n        onChange={onChange}\n        value={value}\n        defaultValue={defaultValue}\n        refCallback={refCallback}\n        aria-describedby={ariaDescriptionIds}\n      />\n    </Field>\n  );\n};\n\nInputField.propTypes = propTypes;\nInputField.defaultProps = defaultProps;\n\nexport default InputField;\n"},2459:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=o(t(0)),i=o(t(918));function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){return r.default.createElement(i.default,{inputId:"profile-name",label:"Profile Name",help:"Note: This can not be changed in the future",type:"text",inputAttrs:{placeholder:"Profile Name",name:"profile"}})};n.default=a},2460:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport InputField from '../../../InputField';\n\nconst DefaultInputField = () => (\n  <InputField\n    inputId=\"profile-name\"\n    label=\"Profile Name\"\n    help=\"Note: This can not be changed in the future\"\n    type=\"text\"\n    inputAttrs={{\n      placeholder: 'Profile Name',\n      name: 'profile',\n    }}\n  />\n);\n\nexport default DefaultInputField;\n"},2461:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=o(t(0)),i=o(t(918));function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){return r.default.createElement(i.default,{inputId:"requiredField",label:"Required Input Field",help:"Note: This is help text",type:"text",required:!0,inputAttrs:{name:"requiredField"}})};n.default=a},2462:function(e,n,t){"use strict";t.r(n),n.default='import React from \'react\';\nimport InputField from \'../../../InputField\';\n\nconst RequiredInputField = () => (\n  <InputField\n    inputId="requiredField"\n    label="Required Input Field"\n    help="Note: This is help text"\n    type="text"\n    required\n    inputAttrs={{\n      name: \'requiredField\',\n    }}\n  />\n);\n\nexport default RequiredInputField;\n'},2463:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=o(t(0)),i=o(t(918));function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){return r.default.createElement(i.default,{inputId:"numeric-input",label:"Numeric Value",type:"number",inputAttrs:{placeholder:"Enter Digits",name:"numeric"}})};n.default=a},2464:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport InputField from '../../../InputField';\n\nconst NumberInputField = () => (\n  <InputField\n    inputId=\"numeric-input\"\n    label=\"Numeric Value\"\n    type=\"number\"\n    inputAttrs={{\n      placeholder: 'Enter Digits',\n      name: 'numeric',\n    }}\n  />\n);\n\nexport default NumberInputField;\n"},3701:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=m(t(0)),i=m(t(911)),o=m(t(2457)),a=t(1355),l=m(t(2458)),u=m(t(2459)),d=m(t(2460)),p=m(t(2461)),s=m(t(2462)),c=m(t(2463)),f=m(t(2464));function m(e){return e&&e.__esModule?e:{default:e}}var h=function(){return r.default.createElement(i.default,{packageName:a.name,readme:o.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(a.name),propsTables:[{componentName:"InputField",componentSrc:l.default}],examples:[{example:r.default.createElement(u.default,null),source:d.default},{example:r.default.createElement(p.default,null),source:s.default},{example:r.default.createElement(c.default,null),source:f.default}]})};n.default=h},912:function(e,n){},918:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=u(t(0)),i=u(t(2)),o=u(t(330)),a=u(t(334)),l=u(t(332));function u(e){return e&&e.__esModule?e:{default:e}}function d(){return(d=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s={inputId:i.default.string.isRequired,label:i.default.node.isRequired,defaultValue:i.default.oneOfType([i.default.string,i.default.number]),disabled:i.default.bool,error:i.default.node,errorIcon:i.default.element,help:i.default.node,hideRequired:i.default.bool,inputAttrs:i.default.object,isInline:i.default.bool,isInvalid:i.default.bool,isLabelHidden:i.default.bool,labelAttrs:i.default.object,maxWidth:i.default.string,onChange:i.default.func,refCallback:i.default.func,required:i.default.bool,showOptional:i.default.bool,type:i.default.string,value:i.default.oneOfType([i.default.string,i.default.number])},c={defaultValue:void 0,disabled:!1,error:null,errorIcon:r.default.createElement(a.default,null),help:null,hideRequired:!1,inputAttrs:{},isInline:!1,isInvalid:!1,isLabelHidden:!1,labelAttrs:{},onChange:void 0,maxWidth:void 0,refCallback:void 0,required:!1,showOptional:!1,type:void 0,value:void 0},f=function(e){var n,t=e.defaultValue,i=e.disabled,a=e.error,u=e.errorIcon,s=e.help,c=e.hideRequired,f=e.inputAttrs,m=e.inputId,h=e.isInline,b=e.isInvalid,I=e.isLabelHidden,g=e.label,y=e.labelAttrs,v=e.maxWidth,P=e.onChange,T=e.refCallback,w=e.required,F=e.showOptional,x=e.type,q=e.value,_=p(e,["defaultValue","disabled","error","errorIcon","help","hideRequired","inputAttrs","inputId","isInline","isInvalid","isLabelHidden","label","labelAttrs","maxWidth","onChange","refCallback","required","showOptional","type","value"]);s&&a&&b?n="".concat(m,"-error ").concat(m,"-help"):(s&&(n="".concat(m,"-help")),a&&b&&(n="".concat(m,"-error")));var C=x||f.type;return r.default.createElement(o.default,d({label:g,labelAttrs:y,error:a,errorIcon:u,help:s,hideRequired:c,required:w,showOptional:F,isInvalid:b,isInline:h,isLabelHidden:I,htmlFor:m,maxWidth:v},_),r.default.createElement(l.default,d({},f,{disabled:f.disabled||i,id:m,type:C,onChange:P,value:q,defaultValue:t,refCallback:T,"aria-describedby":n})))};f.propTypes=s,f.defaultProps=c;var m=f;n.default=m}}]);
//# sourceMappingURL=152-cc263124f1ba70009d2d.js.map