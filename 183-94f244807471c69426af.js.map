{"version":3,"sources":["webpack:///./node_modules/terra-paginator/lib/terra-dev-site/doc/paginator/example/ControlledPaginatorCommon.module.scss?ccf1","webpack:///./node_modules/terra-paginator/docs/ControlledREADME.md","webpack:///./node_modules/terra-paginator/src/ControlledPaginator.jsx","webpack:///./node_modules/terra-paginator/lib/terra-dev-site/doc/paginator/example/ControlledPaginatorExample.js","webpack:///./node_modules/terra-paginator/lib/ControlledPaginator.js","webpack:///./node_modules/terra-paginator/src/terra-dev-site/doc/paginator/example/ControlledPaginatorExample.jsx","webpack:///./node_modules/terra-paginator/lib/terra-dev-site/doc/paginator/PaginatorControlled.2.doc.js"],"names":["module","exports","Object","defineProperty","value","default","_react","_interopRequireDefault","_terraDialog","_terraButton","_ControlledPaginator","_bind","_ControlledPaginatorCommonModule","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","cx","bind","buildPage","len","arr","push","createElement","Math","floor","random","fillArray","_default","_React$Component","PaginatorExample","_this","call","instance","Constructor","TypeError","_classCallCheck","this","state","content","currentPage","changePages","protoProps","staticProps","subClass","superClass","create","_inherits","Component","index","setState","_this2","className","header","footer","onPageChange","selectedPage","totalCount","itemCountPerPage","text","onClick","_propTypes","_reactIntl","_terraResponsiveElement","_terraVisuallyHiddenText","_keycodeJs","_PaginatorModule","_paginationUtils","propTypes","func","isRequired","number","intl","intlShape","Paginator","handlePageChange","handleOnKeyDown","hasNavContext","buildPageButtons","reducedPaginator","event","preventDefault","Number","isNaN","currentTarget","attributes","_this3","nativeEvent","keyCode","KEY_RETURN","KEY_SPACE","totalPages","_this4","_this$props","pageSequence","pageSet","calculatePages","pageButtons","forEach","val","paginationLinkClassNames","formatMessage","id","pageNumber","tabIndex","concat","onKeyDown","type","_this$props2","previousPageIndex","nextPageIndex","_this$props3","role","tiny","small","defaultPaginator","injectIntl","_terraDocTemplate","_ControlledREADME","_package","_ControlledPaginatorExample","_ControlledPaginatorExample2","packageName","name","readme","srcPath","examples","title","example","source","propsTables","componentName","componentSrc"],"mappings":"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","file":"183-94f244807471c69426af.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator-wrapper\":\"ControlledPaginatorCommon-module__paginator-wrapper___1vq6i\"};","export default \"# Terra Controlled Paginator\\n\\nControlled version of the [Paginator](https://github.com/cerner/terra-core/packages/terra-paginator/docs/README.md) for when the pagination state needs to be managed by a parent component. To use this component, the selectedPage must be managed through the state of a parent component, and passed into this paginator through props.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-paginator`\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport ControlledPaginator from 'terra-paginator/lib/ControlledPaginator';\\n\\nclass ControlledPaginatorExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      currentPage: 1,\\n    };\\n\\n    this.changePages = this.changePages.bind(this);\\n  }\\n\\n  changePages(index) {\\n    this.setState({ currentPage: index });\\n  }\\n\\n  render() {\\n    return (\\n      <ControlledPaginator onPageChange={this.changePages} selectedPage={this.state.currentPage} totalCount={450} itemCountPerPage={10} />\\n    );\\n  }\\n}\\n```\\n\\n## Component Features\\n\\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport { injectIntl, intlShape } from 'react-intl';\\nimport ResponsiveElement from 'terra-responsive-element';\\nimport VisuallyHiddenText from 'terra-visually-hidden-text';\\nimport KeyCode from 'keycode-js';\\nimport styles from './Paginator.module.scss';\\nimport { calculatePages, pageSet } from './_paginationUtils';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Function to be executed when a navigation element is selected.\\n   */\\n  onPageChange: PropTypes.func.isRequired,\\n  /**\\n   * The active/selected page. Used to set the default selected page or maintain selection across renders.\\n   * Required when using totalCount and itemCountPerPage.\\n   */\\n  selectedPage: PropTypes.number.isRequired,\\n  /**\\n   * Total number of all items being paginated.\\n   * Required when using itemCountPerPage and selectedPage.\\n   */\\n  totalCount: PropTypes.number.isRequired,\\n  /**\\n   * Total number of items per page.\\n   * Required when using selectedPage and totalCount.\\n   */\\n  itemCountPerPage: PropTypes.number.isRequired,\\n  /**\\n   * @private\\n   * The intl object to be injected for translations.\\n   */\\n  intl: intlShape.isRequired,\\n};\\n\\nclass Paginator extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.handlePageChange = this.handlePageChange.bind(this);\\n    this.handleOnKeyDown = this.handleOnKeyDown.bind(this);\\n    this.hasNavContext = this.hasNavContext.bind(this);\\n    this.buildPageButtons = this.buildPageButtons.bind(this);\\n    this.reducedPaginator = this.reducedPaginator.bind(this);\\n  }\\n\\n  handlePageChange(index) {\\n    return (event) => {\\n      event.preventDefault();\\n\\n      if (Number.isNaN(Number(index))) {\\n        this.props.onPageChange(event.currentTarget.attributes['aria-label'].value);\\n\\n        return false;\\n      }\\n\\n      this.props.onPageChange(index);\\n\\n      return false;\\n    };\\n  }\\n\\n  handleOnKeyDown(index) {\\n    return (event) => {\\n      if (event.nativeEvent.keyCode === KeyCode.KEY_RETURN || event.nativeEvent.keyCode === KeyCode.KEY_SPACE) {\\n        event.preventDefault();\\n\\n        if (Number.isNaN(Number(index))) {\\n          this.props.onPageChange(event.currentTarget.attributes['aria-label'].value);\\n\\n          return false;\\n        }\\n\\n        this.props.onPageChange(index);\\n      }\\n\\n      return false;\\n    };\\n  }\\n\\n  buildPageButtons(totalPages, onClick) {\\n    const {\\n      totalCount,\\n      itemCountPerPage,\\n      selectedPage,\\n      intl,\\n    } = this.props;\\n    const pageSequence = pageSet(selectedPage, calculatePages(totalCount, itemCountPerPage));\\n    const pageButtons = [];\\n\\n    pageSequence.forEach((val) => {\\n      const paginationLinkClassNames = cx([\\n        'nav-link',\\n        val === selectedPage ? 'is-selected' : null,\\n      ]);\\n\\n      if (val > totalPages) {\\n        return;\\n      }\\n      pageButtons.push((\\n        <button\\n          aria-label={intl.formatMessage({ id: 'Terra.paginator.pageIndex' }, { pageNumber: val })}\\n          aria-current={val === selectedPage && 'page'}\\n          className={paginationLinkClassNames}\\n          tabIndex={val === selectedPage ? null : '0'}\\n          key={`pageButton_${val}`}\\n          onClick={onClick(val)}\\n          onKeyDown={this.handleOnKeyDown(val)}\\n          type=\\\"button\\\"\\n        >\\n          {val}\\n        </button>));\\n    });\\n\\n    return pageButtons;\\n  }\\n\\n  hasNavContext() {\\n    return this.props.totalCount && this.props.itemCountPerPage;\\n  }\\n\\n  defaultPaginator() {\\n    const totalPages = calculatePages(this.props.totalCount, this.props.itemCountPerPage);\\n    const { selectedPage, intl } = this.props;\\n    const previousPageIndex = selectedPage === 1 ? 1 : selectedPage - 1;\\n    const nextPageIndex = selectedPage === totalPages ? totalPages : selectedPage + 1;\\n\\n    const fullView = (\\n      <div className={cx(['paginator', !this.hasNavContext() && 'pageless'])}>\\n        {\\n          this.hasNavContext() && (\\n          <button\\n            aria-disabled={selectedPage === 1}\\n            aria-label={intl.formatMessage({ id: 'Terra.paginator.first' })}\\n            className={cx(['nav-link', 'left-controls', selectedPage === 1 && 'is-disabled'])}\\n            tabIndex={selectedPage === 1 ? null : '0'}\\n            onClick={this.handlePageChange(1)}\\n            onKeyDown={this.handleOnKeyDown(1)}\\n            type=\\\"button\\\"\\n          >\\n            {intl.formatMessage({ id: 'Terra.paginator.first' })}\\n          </button>\\n          )\\n        }\\n        <button\\n          aria-disabled={selectedPage === 1}\\n          aria-label={intl.formatMessage({ id: 'Terra.paginator.previous' })}\\n          className={cx(['nav-link', 'left-controls', 'previous', selectedPage === 1 && 'is-disabled'])}\\n          tabIndex={selectedPage === 1 ? null : '0'}\\n          onClick={this.handlePageChange(previousPageIndex)}\\n          onKeyDown={this.handleOnKeyDown(previousPageIndex)}\\n          type=\\\"button\\\"\\n        >\\n          <span className={cx('icon')} />\\n          {intl.formatMessage({ id: 'Terra.paginator.previous' })}\\n        </button>\\n        {this.hasNavContext() && this.buildPageButtons(totalPages, this.handlePageChange)}\\n        <button\\n          aria-disabled={selectedPage === totalPages}\\n          aria-label={intl.formatMessage({ id: 'Terra.paginator.next' })}\\n          className={cx(['nav-link', 'right-controls', 'next', selectedPage === totalPages && 'is-disabled'])}\\n          tabIndex={selectedPage === totalPages ? null : '0'}\\n          onClick={this.handlePageChange(nextPageIndex)}\\n          onKeyDown={this.handleOnKeyDown(nextPageIndex)}\\n          type=\\\"button\\\"\\n        >\\n          {intl.formatMessage({ id: 'Terra.paginator.next' })}\\n          <span className={cx('icon')} />\\n        </button>\\n        {\\n          this.hasNavContext() && (\\n          <button\\n            aria-disabled={selectedPage === totalPages}\\n            aria-label={intl.formatMessage({ id: 'Terra.paginator.last' })}\\n            className={cx(['nav-link', 'right-controls', selectedPage === totalPages && 'is-disabled'])}\\n            tabIndex={selectedPage === totalPages ? null : '0'}\\n            onClick={this.handlePageChange(totalPages)}\\n            onKeyDown={this.handleOnKeyDown(totalPages)}\\n            type=\\\"button\\\"\\n          >\\n            {intl.formatMessage({ id: 'Terra.paginator.last' })}\\n          </button>\\n          )\\n        }\\n      </div>\\n    );\\n\\n    return fullView;\\n  }\\n\\n  reducedPaginator() {\\n    const totalPages = calculatePages(this.props.totalCount, this.props.itemCountPerPage);\\n    const { selectedPage, intl } = this.props;\\n    const previousPageIndex = selectedPage === 1 ? 1 : selectedPage - 1;\\n    const nextPageIndex = selectedPage === totalPages ? totalPages : selectedPage + 1;\\n\\n    const reducedView = (\\n      <div className={cx(['paginator', !this.hasNavContext() && 'pageless'])} role=\\\"navigation\\\" aria-label=\\\"pagination\\\">\\n        {\\n          this.hasNavContext() && (\\n          <button\\n            aria-disabled={selectedPage === 1}\\n            aria-label={intl.formatMessage({ id: 'Terra.paginator.first' })}\\n            className={cx(['nav-link', 'left-controls', selectedPage === 1 && 'is-disabled'])}\\n            tabIndex={selectedPage === 1 ? null : '0'}\\n            onClick={this.handlePageChange(1)}\\n            onKeyDown={this.handleOnKeyDown(1)}\\n            type=\\\"button\\\"\\n          >\\n            {intl.formatMessage({ id: 'Terra.paginator.first' })}\\n          </button>\\n          )\\n        }\\n        <button\\n          aria-disabled={selectedPage === 1}\\n          aria-label={intl.formatMessage({ id: 'Terra.paginator.previous' })}\\n          className={cx(['nav-link', 'left-controls', 'previous', 'icon-only', selectedPage === 1 && 'is-disabled'])}\\n          tabIndex={selectedPage === 1 ? null : '0'}\\n          onClick={this.handlePageChange(previousPageIndex)}\\n          onKeyDown={this.handleOnKeyDown(previousPageIndex)}\\n          type=\\\"button\\\"\\n        >\\n          <VisuallyHiddenText text={intl.formatMessage({ id: 'Terra.paginator.previous' })} />\\n          <span className={cx('icon')} />\\n        </button>\\n        {this.hasNavContext() && intl.formatMessage({ id: 'Terra.paginator.pageIndex' }, { pageNumber: selectedPage })}\\n        <button\\n          aria-disabled={selectedPage === totalPages}\\n          aria-label={intl.formatMessage({ id: 'Terra.paginator.next' })}\\n          className={cx(['nav-link', 'right-controls', 'next', 'icon-only', selectedPage === totalPages && 'is-disabled'])}\\n          tabIndex={selectedPage === totalPages ? null : '0'}\\n          onClick={this.handlePageChange(nextPageIndex)}\\n          onKeyDown={this.handleOnKeyDown(nextPageIndex)}\\n          type=\\\"button\\\"\\n        >\\n          <VisuallyHiddenText text={intl.formatMessage({ id: 'Terra.paginator.next' })} />\\n          <span className={cx('icon')} />\\n        </button>\\n        {\\n          this.hasNavContext() && (\\n          <button\\n            aria-disabled={selectedPage === totalPages}\\n            aria-label={intl.formatMessage({ id: 'Terra.paginator.last' })}\\n            className={cx(['nav-link', 'right-controls', selectedPage === totalPages && 'is-disabled'])}\\n            tabIndex={selectedPage === totalPages ? null : '0'}\\n            onClick={this.handlePageChange(totalPages)}\\n            onKeyDown={this.handleOnKeyDown(totalPages)}\\n            type=\\\"button\\\"\\n          >\\n            {intl.formatMessage({ id: 'Terra.paginator.last' })}\\n          </button>\\n          )\\n        }\\n      </div>\\n    );\\n\\n    return reducedView;\\n  }\\n\\n  render() {\\n    return <ResponsiveElement tiny={this.reducedPaginator()} small={this.defaultPaginator()} />;\\n  }\\n}\\n\\nPaginator.propTypes = propTypes;\\n\\nexport default injectIntl(Paginator);\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDialog = _interopRequireDefault(require(\"terra-dialog\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _ControlledPaginator = _interopRequireDefault(require(\"terra-paginator/lib/ControlledPaginator\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ControlledPaginatorCommonModule = _interopRequireDefault(require(\"./ControlledPaginatorCommon.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_ControlledPaginatorCommonModule.default);\n\nvar totalCount = 450;\n\nvar fillArray = function fillArray(value, len) {\n  var arr = [];\n\n  for (var i = 0; i < len; i += 1) {\n    arr.push(_react.default.createElement(\"p\", {\n      key: Math.floor(Math.random() * Math.floor(100000))\n    }, value));\n  }\n\n  return arr;\n};\n\nvar buildPage = function buildPage() {\n  var fullContent = [];\n  var content = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. ' + 'Fusce porttitor ullamcorper nisi, vel tincidunt dui pharetra vel. ' + 'Morbi eu rutrum nibh, sit amet placerat libero. Integer vel dapibus nibh. ' + 'Donec tempor mi vitae lorem congue, ut ultrices metus feugiat. Sed non commodo felis. ' + 'Aliquam eget maximus dui, ut rhoncus augue.';\n  fullContent = fillArray(content, 10);\n  return fullContent;\n};\n\nvar PaginatorExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PaginatorExample, _React$Component);\n\n  function PaginatorExample(props) {\n    var _this;\n\n    _classCallCheck(this, PaginatorExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaginatorExample).call(this, props));\n    _this.state = {\n      content: buildPage(),\n      currentPage: 1\n    };\n    _this.changePages = _this.changePages.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PaginatorExample, [{\n    key: \"changePages\",\n    value: function changePages(index) {\n      this.setState({\n        currentPage: index\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(\"div\", {\n        className: cx('paginator-wrapper')\n      }, _react.default.createElement(_terraDialog.default, {\n        header: _react.default.createElement(\"h1\", null, \"Page\", this.state.currentPage),\n        footer: _react.default.createElement(_ControlledPaginator.default, {\n          onPageChange: this.changePages,\n          selectedPage: this.state.currentPage,\n          totalCount: totalCount,\n          itemCountPerPage: 10\n        })\n      }, _react.default.createElement(\"div\", null, _react.default.createElement(_terraButton.default, {\n        text: \"Set Page to 9\",\n        onClick: function onClick() {\n          _this2.setState({\n            currentPage: 9\n          });\n        }\n      }), _react.default.createElement(_terraButton.default, {\n        text: \"Set Page to 15\",\n        onClick: function onClick() {\n          _this2.setState({\n            currentPage: 15\n          });\n        }\n      }), _react.default.createElement(_terraButton.default, {\n        text: \"Set Page to 45\",\n        onClick: function onClick() {\n          _this2.setState({\n            currentPage: 45\n          });\n        }\n      })), this.state.content));\n    }\n  }]);\n\n  return PaginatorExample;\n}(_react.default.Component);\n\nvar _default = PaginatorExample;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _reactIntl = require(\"react-intl\");\n\nvar _terraResponsiveElement = _interopRequireDefault(require(\"terra-responsive-element\"));\n\nvar _terraVisuallyHiddenText = _interopRequireDefault(require(\"terra-visually-hidden-text\"));\n\nvar _keycodeJs = _interopRequireDefault(require(\"keycode-js\"));\n\nvar _PaginatorModule = _interopRequireDefault(require(\"./Paginator.module.scss\"));\n\nvar _paginationUtils = require(\"./_paginationUtils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_PaginatorModule.default);\n\nvar propTypes = {\n  /**\n   * Function to be executed when a navigation element is selected.\n   */\n  onPageChange: _propTypes.default.func.isRequired,\n\n  /**\n   * The active/selected page. Used to set the default selected page or maintain selection across renders.\n   * Required when using totalCount and itemCountPerPage.\n   */\n  selectedPage: _propTypes.default.number.isRequired,\n\n  /**\n   * Total number of all items being paginated.\n   * Required when using itemCountPerPage and selectedPage.\n   */\n  totalCount: _propTypes.default.number.isRequired,\n\n  /**\n   * Total number of items per page.\n   * Required when using selectedPage and totalCount.\n   */\n  itemCountPerPage: _propTypes.default.number.isRequired,\n\n  /**\n   * @private\n   * The intl object to be injected for translations.\n   */\n  intl: _reactIntl.intlShape.isRequired\n};\n\nvar Paginator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Paginator, _React$Component);\n\n  function Paginator(props) {\n    var _this;\n\n    _classCallCheck(this, Paginator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Paginator).call(this, props));\n    _this.handlePageChange = _this.handlePageChange.bind(_assertThisInitialized(_this));\n    _this.handleOnKeyDown = _this.handleOnKeyDown.bind(_assertThisInitialized(_this));\n    _this.hasNavContext = _this.hasNavContext.bind(_assertThisInitialized(_this));\n    _this.buildPageButtons = _this.buildPageButtons.bind(_assertThisInitialized(_this));\n    _this.reducedPaginator = _this.reducedPaginator.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Paginator, [{\n    key: \"handlePageChange\",\n    value: function handlePageChange(index) {\n      var _this2 = this;\n\n      return function (event) {\n        event.preventDefault();\n\n        if (Number.isNaN(Number(index))) {\n          _this2.props.onPageChange(event.currentTarget.attributes['aria-label'].value);\n\n          return false;\n        }\n\n        _this2.props.onPageChange(index);\n\n        return false;\n      };\n    }\n  }, {\n    key: \"handleOnKeyDown\",\n    value: function handleOnKeyDown(index) {\n      var _this3 = this;\n\n      return function (event) {\n        if (event.nativeEvent.keyCode === _keycodeJs.default.KEY_RETURN || event.nativeEvent.keyCode === _keycodeJs.default.KEY_SPACE) {\n          event.preventDefault();\n\n          if (Number.isNaN(Number(index))) {\n            _this3.props.onPageChange(event.currentTarget.attributes['aria-label'].value);\n\n            return false;\n          }\n\n          _this3.props.onPageChange(index);\n        }\n\n        return false;\n      };\n    }\n  }, {\n    key: \"buildPageButtons\",\n    value: function buildPageButtons(totalPages, onClick) {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          totalCount = _this$props.totalCount,\n          itemCountPerPage = _this$props.itemCountPerPage,\n          selectedPage = _this$props.selectedPage,\n          intl = _this$props.intl;\n      var pageSequence = (0, _paginationUtils.pageSet)(selectedPage, (0, _paginationUtils.calculatePages)(totalCount, itemCountPerPage));\n      var pageButtons = [];\n      pageSequence.forEach(function (val) {\n        var paginationLinkClassNames = cx(['nav-link', val === selectedPage ? 'is-selected' : null]);\n\n        if (val > totalPages) {\n          return;\n        }\n\n        pageButtons.push(_react.default.createElement(\"button\", {\n          \"aria-label\": intl.formatMessage({\n            id: 'Terra.paginator.pageIndex'\n          }, {\n            pageNumber: val\n          }),\n          \"aria-current\": val === selectedPage && 'page',\n          className: paginationLinkClassNames,\n          tabIndex: val === selectedPage ? null : '0',\n          key: \"pageButton_\".concat(val),\n          onClick: onClick(val),\n          onKeyDown: _this4.handleOnKeyDown(val),\n          type: \"button\"\n        }, val));\n      });\n      return pageButtons;\n    }\n  }, {\n    key: \"hasNavContext\",\n    value: function hasNavContext() {\n      return this.props.totalCount && this.props.itemCountPerPage;\n    }\n  }, {\n    key: \"defaultPaginator\",\n    value: function defaultPaginator() {\n      var totalPages = (0, _paginationUtils.calculatePages)(this.props.totalCount, this.props.itemCountPerPage);\n      var _this$props2 = this.props,\n          selectedPage = _this$props2.selectedPage,\n          intl = _this$props2.intl;\n      var previousPageIndex = selectedPage === 1 ? 1 : selectedPage - 1;\n      var nextPageIndex = selectedPage === totalPages ? totalPages : selectedPage + 1;\n\n      var fullView = _react.default.createElement(\"div\", {\n        className: cx(['paginator', !this.hasNavContext() && 'pageless'])\n      }, this.hasNavContext() && _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === 1,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.first'\n        }),\n        className: cx(['nav-link', 'left-controls', selectedPage === 1 && 'is-disabled']),\n        tabIndex: selectedPage === 1 ? null : '0',\n        onClick: this.handlePageChange(1),\n        onKeyDown: this.handleOnKeyDown(1),\n        type: \"button\"\n      }, intl.formatMessage({\n        id: 'Terra.paginator.first'\n      })), _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === 1,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.previous'\n        }),\n        className: cx(['nav-link', 'left-controls', 'previous', selectedPage === 1 && 'is-disabled']),\n        tabIndex: selectedPage === 1 ? null : '0',\n        onClick: this.handlePageChange(previousPageIndex),\n        onKeyDown: this.handleOnKeyDown(previousPageIndex),\n        type: \"button\"\n      }, _react.default.createElement(\"span\", {\n        className: cx('icon')\n      }), intl.formatMessage({\n        id: 'Terra.paginator.previous'\n      })), this.hasNavContext() && this.buildPageButtons(totalPages, this.handlePageChange), _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === totalPages,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.next'\n        }),\n        className: cx(['nav-link', 'right-controls', 'next', selectedPage === totalPages && 'is-disabled']),\n        tabIndex: selectedPage === totalPages ? null : '0',\n        onClick: this.handlePageChange(nextPageIndex),\n        onKeyDown: this.handleOnKeyDown(nextPageIndex),\n        type: \"button\"\n      }, intl.formatMessage({\n        id: 'Terra.paginator.next'\n      }), _react.default.createElement(\"span\", {\n        className: cx('icon')\n      })), this.hasNavContext() && _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === totalPages,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.last'\n        }),\n        className: cx(['nav-link', 'right-controls', selectedPage === totalPages && 'is-disabled']),\n        tabIndex: selectedPage === totalPages ? null : '0',\n        onClick: this.handlePageChange(totalPages),\n        onKeyDown: this.handleOnKeyDown(totalPages),\n        type: \"button\"\n      }, intl.formatMessage({\n        id: 'Terra.paginator.last'\n      })));\n\n      return fullView;\n    }\n  }, {\n    key: \"reducedPaginator\",\n    value: function reducedPaginator() {\n      var totalPages = (0, _paginationUtils.calculatePages)(this.props.totalCount, this.props.itemCountPerPage);\n      var _this$props3 = this.props,\n          selectedPage = _this$props3.selectedPage,\n          intl = _this$props3.intl;\n      var previousPageIndex = selectedPage === 1 ? 1 : selectedPage - 1;\n      var nextPageIndex = selectedPage === totalPages ? totalPages : selectedPage + 1;\n\n      var reducedView = _react.default.createElement(\"div\", {\n        className: cx(['paginator', !this.hasNavContext() && 'pageless']),\n        role: \"navigation\",\n        \"aria-label\": \"pagination\"\n      }, this.hasNavContext() && _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === 1,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.first'\n        }),\n        className: cx(['nav-link', 'left-controls', selectedPage === 1 && 'is-disabled']),\n        tabIndex: selectedPage === 1 ? null : '0',\n        onClick: this.handlePageChange(1),\n        onKeyDown: this.handleOnKeyDown(1),\n        type: \"button\"\n      }, intl.formatMessage({\n        id: 'Terra.paginator.first'\n      })), _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === 1,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.previous'\n        }),\n        className: cx(['nav-link', 'left-controls', 'previous', 'icon-only', selectedPage === 1 && 'is-disabled']),\n        tabIndex: selectedPage === 1 ? null : '0',\n        onClick: this.handlePageChange(previousPageIndex),\n        onKeyDown: this.handleOnKeyDown(previousPageIndex),\n        type: \"button\"\n      }, _react.default.createElement(_terraVisuallyHiddenText.default, {\n        text: intl.formatMessage({\n          id: 'Terra.paginator.previous'\n        })\n      }), _react.default.createElement(\"span\", {\n        className: cx('icon')\n      })), this.hasNavContext() && intl.formatMessage({\n        id: 'Terra.paginator.pageIndex'\n      }, {\n        pageNumber: selectedPage\n      }), _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === totalPages,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.next'\n        }),\n        className: cx(['nav-link', 'right-controls', 'next', 'icon-only', selectedPage === totalPages && 'is-disabled']),\n        tabIndex: selectedPage === totalPages ? null : '0',\n        onClick: this.handlePageChange(nextPageIndex),\n        onKeyDown: this.handleOnKeyDown(nextPageIndex),\n        type: \"button\"\n      }, _react.default.createElement(_terraVisuallyHiddenText.default, {\n        text: intl.formatMessage({\n          id: 'Terra.paginator.next'\n        })\n      }), _react.default.createElement(\"span\", {\n        className: cx('icon')\n      })), this.hasNavContext() && _react.default.createElement(\"button\", {\n        \"aria-disabled\": selectedPage === totalPages,\n        \"aria-label\": intl.formatMessage({\n          id: 'Terra.paginator.last'\n        }),\n        className: cx(['nav-link', 'right-controls', selectedPage === totalPages && 'is-disabled']),\n        tabIndex: selectedPage === totalPages ? null : '0',\n        onClick: this.handlePageChange(totalPages),\n        onKeyDown: this.handleOnKeyDown(totalPages),\n        type: \"button\"\n      }, intl.formatMessage({\n        id: 'Terra.paginator.last'\n      })));\n\n      return reducedView;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_terraResponsiveElement.default, {\n        tiny: this.reducedPaginator(),\n        small: this.defaultPaginator()\n      });\n    }\n  }]);\n\n  return Paginator;\n}(_react.default.Component);\n\nPaginator.propTypes = propTypes;\n\nvar _default = (0, _reactIntl.injectIntl)(Paginator);\n\nexports.default = _default;","export default \"import React from 'react';\\nimport Dialog from 'terra-dialog';\\nimport Button from 'terra-button';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport ControlledPaginator from 'terra-paginator/lib/ControlledPaginator';\\nimport classNames from 'classnames/bind';\\nimport styles from './ControlledPaginatorCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst totalCount = 450;\\n\\nconst fillArray = (value, len) => {\\n  const arr = [];\\n  for (let i = 0; i < len; i += 1) {\\n    arr.push(<p key={Math.floor(Math.random() * Math.floor(100000))}>{value}</p>);\\n  }\\n  return arr;\\n};\\n\\nconst buildPage = () => {\\n  let fullContent = [];\\n  const content = ('Lorem ipsum dolor sit amet, consectetur adipiscing elit. '\\n    + 'Fusce porttitor ullamcorper nisi, vel tincidunt dui pharetra vel. '\\n    + 'Morbi eu rutrum nibh, sit amet placerat libero. Integer vel dapibus nibh. '\\n    + 'Donec tempor mi vitae lorem congue, ut ultrices metus feugiat. Sed non commodo felis. '\\n    + 'Aliquam eget maximus dui, ut rhoncus augue.');\\n\\n  fullContent = fillArray(content, 10);\\n\\n  return (\\n    fullContent\\n  );\\n};\\n\\nclass PaginatorExample extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      content: buildPage(),\\n      currentPage: 1,\\n    };\\n\\n    this.changePages = this.changePages.bind(this);\\n  }\\n\\n  changePages(index) {\\n    this.setState({ currentPage: index });\\n  }\\n\\n  render() {\\n    return (\\n      <div className={cx('paginator-wrapper')}>\\n        <Dialog\\n          header={(\\n            <h1>\\nPage\\n              {this.state.currentPage}\\n            </h1>\\n)}\\n          footer={<ControlledPaginator onPageChange={this.changePages} selectedPage={this.state.currentPage} totalCount={totalCount} itemCountPerPage={10} />}\\n        >\\n          <div>\\n            <Button text=\\\"Set Page to 9\\\" onClick={() => { this.setState({ currentPage: 9 }); }} />\\n            <Button text=\\\"Set Page to 15\\\" onClick={() => { this.setState({ currentPage: 15 }); }} />\\n            <Button text=\\\"Set Page to 45\\\" onClick={() => { this.setState({ currentPage: 45 }); }} />\\n          </div>\\n          {this.state.content}\\n        </Dialog>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default PaginatorExample;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _ControlledREADME = _interopRequireDefault(require(\"../../../../docs/ControlledREADME.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _ControlledPaginator = _interopRequireDefault(require(\"!raw-loader!../../../../src/ControlledPaginator\"));\n\nvar _ControlledPaginatorExample = _interopRequireDefault(require(\"./example/ControlledPaginatorExample\"));\n\nvar _ControlledPaginatorExample2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/paginator/example/ControlledPaginatorExample\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Example Files\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _ControlledREADME.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Controlled Paginator Example',\n      example: _react.default.createElement(_ControlledPaginatorExample.default, null),\n      source: _ControlledPaginatorExample2.default\n    }],\n    propsTables: [{\n      componentName: 'Controlled Paginator',\n      componentSrc: _ControlledPaginator.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}