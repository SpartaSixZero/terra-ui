(window.webpackJsonp=window.webpackJsonp||[]).push([[137,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],{1098:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),r=function(e){var t=e.children;return a.default.createElement("div",{style:{height:"300px",width:"100%",position:"relative",border:"1px solid black"}},t)};t.default=r},1116:function(e,t,n){e.exports={placeholder:"InfiniteListDocExampleCommon-module__placeholder___1xFyT"}},1135:function(e){e.exports=JSON.parse('{"_from":"terra-infinite-list@^3.0.0","_id":"terra-infinite-list@3.12.0","_inBundle":false,"_integrity":"sha512-OnfSzrWEigeaaovxKd4DZNffDyCKcBnEt/1iQCRctbGq+2F8Vs+UBfNAYbTa5QnBYFF/Xc9iYGIaLKX1ZxpIAA==","_location":"/terra-infinite-list","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-infinite-list@^3.0.0","name":"terra-infinite-list","escapedName":"terra-infinite-list","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/","/terra-dev-site"],"_resolved":"https://registry.npmjs.org/terra-infinite-list/-/terra-infinite-list-3.12.0.tgz","_shasum":"b5d814c2bc151fb897b201e206412e4ad8e7f0d9","_spec":"terra-infinite-list@^3.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","resize-observer-polyfill":"^1.4.1","terra-list":"^4.0.0","terra-visually-hidden-text":"^2.0.0"},"deprecated":false,"description":"The infinite list component provides virtual dom management and data request callbacks to manage large data sets within a list.","devDependencies":{"terra-doc-template":"^2.2.0"},"gitHead":"f763d8f2d030d85d834554d5c2eca6f2917f2eac","homepage":"https://github.com/cerner/terra-framework#readme","keywords":["Cerner","Terra","terra-infinite-list","InfiniteList","Infinite","List","Virtualization","UI"],"license":"Apache-2.0","main":"lib/index.js","name":"terra-infinite-list","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","props-table":"props-table ./src/InfiniteList.jsx --out-dir ./docs/props-table","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"3.12.0"}')},2960:function(e,t,n){"use strict";n.r(t),t.default="# Terra InfiniteList - Sections\n\nTo achieve sections within the InfiniteList the only supported implementation is directly consuming the static variant of the `SectionHeader` component. Expand/collapse functionality is not supported within the infinite list. \n\n## Map Section Structure\nSo in our first step a `SectionHeader` needs to be created for each associated section. We'll add it to the initialization of an array that will be expanded in the following steps.\n```jsx\n  const createSection = (sectionData) => {\n    const section = [\n      <SectionHeader\n        key={sectionData.key}\n        title={sectionData.title}\n      />,\n    ];\n    return section;\n  };\n```\nNext we'll create an array with the first item being our section header, and then loop through the associated child items for the section appending them to the initial array.\n```jsx\n  const createSection = (sectionData) => {\n    const section = [\n      <SectionHeader\n        key={sectionData.key}\n        title={sectionData.title}\n      />,\n    ];\n    sectionData.childItems.forEach(childItem => section.push(createListItem(childItem)));\n    return section;\n  };\n```\n## Unpack Data\nWe can then implement the unpack of our data into our list items.\n```jsx\nconst createListItem = itemData => (\n  <Item key={itemData.key}>\n    <Placeholder title={itemData.title} />\n  </Item>\n);\n\nconst createSections = data => data.map(section => createSection(section));\n```\nThen we can implement a method to loop through our data and create the section with our methods and call it from our render method.\n```jsx\nconst InfiniteListSection = () => (\n  <MyExampleContainer>\n    <InfiniteList\n      dividerStyle=\"standard\"\n      isFinishedLoading\n    >\n      {createSections(mockData)}\n    </InfiniteList>\n  </MyExampleContainer>\n);\n```\n\nUsing these steps we get the following example:\n"},2961:function(e,t,n){"use strict";var i=n(32),a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=i(n(343)),l=a(n(914)),s=a(n(4)),c=a(n(2962)),d=a(n(1098)),u=a(n(1116)),m=s.default.bind(u.default),f=function(e){var t=[r.default.createElement(o.SectionHeader,{key:e.key,title:e.title})];return e.childItems.forEach(function(e){return t.push((n=e,r.default.createElement(o.Item,{key:n.key},r.default.createElement(l.default,{title:n.title,className:m("placeholder")}))));var n}),t},p=function(){return r.default.createElement(d.default,null,r.default.createElement(o.default,{dividerStyle:"standard",isFinishedLoading:!0},c.default.map(function(e){return f(e)})))};t.default=p},2962:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=[{title:"Section 0",key:"unique-key-0",childItems:[{title:"Item 0-0",key:"unique-0-0"},{title:"Item 0-1",key:"unique-0-1"},{title:"Item 0-2",key:"unique-0-2"},{title:"Item 0-3",key:"unique-0-3"},{title:"Item 0-4",key:"unique-0-4"},{title:"Item 0-5",key:"unique-0-5"}]},{title:"Section 1",key:"unique-key-1",childItems:[{title:"Item 1-0",key:"unique-1-0"},{title:"Item 1-1",key:"unique-1-1"},{title:"Item 1-2",key:"unique-1-2"},{title:"Item 1-3",key:"unique-1-3"},{title:"Item 1-4",key:"unique-1-4"},{title:"Item 1-5",key:"unique-1-5"}]},{title:"Section 2",key:"unique-key-2",childItems:[{title:"Item 3-0",key:"unique-3-0"},{title:"Item 3-1",key:"unique-3-1"},{title:"Item 3-2",key:"unique-3-2"},{title:"Item 3-3",key:"unique-3-3"},{title:"Item 3-4",key:"unique-3-4"},{title:"Item 3-5",key:"unique-3-5"}]},{title:"Section 4",key:"unique-key-4",childItems:[{title:"Item 4-0",key:"unique-4-0"},{title:"Item 4-1",key:"unique-4-1"},{title:"Item 4-2",key:"unique-4-2"},{title:"Item 4-3",key:"unique-4-3"},{title:"Item 4-4",key:"unique-4-4"},{title:"Item 4-5",key:"unique-4-5"}]}];t.default=i},2963:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\n/* eslint-disable import/no-unresolved, import/extensions */\nimport InfiniteList, { Item, SectionHeader } from 'terra-infinite-list/lib/index';\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\nimport classNames from 'classnames/bind';\n/* eslint-enable import/no-unresolved, import/extensions */\n\nimport mockData from './mock-data/mock-section';\nimport MyExampleContainer from '../common/MyExampleContainer';\nimport styles from '../example/InfiniteListDocExampleCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst createListItem = itemData => (\n  <Item key={itemData.key}>\n    <Placeholder title={itemData.title} className={cx('placeholder')} />\n  </Item>\n);\n\nconst createSection = (sectionData) => {\n  const section = [\n    <SectionHeader\n      key={sectionData.key}\n      title={sectionData.title}\n    />,\n  ];\n  sectionData.childItems.forEach(childItem => section.push(createListItem(childItem)));\n  return section;\n};\n\nconst createSections = data => data.map(section => createSection(section));\n\nconst InfiniteListSection = () => (\n  <MyExampleContainer>\n    <InfiniteList\n      dividerStyle=\"standard\"\n      isFinishedLoading\n    >\n      {createSections(mockData)}\n    </InfiniteList>\n  </MyExampleContainer>\n);\n\nexport default InfiniteListSection;\n"},3743:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),r=i(n(911)),o=n(1135),l=i(n(2960)),s=i(n(2961)),c=i(n(2963)),d=function(){return a.default.createElement(r.default,{packageName:o.name,readme:l.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(o.name),examples:[{title:"Sections Header Infinite List",example:a.default.createElement(s.default,null),source:c.default}]})};t.default=d},912:function(e,t){},914:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=l(n(0)),a=l(n(2)),r=l(n(4)),o=l(n(916));function l(e){return e&&e.__esModule?e:{default:e}}function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.default.bind(o.default),u={variant:a.default.oneOf(["light","dark"]),title:a.default.string},m=function(e){var t=e.variant,n=e.title,a=c(e,["variant","title"]),r=d(["placeholder",a.className]),o=d(["inner","is-".concat(t)]);return i.default.createElement("div",s({},a,{className:r}),i.default.createElement("div",{className:o},i.default.createElement("h2",null,n)))};m.propTypes=u,m.defaultProps={variant:"dark",title:""};var f=m;t.default=f},916:function(e,t,n){e.exports={placeholder:"Placeholder-module__placeholder___37I0I",inner:"Placeholder-module__inner___2DX7N","is-light":"Placeholder-module__is-light___3__YD","is-dark":"Placeholder-module__is-dark___9wQwQ"}}}]);
//# sourceMappingURL=137-0c7bbf4f4dc6282ac062.js.map