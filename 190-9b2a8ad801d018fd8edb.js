(window.webpackJsonp=window.webpackJsonp||[]).push([[190,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],{1352:function(e){e.exports=JSON.parse('{"_from":"terra-doc-template@^2.0.0","_id":"terra-doc-template@2.15.0","_inBundle":false,"_integrity":"sha512-OuA2nPQ58m9SBmfZWYgkYNQ7Vsje3q+Ug191diHOPjl+6n4RjE5n2R+krPKZ85bennin7cWFieE3tezoLkBevg==","_location":"/terra-doc-template","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-doc-template@^2.0.0","name":"terra-doc-template","escapedName":"terra-doc-template","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/","/terra-action-footer","/terra-action-header","/terra-alert","/terra-application","/terra-application-navigation","/terra-arrange","/terra-avatar","/terra-badge","/terra-base","/terra-breakpoints","/terra-button","/terra-button-group","/terra-card","/terra-clinical-data-grid","/terra-clinical-detail-view","/terra-clinical-header","/terra-clinical-item-collection","/terra-clinical-item-collection/terra-list","/terra-clinical-item-collection/terra-responsive-element","/terra-clinical-item-display","/terra-clinical-item-view","/terra-clinical-label-value-view","/terra-clinical-onset-picker","/terra-clinical-onset-picker/terra-i18n","/terra-clinical-onset-picker/terra-responsive-element","/terra-content-container","/terra-demographics-banner","/terra-dialog","/terra-divider","/terra-dynamic-grid","/terra-form-checkbox","/terra-form-field","/terra-form-fieldset","/terra-form-input","/terra-form-radio","/terra-form-select","/terra-form-textarea","/terra-grid","/terra-heading","/terra-hyperlink","/terra-i18n","/terra-icon","/terra-image","/terra-list","/terra-navigation-prompt","/terra-overlay","/terra-paginator","/terra-profile-image","/terra-progress-bar","/terra-responsive-element","/terra-scroll","/terra-search-field","/terra-section-header","/terra-show-hide","/terra-signature","/terra-spacer","/terra-status","/terra-status-view","/terra-table","/terra-tag","/terra-text","/terra-toggle","/terra-toggle-button","/terra-toggle-section-header","/terra-visually-hidden-text"],"_resolved":"https://registry.npmjs.org/terra-doc-template/-/terra-doc-template-2.15.0.tgz","_shasum":"d4ec30c044c9f87c76f37a54a597b292547c8f9f","_spec":"terra-doc-template@^2.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-core/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","react-syntax-highlighter":"^11.0.0","terra-markdown":"^2.31.0","terra-props-table":"^2.37.0"},"deprecated":false,"description":"Provides an adjustable template for documentation pages.","gitHead":"0b893dc4a80250c0b485a5f205f2defde7c38ecf","homepage":"https://github.com/cerner/terra-core#readme","keywords":["Cerner","Terra","terra-doc-template","DocTemplate","UI"],"license":"Apache-2.0","main":"lib/DocTemplate.js","name":"terra-doc-template","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"2.15.0"}')},2333:function(e,r,t){"use strict";t.r(r),r.default="# Terra Doc Template\n\nThe terra-doc-template component provides an adjustable template for documentation pages.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-doc-template`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\n<details>\n<summary>View information on this component's peer dependencies.</summary>\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n\n\n</details>\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n"},2334:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport PropsTable from 'terra-props-table';\nimport Markdown from 'terra-markdown';\nimport classNames from 'classnames/bind';\nimport IndexExampleTemplate from './ExampleTemplate';\nimport styles from './DocTemplate.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * Enables the ability to add custom content to doc template. Children will be rendered after all other content.\n   */\n  children: PropTypes.node,\n  /**\n   * The given component's npm package name.\n   */\n  packageName: PropTypes.string,\n  /**\n   * The given component's readme file imported to a string.\n   */\n  readme: PropTypes.string,\n  /**\n   * The url to the source code for the given component.\n   */\n  srcPath: PropTypes.string,\n  /**\n   * All of the example(s) that will be displayed. An empty array is supported.\n   * ```\n   * title: The title of the example\n   * description: A description of the example to be displayed below the title\n   * example: The example to be displayed\n   * source: The source code of the example\n   * ```\n   */\n  examples: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.node,\n    example: PropTypes.element,\n    source: PropTypes.string,\n  })),\n  /**\n   * All of the props table(s) that will be displayed. An empty array is supported.\n   * ```\n   * componentSrc: The source code of the component\n   * componentName: The name of the component\n   * propsResolution: Type of react-docgen resolver to use for prop-types resolution. Supported values are `default` or `findAllComponentDefinitions`. Will use `default` if left unspecified.\n   * ```\n   */\n  propsTables: PropTypes.arrayOf(PropTypes.shape({\n    componentSrc: PropTypes.string,\n    componentName: PropTypes.string,\n    propsResolution: PropTypes.string,\n  })),\n};\n\nconst defaultProps = {\n  packageName: '',\n  readme: '',\n  srcPath: '',\n  examples: [],\n  propsTables: [],\n};\n\nconst DocTemplate = ({\n  packageName, readme, srcPath, examples, propsTables, children, ...customProps\n}) => {\n  let id = 0;\n  const localExamples = examples;\n  const localPropsTables = propsTables;\n\n  // Assign unique identifiers to use as keys later\n  for (let i = 0; i < localExamples.length; i += 1) {\n    localExamples[i].id = id;\n    id += 1;\n  }\n\n  for (let i = 0; i < localPropsTables.length; i += 1) {\n    localPropsTables[i].id = id;\n    id += 1;\n  }\n\n  const docTemplateClassNames = cx([\n    'doc-template',\n    customProps.className,\n  ]);\n\n  let exampleHeader;\n  if (localExamples.length > 0) {\n    const exampleHeaderText = localExamples.length > 1 ? 'Examples' : 'Example';\n    exampleHeader = <h1 className={cx('examples-header')}>{exampleHeaderText}</h1>;\n  }\n\n  const badge = (\n    <a href={`https://www.npmjs.org/package/${packageName}`}>\n      <img src={`https://badgen.net/npm/v/${packageName}`} alt=\"NPM version\" />\n    </a>\n  );\n\n  return (\n    <div {...customProps} className={docTemplateClassNames}>\n      <div className={cx('doc-card')}>\n        {packageName && badge}\n        {readme && <Markdown src={readme} />}\n        {srcPath && <a href={srcPath}>View component source code</a>}\n      </div>\n\n      {exampleHeader}\n      {localExamples.map(example => (\n        <IndexExampleTemplate\n          title={example.title}\n          example={example.example}\n          exampleSrc={example.source}\n          description={example.description}\n          key={example.id}\n        />\n      ))}\n\n      <div className={cx('doc-card')}>\n        {localPropsTables.map(propsTable => (\n          <PropsTable\n            src={propsTable.componentSrc}\n            componentName={propsTable.componentName}\n            key={propsTable.id}\n            propsResolution={propsTable.propsResolution}\n          />\n        ))}\n      </div>\n      {children && <div className={cx('doc-card')}>{children}</div>}\n    </div>\n  );\n};\n\nDocTemplate.propTypes = propTypes;\nDocTemplate.defaultProps = defaultProps;\n\nexport default DocTemplate;\n"},2335:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\nimport DocTemplate from '../../../../lib/DocTemplate';\n\nimport readme from '../../../../docs/README.md';\nimport { name } from '../../../../package.json';\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\nimport DocTemplateSrc from '!raw-loader!../../../../src/DocTemplate';\n/* eslint-disable-next-line import/no-self-import */\nimport SelfSrc from '!raw-loader!../../../../src/terra-dev-site/doc/doc-template/DocTemplate.1.doc';\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n\nconst DocTemplateExamples = () => (\n  <DocTemplate\n    packageName={name}\n    readme={readme}\n    srcPath=\"https://github.com/cerner/terra-core/tree/master/packages/terra-doc-template\"\n    examples={[\n      {\n        title: 'DocTemplate',\n        source: SelfSrc,\n        example: (<p>This very page was generated using the DocTemplate. The template supports more than one Props Table and example, even though those were not featured here.</p>),\n      },\n    ]}\n    propsTables={[\n      {\n        componentName: 'DocTemplate',\n        componentSrc: DocTemplateSrc,\n      },\n    ]}\n  />\n);\n\nexport default DocTemplateExamples;\n"},3682:function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=i(t(0)),n=i(t(911)),o=i(t(2333)),p=t(1352),s=i(t(2334)),l=i(t(2335));function i(e){return e&&e.__esModule?e:{default:e}}var c=function(){return a.default.createElement(n.default,{packageName:p.name,readme:o.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/terra-doc-template",examples:[{title:"DocTemplate",source:l.default,example:a.default.createElement("p",null,"This very page was generated using the DocTemplate. The template supports more than one Props Table and example, even though those were not featured here.")}],propsTables:[{componentName:"DocTemplate",componentSrc:s.default}]})};r.default=c},912:function(e,r){}}]);
//# sourceMappingURL=190-9b2a8ad801d018fd8edb.js.map