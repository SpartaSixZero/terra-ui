{"version":3,"sources":["webpack:///./node_modules/terra-doc-template/docs/README.md","webpack:///./node_modules/terra-doc-template/src/DocTemplate.jsx","webpack:///./node_modules/terra-doc-template/src/terra-dev-site/doc/doc-template/DocTemplate.1.doc.jsx","webpack:///./node_modules/terra-doc-template/lib/terra-dev-site/doc/doc-template/DocTemplate.1.doc.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_DocTemplate","_README","_package","_DocTemplate2","_DocTemplate3","obj","__esModule","_default","createElement","packageName","name","readme","srcPath","examples","title","source","example","propsTables","componentName","componentSrc"],"mappings":"+vHAAA,OAAe,4qB,kCCAf,OAAe,ikI,kCCAf,OAAe,m1C,kCCEfA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAeD,EAAuB,EAAQ,MAE9CE,EAAUF,EAAuB,EAAQ,OAEzCG,EAAW,EAAQ,MAEnBC,EAAgBJ,EAAuB,EAAQ,OAE/CK,EAAgBL,EAAuB,EAAQ,OAEnD,SAASA,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAER,QAASQ,GAQvF,IAiBIE,EAjBsB,WACxB,OAAOT,EAAOD,QAAQW,cAAcR,EAAaH,QAAS,CACxDY,YAAaP,EAASQ,KACtBC,OAAQV,EAAQJ,QAChBe,QAAS,+EACTC,SAAU,CAAC,CACTC,MAAO,cACPC,OAAQX,EAAcP,QACtBmB,QAASlB,EAAOD,QAAQW,cAAc,IAAK,KAAM,gKAEnDS,YAAa,CAAC,CACZC,cAAe,cACfC,aAAchB,EAAcN,aAMlCF,EAAQE,QAAUU,G","file":"190-9b2a8ad801d018fd8edb.js","sourcesContent":["export default \"# Terra Doc Template\\n\\nThe terra-doc-template component provides an adjustable template for documentation pages.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-doc-template`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport PropsTable from 'terra-props-table';\\nimport Markdown from 'terra-markdown';\\nimport classNames from 'classnames/bind';\\nimport IndexExampleTemplate from './ExampleTemplate';\\nimport styles from './DocTemplate.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Enables the ability to add custom content to doc template. Children will be rendered after all other content.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * The given component's npm package name.\\n   */\\n  packageName: PropTypes.string,\\n  /**\\n   * The given component's readme file imported to a string.\\n   */\\n  readme: PropTypes.string,\\n  /**\\n   * The url to the source code for the given component.\\n   */\\n  srcPath: PropTypes.string,\\n  /**\\n   * All of the example(s) that will be displayed. An empty array is supported.\\n   * ```\\n   * title: The title of the example\\n   * description: A description of the example to be displayed below the title\\n   * example: The example to be displayed\\n   * source: The source code of the example\\n   * ```\\n   */\\n  examples: PropTypes.arrayOf(PropTypes.shape({\\n    title: PropTypes.string,\\n    description: PropTypes.node,\\n    example: PropTypes.element,\\n    source: PropTypes.string,\\n  })),\\n  /**\\n   * All of the props table(s) that will be displayed. An empty array is supported.\\n   * ```\\n   * componentSrc: The source code of the component\\n   * componentName: The name of the component\\n   * propsResolution: Type of react-docgen resolver to use for prop-types resolution. Supported values are `default` or `findAllComponentDefinitions`. Will use `default` if left unspecified.\\n   * ```\\n   */\\n  propsTables: PropTypes.arrayOf(PropTypes.shape({\\n    componentSrc: PropTypes.string,\\n    componentName: PropTypes.string,\\n    propsResolution: PropTypes.string,\\n  })),\\n};\\n\\nconst defaultProps = {\\n  packageName: '',\\n  readme: '',\\n  srcPath: '',\\n  examples: [],\\n  propsTables: [],\\n};\\n\\nconst DocTemplate = ({\\n  packageName, readme, srcPath, examples, propsTables, children, ...customProps\\n}) => {\\n  let id = 0;\\n  const localExamples = examples;\\n  const localPropsTables = propsTables;\\n\\n  // Assign unique identifiers to use as keys later\\n  for (let i = 0; i < localExamples.length; i += 1) {\\n    localExamples[i].id = id;\\n    id += 1;\\n  }\\n\\n  for (let i = 0; i < localPropsTables.length; i += 1) {\\n    localPropsTables[i].id = id;\\n    id += 1;\\n  }\\n\\n  const docTemplateClassNames = cx([\\n    'doc-template',\\n    customProps.className,\\n  ]);\\n\\n  let exampleHeader;\\n  if (localExamples.length > 0) {\\n    const exampleHeaderText = localExamples.length > 1 ? 'Examples' : 'Example';\\n    exampleHeader = <h1 className={cx('examples-header')}>{exampleHeaderText}</h1>;\\n  }\\n\\n  const badge = (\\n    <a href={`https://www.npmjs.org/package/${packageName}`}>\\n      <img src={`https://badgen.net/npm/v/${packageName}`} alt=\\\"NPM version\\\" />\\n    </a>\\n  );\\n\\n  return (\\n    <div {...customProps} className={docTemplateClassNames}>\\n      <div className={cx('doc-card')}>\\n        {packageName && badge}\\n        {readme && <Markdown src={readme} />}\\n        {srcPath && <a href={srcPath}>View component source code</a>}\\n      </div>\\n\\n      {exampleHeader}\\n      {localExamples.map(example => (\\n        <IndexExampleTemplate\\n          title={example.title}\\n          example={example.example}\\n          exampleSrc={example.source}\\n          description={example.description}\\n          key={example.id}\\n        />\\n      ))}\\n\\n      <div className={cx('doc-card')}>\\n        {localPropsTables.map(propsTable => (\\n          <PropsTable\\n            src={propsTable.componentSrc}\\n            componentName={propsTable.componentName}\\n            key={propsTable.id}\\n            propsResolution={propsTable.propsResolution}\\n          />\\n        ))}\\n      </div>\\n      {children && <div className={cx('doc-card')}>{children}</div>}\\n    </div>\\n  );\\n};\\n\\nDocTemplate.propTypes = propTypes;\\nDocTemplate.defaultProps = defaultProps;\\n\\nexport default DocTemplate;\\n\"","export default \"import React from 'react';\\nimport DocTemplate from '../../../../lib/DocTemplate';\\n\\nimport readme from '../../../../docs/README.md';\\nimport { name } from '../../../../package.json';\\n\\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\\n// Component Source\\nimport DocTemplateSrc from '!raw-loader!../../../../src/DocTemplate';\\n/* eslint-disable-next-line import/no-self-import */\\nimport SelfSrc from '!raw-loader!../../../../src/terra-dev-site/doc/doc-template/DocTemplate.1.doc';\\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\\n\\nconst DocTemplateExamples = () => (\\n  <DocTemplate\\n    packageName={name}\\n    readme={readme}\\n    srcPath=\\\"https://github.com/cerner/terra-core/tree/master/packages/terra-doc-template\\\"\\n    examples={[\\n      {\\n        title: 'DocTemplate',\\n        source: SelfSrc,\\n        example: (<p>This very page was generated using the DocTemplate. The template supports more than one Props Table and example, even though those were not featured here.</p>),\\n      },\\n    ]}\\n    propsTables={[\\n      {\\n        componentName: 'DocTemplate',\\n        componentSrc: DocTemplateSrc,\\n      },\\n    ]}\\n  />\\n);\\n\\nexport default DocTemplateExamples;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _DocTemplate = _interopRequireDefault(require(\"../../../../lib/DocTemplate\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _DocTemplate2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/DocTemplate\"));\n\nvar _DocTemplate3 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/doc-template/DocTemplate.1.doc\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n\n/* eslint-disable-next-line import/no-self-import */\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocTemplateExamples = function DocTemplateExamples() {\n  return _react.default.createElement(_DocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/terra-doc-template\",\n    examples: [{\n      title: 'DocTemplate',\n      source: _DocTemplate3.default,\n      example: _react.default.createElement(\"p\", null, \"This very page was generated using the DocTemplate. The template supports more than one Props Table and example, even though those were not featured here.\")\n    }],\n    propsTables: [{\n      componentName: 'DocTemplate',\n      componentSrc: _DocTemplate2.default\n    }]\n  });\n};\n\nvar _default = DocTemplateExamples;\nexports.default = _default;"],"sourceRoot":""}