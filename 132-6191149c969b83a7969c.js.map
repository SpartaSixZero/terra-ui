{"version":3,"sources":["webpack:///./node_modules/terra-slide-panel/lib/SlidePanel.module.scss?4da9","webpack:///./node_modules/terra-slide-panel-manager/lib/SlidePanelManager.js","webpack:///./node_modules/terra-slide-panel-manager/lib/terra-dev-site/doc/example/SlidePanelManager.module.scss?09d2","webpack:///./node_modules/terra-slide-panel-manager/docs/README.md","webpack:///./node_modules/terra-slide-panel-manager/src/SlidePanelManager.jsx","webpack:///./node_modules/terra-slide-panel-manager/lib/terra-dev-site/doc/example/SlidePanelManagerExample.js","webpack:///./node_modules/terra-slide-panel-manager/lib/terra-dev-site/doc/example/ContentComponent.js","webpack:///./node_modules/terra-slide-panel-manager/lib/terra-dev-site/doc/example/DisclosureComponent.js","webpack:///./node_modules/terra-slide-panel-manager/src/terra-dev-site/doc/example/SlidePanelManagerExample.jsx","webpack:///./node_modules/terra-slide-panel-manager/lib/terra-dev-site/doc/slide-panel-manager/SlidePanelManager.1.doc.js","webpack:///./node_modules/terra-slide-panel/lib/SlidePanel.js"],"names":["module","exports","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","default","disclosureType","_disclosureSizeToPane","_extends2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_defineProperty2","_react","_propTypes","_terraDisclosureManager","_terraSlideGroup","_terraSlidePanel","propTypes","children","node","panelBehavior","oneOf","disclosureSizeToPanelSize","availableDisclosureSizes","TINY","SMALL","MEDIUM","LARGE","HUGE","SlidePanelManager","_React$Component","props","_this","this","call","renderSlidePanel","bind","key","manager","isFullscreen","panelSize","dimensions","_this$props","customProps","disclosure","size","FULLSCREEN","isMaximized","width","height","createElement","fill","isOpen","panelContent","items","components","isAnimated","mainContent","supportedDisclosureTypes","render","Component","defaultProps","_default","_bind","_SlidePanelManager","_SlidePanelManagerModule","_ContentComponent","cx","behavior","string","SlidePanelManagerExample","_ref","className","_terraButton","_terraContentContainer","_terraActionHeader","_DisclosureComponent","disclosureManager","disclosureManagerShape","HEIGHT_KEYS","keys","availableDisclosureHeights","WIDTH_KEYS","availableDisclosureWidths","generateOptions","values","map","currentValue","index","keyValue","ContentComponent","renderButton","handleSelectChange","getId","state","id","disclosureHeight","disclosureWidth","name","event","setState","target","text","concat","onClick","disclose","preferredType","content","component","_this2","_this$props2","htmlFor","onChange","header","title","renderForm","renderFormButton","withDisclosureManager","_terraFormInput","DisclosureComponent","checkLockState","undefined","registerDismissCheck","length","Promise","resolve","reject","confirm","_this3","onClose","closeDisclosure","onBack","goBack","onMaximize","maximize","onMinimize","minimize","dismiss","catch","console","log","WrappedDisclosureComponent","_terraDocTemplate","_package","_README","_SlidePanelManagerExample","_SlidePanelManagerExample2","packageName","readme","srcPath","examples","example","source","propsTables","componentSrc","SlidePanelPositions","_SlidePanelModule","START","END","panelPosition","bool","SlidePanel","setPanelNode","mainNode","createRef","prevProps","panelNode","focus","current","slidePanelClassNames","panelDiv","tabIndex","ref","mainDiv","Fragment"],"mappings":"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","file":"132-6191149c969b83a7969c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slide-panel\":\"SlidePanel-module__slide-panel___ITIbM\",\"main\":\"SlidePanel-module__main___2oo1I\",\"panel\":\"SlidePanel-module__panel___22lWd\",\"is-open\":\"SlidePanel-module__is-open___3OdYE\",\"is-fullscreen\":\"SlidePanel-module__is-fullscreen___32Wbh\",\"fill\":\"SlidePanel-module__fill___2g_EL\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.disclosureType = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _terraDisclosureManager = _interopRequireWildcard(require(\"terra-disclosure-manager\"));\n\nvar _terraSlideGroup = _interopRequireDefault(require(\"terra-slide-group\"));\n\nvar _terraSlidePanel = _interopRequireDefault(require(\"terra-slide-panel\"));\n\nvar _disclosureSizeToPane;\n\nvar disclosureType = 'panel';\nexports.disclosureType = disclosureType;\nvar propTypes = {\n  /**\n   * The components to be rendered in the body of the SlidePanelManager. These components will receive the\n   * disclosure capabilities through the DisclosureManger's context API.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * The desired panel behavior. Either 'squish' or 'overlay'.\n   */\n  panelBehavior: _propTypes.default.oneOf(['overlay', 'squish'])\n};\nvar defaultProps = {\n  panelBehavior: 'overlay'\n};\n/**\n * The SlidePanel component does not support the full range of DisclosureManager sizes in its API. The potential sizes are mapped to the\n * SlidePanel's supported sizes.\n */\n\nvar disclosureSizeToPanelSize = (_disclosureSizeToPane = {}, (0, _defineProperty2.default)(_disclosureSizeToPane, _terraDisclosureManager.availableDisclosureSizes.TINY, 'small'), (0, _defineProperty2.default)(_disclosureSizeToPane, _terraDisclosureManager.availableDisclosureSizes.SMALL, 'small'), (0, _defineProperty2.default)(_disclosureSizeToPane, _terraDisclosureManager.availableDisclosureSizes.MEDIUM, 'large'), (0, _defineProperty2.default)(_disclosureSizeToPane, _terraDisclosureManager.availableDisclosureSizes.LARGE, 'large'), (0, _defineProperty2.default)(_disclosureSizeToPane, _terraDisclosureManager.availableDisclosureSizes.HUGE, 'large'), _disclosureSizeToPane);\n\nvar disclosureDimensionsToPanelSize = function disclosureDimensionsToPanelSize(dimensions) {\n  if (dimensions.width > 480 || dimensions.height > 600) {\n    return 'large';\n  }\n\n  return 'small';\n};\n\nvar SlidePanelManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(SlidePanelManager, _React$Component);\n\n  function SlidePanelManager(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SlidePanelManager);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlidePanelManager).call(this, props));\n    _this.renderSlidePanel = _this.renderSlidePanel.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(SlidePanelManager, [{\n    key: \"renderSlidePanel\",\n    value: function renderSlidePanel(manager) {\n      var _this$props = this.props,\n          children = _this$props.children,\n          panelBehavior = _this$props.panelBehavior,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"panelBehavior\"]);\n      var isFullscreen;\n\n      if (manager.disclosure.size === _terraDisclosureManager.availableDisclosureSizes.FULLSCREEN || manager.disclosure.isMaximized) {\n        isFullscreen = true;\n      }\n\n      var panelSize;\n\n      if (manager.disclosure.dimensions) {\n        panelSize = disclosureDimensionsToPanelSize(manager.disclosure.dimensions);\n      } else {\n        panelSize = disclosureSizeToPanelSize[manager.disclosure.size];\n      }\n\n      return _react.default.createElement(_terraSlidePanel.default, (0, _extends2.default)({}, customProps, {\n        fill: true,\n        panelBehavior: panelBehavior,\n        isFullscreen: isFullscreen,\n        panelSize: panelSize,\n        isOpen: manager.disclosure.isOpen,\n        panelContent: _react.default.createElement(_terraSlideGroup.default, {\n          items: manager.disclosure.components,\n          isAnimated: true\n        }),\n        mainContent: manager.children.components\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return _react.default.createElement(_terraDisclosureManager.default, {\n        supportedDisclosureTypes: [disclosureType],\n        render: this.renderSlidePanel\n      }, children);\n    }\n  }]);\n  return SlidePanelManager;\n}(_react.default.Component);\n\nSlidePanelManager.propTypes = propTypes;\nSlidePanelManager.defaultProps = defaultProps;\nvar _default = SlidePanelManager;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example-wrapper\":\"SlidePanelManager-module__example-wrapper___2hjOk\",\"content-wrapper\":\"SlidePanelManager-module__content-wrapper___2Oeux\"};","export default \"# Terra SlidePanel Manager\\n\\nThe SlidePanelManager is a DisclosureManager implementation that presents disclosed content using a SlidePanel.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-slide-panel-manager`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n| terra-disclosure-manager | ^4.9.0 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Usage\\n\\n### Implementation Requirements\\n\\nThe SlidePanelManager utilizes the DisclosureManager API to manage disclosure requests. The components provided as children to the SlidePanelManager, and the components disclosed within it, must interface with the SlidePanelManager's context using the `withDisclosureManager()` higher-order component generator provided by the `terra-disclosure-manager` package.\\n\\nThe SlidePanelManager responds to the `\\\"panel\\\"` disclosure type. Components that wish to disclose content using the SlidePanelManager should provide a preferred type of `\\\"panel\\\"`. This value is exported from the package as `disclosureType`. Please see the [DisclosureManager documentation](https://engineering.cerner.com/terra-ui/#/components/terra-disclosure-manager/disclosure-manager/about) for a full description of the SlidePanelManager's capabilities.\\n\\n## Component Features\\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport DisclosureManager, { availableDisclosureSizes } from 'terra-disclosure-manager';\\nimport SlideGroup from 'terra-slide-group';\\nimport SlidePanel from 'terra-slide-panel';\\n\\nconst disclosureType = 'panel';\\nexport { disclosureType };\\n\\nconst propTypes = {\\n  /**\\n   * The components to be rendered in the body of the SlidePanelManager. These components will receive the\\n   * disclosure capabilities through the DisclosureManger's context API.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * The desired panel behavior. Either 'squish' or 'overlay'.\\n   */\\n  panelBehavior: PropTypes.oneOf(['overlay', 'squish']),\\n};\\n\\nconst defaultProps = {\\n  panelBehavior: 'overlay',\\n};\\n\\n/**\\n * The SlidePanel component does not support the full range of DisclosureManager sizes in its API. The potential sizes are mapped to the\\n * SlidePanel's supported sizes.\\n */\\nconst disclosureSizeToPanelSize = {\\n  [availableDisclosureSizes.TINY]: 'small',\\n  [availableDisclosureSizes.SMALL]: 'small',\\n  [availableDisclosureSizes.MEDIUM]: 'large',\\n  [availableDisclosureSizes.LARGE]: 'large',\\n  [availableDisclosureSizes.HUGE]: 'large',\\n};\\n\\nconst disclosureDimensionsToPanelSize = (dimensions) => {\\n  if (dimensions.width > 480 || dimensions.height > 600) {\\n    return 'large';\\n  }\\n  return 'small';\\n};\\n\\nclass SlidePanelManager extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.renderSlidePanel = this.renderSlidePanel.bind(this);\\n  }\\n\\n  renderSlidePanel(manager) {\\n    const {\\n      children, panelBehavior, ...customProps\\n    } = this.props;\\n\\n    let isFullscreen;\\n    if (manager.disclosure.size === availableDisclosureSizes.FULLSCREEN || manager.disclosure.isMaximized) {\\n      isFullscreen = true;\\n    }\\n\\n    let panelSize;\\n    if (manager.disclosure.dimensions) {\\n      panelSize = disclosureDimensionsToPanelSize(manager.disclosure.dimensions);\\n    } else {\\n      panelSize = disclosureSizeToPanelSize[manager.disclosure.size];\\n    }\\n\\n    return (\\n      <SlidePanel\\n        {...customProps}\\n        fill\\n        panelBehavior={panelBehavior}\\n        isFullscreen={isFullscreen}\\n        panelSize={panelSize}\\n        isOpen={manager.disclosure.isOpen}\\n        panelContent={(\\n          <SlideGroup items={manager.disclosure.components} isAnimated />\\n        )}\\n        mainContent={manager.children.components}\\n      />\\n    );\\n  }\\n\\n  render() {\\n    const { children } = this.props;\\n\\n    return (\\n      <DisclosureManager\\n        supportedDisclosureTypes={[disclosureType]}\\n        render={this.renderSlidePanel}\\n      >\\n        {children}\\n      </DisclosureManager>\\n    );\\n  }\\n}\\n\\nSlidePanelManager.propTypes = propTypes;\\nSlidePanelManager.defaultProps = defaultProps;\\n\\nexport default SlidePanelManager;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _SlidePanelManager = _interopRequireDefault(require(\"terra-slide-panel-manager/lib/SlidePanelManager\"));\n\nvar _SlidePanelManagerModule = _interopRequireDefault(require(\"terra-slide-panel-manager/lib/terra-dev-site/doc/example/SlidePanelManager.module.scss\"));\n\nvar _ContentComponent = _interopRequireDefault(require(\"./ContentComponent\"));\n\n/* eslint-disable import/no-unresolved, import/extensions */\n\n/* eslint-enable import/no-unresolved, import/extensions */\nvar cx = _bind.default.bind(_SlidePanelManagerModule.default);\n\nvar propTypes = {\n  behavior: _propTypes.default.string\n};\n\nvar SlidePanelManagerExample = function SlidePanelManagerExample(_ref) {\n  var behavior = _ref.behavior;\n  return _react.default.createElement(\"div\", {\n    className: cx('example-wrapper')\n  }, _react.default.createElement(_SlidePanelManager.default, {\n    panelBehavior: behavior\n  }, _react.default.createElement(_ContentComponent.default, {\n    panelBehavior: behavior,\n    disclosureType: \"panel\"\n  })));\n};\n\nSlidePanelManagerExample.propTypes = propTypes;\nvar _default = SlidePanelManagerExample;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraContentContainer = _interopRequireDefault(require(\"terra-content-container\"));\n\nvar _terraActionHeader = _interopRequireDefault(require(\"terra-action-header\"));\n\nvar _terraDisclosureManager = require(\"terra-disclosure-manager\");\n\nvar _DisclosureComponent = _interopRequireDefault(require(\"./DisclosureComponent\"));\n\nvar _SlidePanelManagerModule = _interopRequireDefault(require(\"./SlidePanelManager.module.scss\"));\n\nvar cx = _bind.default.bind(_SlidePanelManagerModule.default);\n\nvar propTypes = {\n  disclosureType: _propTypes.default.string,\n  disclosureManager: _terraDisclosureManager.disclosureManagerShape,\n  panelBehavior: _propTypes.default.oneOf(['overlay', 'squish'])\n};\nvar HEIGHT_KEYS = Object.keys(_terraDisclosureManager.availableDisclosureHeights);\nvar WIDTH_KEYS = Object.keys(_terraDisclosureManager.availableDisclosureWidths);\n\nvar generateOptions = function generateOptions(values) {\n  return values.map(function (currentValue, index) {\n    var keyValue = index;\n    return _react.default.createElement(\"option\", {\n      key: keyValue,\n      value: currentValue\n    }, currentValue);\n  });\n};\n\nvar ContentComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(ContentComponent, _React$Component);\n\n  function ContentComponent(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ContentComponent);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContentComponent).call(this, props));\n    _this.renderButton = _this.renderButton.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleSelectChange = _this.handleSelectChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getId = _this.getId.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      id: 'dimensions',\n      disclosureHeight: HEIGHT_KEYS[0],\n      disclosureWidth: WIDTH_KEYS[0]\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ContentComponent, [{\n    key: \"getId\",\n    value: function getId(name) {\n      return name + this.state.id;\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(event) {\n      this.setState((0, _defineProperty2.default)({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton(size) {\n      var _this$props = this.props,\n          disclosureManager = _this$props.disclosureManager,\n          disclosureType = _this$props.disclosureType;\n      return _react.default.createElement(_terraButton.default, {\n        text: \"Disclose (\".concat(size, \")\"),\n        onClick: function onClick() {\n          disclosureManager.disclose({\n            preferredType: disclosureType,\n            size: size,\n            content: {\n              key: \"Content-Disclosure-\".concat(size),\n              component: _react.default.createElement(_DisclosureComponent.default, {\n                name: \"Disclosure Component (\".concat(size, \")\"),\n                disclosureType: disclosureType\n              })\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderFormButton\",\n    value: function renderFormButton() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          disclosureManager = _this$props2.disclosureManager,\n          disclosureType = _this$props2.disclosureType;\n      var name = \"Disclose (\".concat(this.state.disclosureHeight, \") x (\").concat(this.state.disclosureWidth, \")\");\n      return _react.default.createElement(_terraButton.default, {\n        text: name,\n        onClick: function onClick() {\n          disclosureManager.disclose({\n            preferredType: disclosureType,\n            dimensions: {\n              height: _this2.state.disclosureHeight,\n              width: _this2.state.disclosureWidth\n            },\n            content: {\n              key: 'Content-Disclosure-Dimensions',\n              component: _react.default.createElement(_DisclosureComponent.default, {\n                name: \"Disclosure Component (\".concat(name, \")\"),\n                disclosureType: disclosureType\n              })\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      return _react.default.createElement(\"form\", null, _react.default.createElement(\"label\", {\n        htmlFor: this.getId(\"disclosureHeight\".concat(this.props.panelBehavior))\n      }, \"Pop Content Height\"), _react.default.createElement(\"select\", {\n        id: this.getId(\"disclosureHeight\".concat(this.props.panelBehavior)),\n        name: \"disclosureHeight\",\n        value: this.state.disclosureHeight,\n        onChange: this.handleSelectChange\n      }, generateOptions(HEIGHT_KEYS)), _react.default.createElement(\"br\", null), _react.default.createElement(\"br\", null), _react.default.createElement(\"label\", {\n        htmlFor: this.getId(\"disclosureWidth\".concat(this.props.panelBehavior))\n      }, \"Pop Content Width\"), _react.default.createElement(\"select\", {\n        id: this.getId(\"disclosureWidth\".concat(this.props.panelBehavior)),\n        name: \"disclosureWidth\",\n        value: this.state.disclosureWidth,\n        onChange: this.handleSelectChange\n      }, generateOptions(WIDTH_KEYS)), _react.default.createElement(\"br\", null), _react.default.createElement(\"br\", null));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_terraContentContainer.default, {\n        header: _react.default.createElement(_terraActionHeader.default, {\n          title: \"Manager Child\"\n        })\n      }, _react.default.createElement(\"div\", {\n        className: cx('content-wrapper')\n      }, this.renderButton('default'), this.renderButton('tiny'), this.renderButton('small'), this.renderButton('medium'), this.renderButton('large'), this.renderButton('huge'), this.renderButton('fullscreen'), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"The child components can disclose content in the panel at various sizes.\")), _react.default.createElement(\"div\", {\n        className: cx('content-wrapper')\n      }, this.renderForm(), this.renderFormButton()));\n    }\n  }]);\n  return ContentComponent;\n}(_react.default.Component);\n\nContentComponent.propTypes = propTypes;\n\nvar _default = (0, _terraDisclosureManager.withDisclosureManager)(ContentComponent);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraContentContainer = _interopRequireDefault(require(\"terra-content-container\"));\n\nvar _terraFormInput = _interopRequireDefault(require(\"terra-form-input\"));\n\nvar _terraActionHeader = _interopRequireDefault(require(\"terra-action-header\"));\n\nvar _terraDisclosureManager = require(\"terra-disclosure-manager\");\n\nvar _SlidePanelManagerModule = _interopRequireDefault(require(\"./SlidePanelManager.module.scss\"));\n\nvar cx = _bind.default.bind(_SlidePanelManagerModule.default);\n\nvar propTypes = {\n  name: _propTypes.default.string,\n  disclosureType: _propTypes.default.string,\n  disclosureManager: _terraDisclosureManager.disclosureManagerShape\n};\nvar defaultProps = {\n  name: 'Disclosure Component'\n};\n\nvar DisclosureComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(DisclosureComponent, _React$Component);\n\n  function DisclosureComponent(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DisclosureComponent);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DisclosureComponent).call(this, props));\n    _this.checkLockState = _this.checkLockState.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      text: undefined\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(DisclosureComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var disclosureManager = this.props.disclosureManager;\n\n      if (disclosureManager && disclosureManager.registerDismissCheck) {\n        disclosureManager.registerDismissCheck(this.checkLockState);\n      }\n    }\n  }, {\n    key: \"checkLockState\",\n    value: function checkLockState() {\n      var _this2 = this;\n\n      if (this.state.text && this.state.text.length) {\n        return new Promise(function (resolve, reject) {\n          // eslint-disable-next-line no-restricted-globals\n          if (!confirm(\"\".concat(_this2.props.name, \" has unsaved changes that will be lost. Do you wish to continue?\"))) {\n            // eslint-disable-line no-alert\n            reject();\n            return;\n          }\n\n          resolve();\n        });\n      }\n\n      return Promise.resolve();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          disclosureManager = _this$props.disclosureManager,\n          name = _this$props.name,\n          disclosureType = _this$props.disclosureType;\n      return _react.default.createElement(_terraContentContainer.default, {\n        fill: true,\n        header: _react.default.createElement(_terraActionHeader.default, {\n          title: \"Disclosure - \".concat(name),\n          onClose: disclosureManager.closeDisclosure,\n          onBack: disclosureManager.goBack,\n          onMaximize: disclosureManager.maximize,\n          onMinimize: disclosureManager.minimize\n        })\n      }, _react.default.createElement(\"div\", {\n        className: cx('content-wrapper')\n      }, _react.default.createElement(\"h3\", null, name), _react.default.createElement(\"p\", null, \"The disclosed component can disclose content within the same panel.\"), _react.default.createElement(\"p\", null, \"It can also render a header (like above) that implements the various DisclosureManager control functions.\"), _react.default.createElement(_terraButton.default, {\n        text: \"Dismiss\",\n        onClick: function onClick() {\n          disclosureManager.dismiss().catch(function () {\n            console.log('Dismiss failed. A lock must be in place.'); // eslint-disable-line no-console\n          });\n        }\n      }), _react.default.createElement(_terraButton.default, {\n        text: \"Disclose Again\",\n        onClick: function onClick() {\n          disclosureManager.disclose({\n            preferredType: disclosureType,\n            size: 'small',\n            content: {\n              key: \"Nested \".concat(name),\n              component: _react.default.createElement(WrappedDisclosureComponent, {\n                name: \"Nested \".concat(name),\n                disclosureType: disclosureType\n              })\n            }\n          });\n        }\n      }), _react.default.createElement(\"br\", null), _react.default.createElement(\"br\", null), _react.default.createElement(\"p\", null, \"The disclosed component can register a dismiss check function that can interrupt and prevent dismissal. This component will prompt the user if text is detected in the input field below.\"), _react.default.createElement(_terraFormInput.default, {\n        value: this.state.text || '',\n        onChange: function onChange(event) {\n          _this3.setState({\n            text: event.target.value\n          });\n        }\n      }), this.state.text && this.state.text.length ? _react.default.createElement(\"p\", null, \"Component has unsaved changes!\") : null));\n    }\n  }]);\n  return DisclosureComponent;\n}(_react.default.Component);\n\nDisclosureComponent.propTypes = propTypes;\nDisclosureComponent.defaultProps = defaultProps;\nvar WrappedDisclosureComponent = (0, _terraDisclosureManager.withDisclosureManager)(DisclosureComponent);\n\nvar _default = (0, _terraDisclosureManager.withDisclosureManager)(WrappedDisclosureComponent);\n\nexports.default = _default;","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\n/* eslint-disable import/no-unresolved, import/extensions */\\nimport SlidePanelManager from 'terra-slide-panel-manager/lib/SlidePanelManager';\\nimport styles from 'terra-slide-panel-manager/lib/terra-dev-site/doc/example/SlidePanelManager.module.scss';\\n/* eslint-enable import/no-unresolved, import/extensions */\\n\\nimport ContentComponent from './ContentComponent';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  behavior: PropTypes.string,\\n};\\n\\nconst SlidePanelManagerExample = ({ behavior }) => (\\n  <div className={cx('example-wrapper')}>\\n    <SlidePanelManager panelBehavior={behavior}>\\n      <ContentComponent panelBehavior={behavior} disclosureType=\\\"panel\\\" />\\n    </SlidePanelManager>\\n  </div>\\n);\\n\\nSlidePanelManagerExample.propTypes = propTypes;\\n\\nexport default SlidePanelManagerExample;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _SlidePanelManager = _interopRequireDefault(require(\"!raw-loader!../../../../src/SlidePanelManager.jsx\"));\n\nvar _SlidePanelManagerExample = _interopRequireDefault(require(\"../example/SlidePanelManagerExample\"));\n\nvar _SlidePanelManagerExample2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/SlidePanelManagerExample.jsx\"));\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Examples\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Overlay Example',\n      example: _react.default.createElement(_SlidePanelManagerExample.default, {\n        behavior: \"overlay\"\n      }),\n      source: _SlidePanelManagerExample2.default\n    }, {\n      title: 'Squish Example',\n      example: _react.default.createElement(_SlidePanelManagerExample.default, {\n        behavior: \"squish\"\n      }),\n      source: _SlidePanelManagerExample2.default\n    }],\n    propsTables: [{\n      componentSrc: _SlidePanelManager.default,\n      source: _SlidePanelManagerExample2.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SlidePanelPositions = exports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _SlidePanelModule = _interopRequireDefault(require(\"./SlidePanel.module.scss\"));\n\nvar cx = _bind.default.bind(_SlidePanelModule.default);\n\nvar SlidePanelPositions = {\n  START: 'start',\n  END: 'end'\n};\nexports.SlidePanelPositions = SlidePanelPositions;\nvar propTypes = {\n  /**\n   * The component to display in the main content area.\n   */\n  mainContent: _propTypes.default.node,\n\n  /**\n   * The component to display in the panel content area.\n   */\n  panelContent: _propTypes.default.node,\n\n  /**\n   * The style of panel presentation. One of `overlay`, `squish`.\n   */\n  panelBehavior: _propTypes.default.oneOf(['overlay', 'squish']),\n\n  /**\n   * The position at which the panel will be displayed. This property honors the current direction setting. One of `start`, `end`.\n   */\n  panelPosition: _propTypes.default.oneOf(['start', 'end']),\n\n  /**\n   * The size at which the panel will be displayed. One of `small`, `large`.\n   */\n  panelSize: _propTypes.default.oneOf(['small', 'large']),\n\n  /**\n   * Whether or not, when open, the panel should be displayed with the full width of the SlidePanel.\n   */\n  isFullscreen: _propTypes.default.bool,\n\n  /**\n   * Whether or not the panel should be displayed.\n   */\n  isOpen: _propTypes.default.bool,\n\n  /**\n   * Whether or not the SlidePanel should be sized relative to its parent container.\n   */\n  fill: _propTypes.default.bool\n};\nvar defaultProps = {\n  panelBehavior: 'overlay',\n  panelPosition: SlidePanelPositions.END,\n  panelSize: 'small'\n};\n\nvar SlidePanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(SlidePanel, _React$Component);\n\n  function SlidePanel(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SlidePanel);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlidePanel).call(this, props));\n    _this.setPanelNode = _this.setPanelNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.mainNode = _react.default.createRef();\n    return _this;\n  }\n\n  (0, _createClass2.default)(SlidePanel, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.isOpen && this.props.isOpen !== prevProps.isOpen) {\n        this.panelNode.focus();\n      } else if (!this.props.isOpen && this.props.isOpen !== prevProps.isOpen) {\n        this.mainNode.current.focus();\n      }\n    }\n  }, {\n    key: \"setPanelNode\",\n    value: function setPanelNode(node) {\n      this.panelNode = node;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          mainContent = _this$props.mainContent,\n          panelContent = _this$props.panelContent,\n          panelBehavior = _this$props.panelBehavior,\n          panelPosition = _this$props.panelPosition,\n          panelSize = _this$props.panelSize,\n          isFullscreen = _this$props.isFullscreen,\n          isOpen = _this$props.isOpen,\n          fill = _this$props.fill,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"mainContent\", \"panelContent\", \"panelBehavior\", \"panelPosition\", \"panelSize\", \"isFullscreen\", \"isOpen\", \"fill\"]);\n      var slidePanelClassNames = cx(['slide-panel', {\n        'is-open': isOpen\n      }, {\n        'is-fullscreen': isFullscreen\n      }, {\n        fill: fill\n      }, customProps.className]);\n\n      var panelDiv = _react.default.createElement(\"div\", {\n        className: cx(['panel']),\n        tabIndex: \"-1\",\n        \"aria-hidden\": !isOpen ? 'true' : 'false',\n        ref: this.setPanelNode\n      }, panelContent);\n\n      var mainDiv = _react.default.createElement(\"div\", {\n        className: cx('main'),\n        tabIndex: \"-1\",\n        ref: this.mainNode\n      }, mainContent);\n\n      var content = panelPosition === SlidePanelPositions.START ? _react.default.createElement(_react.default.Fragment, null, panelDiv, mainDiv) : _react.default.createElement(_react.default.Fragment, null, mainDiv, panelDiv);\n      return _react.default.createElement(\"div\", (0, _extends2.default)({}, customProps, {\n        className: slidePanelClassNames,\n        \"data-slide-panel-panel-behavior\": panelBehavior,\n        \"data-slide-panel-panel-position\": panelPosition,\n        \"data-slide-panel-panel-size\": panelSize\n      }), content);\n    }\n  }]);\n  return SlidePanel;\n}(_react.default.Component);\n\nSlidePanel.propTypes = propTypes;\nSlidePanel.defaultProps = defaultProps;\nvar _default = SlidePanel;\nexports.default = _default;"],"sourceRoot":""}