{"version":3,"sources":["webpack:///./node_modules/terra-time-input/lib/TimeInput.js","webpack:///./node_modules/terra-time-input/lib/TimeUtil.js","webpack:///./node_modules/terra-time-input/lib/TimeInput.module.scss?c6b5"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_extends2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_react","_propTypes","_bind","_terraFormInput","_terraButtonGroup","_keycodeJs","_TimeUtil","_TimeInputModule","cx","bind","propTypes","disabled","bool","inputAttributes","object","hourAttributes","minuteAttributes","name","string","isRequired","onBlur","func","onChange","onFocus","refCallback","secondAttributes","showSeconds","variant","oneOf","FORMAT_12_HOUR","FORMAT_24_HOUR","defaultProps","undefined","contextTypes","intl","context","Error","TimeInput","_React$Component","props","_this","this","call","validateTime","process","env","console","warn","concat","timeInputContainer","createRef","handleHourChange","handleMinuteChange","handleSecondChange","handleHourInputKeyDown","handleMinuteInputKeyDown","handleSecondInputKeyDown","handleFocus","handleHourFocus","handleMinuteFocus","handleSecondFocus","handleHourBlur","handleMinuteBlur","handleSecondBlur","handleMeridiemBlur","handleMeridiemChange","handleMeridiemInputKeyDown","handleMeridiemInputFocus","handleMeridiemSelectFocus","handleMeridiemButtonChange","meridiem","hour","splitHour","messages","anteMeridiem","formatMessage","id","postMeridiem","parsedHour","parseTwelveHourTime","hourString","state","minute","splitMinute","second","splitSecond","isFocused","hourInitialFocused","minuteInitialFocused","secondInitialFocused","meridiemFocused","key","prevProps","setState","event","current","contains","relatedTarget","secondInput","setSelectionRange","length","minuteInput","hourInput","handleBlur","inputType","HOUR","MINUTE","SECOND","MERIDIEM","type","stateValue","target","handleValueChange","activeTarget","document","activeElement","validNumericInput","inputValue","maxValue","Number","digitsToPrependZero","push","indexOf","focus","meridiemSelect","toString","previousStateValue","keyCode","KEY_UP","incrementHour","KEY_DOWN","decrementHour","KEY_RIGHT","focusMinuteFromHour","selectionEnd","preventDefault","incrementMinute","decrementMinute","KEY_LEFT","KEY_DELETE","KEY_BACK_SPACE","focusHour","focusSecondFromMinute","focusMeridiemFromMinute","incrementSecond","decrementSecond","focusMinuteFromSecond","focusMeridiemFromSecond","timeValue","formatHour","tempHour","parseInt","_this2","_this$props","_refCallback","customProps","instanceHoursAttrs","instanceMinuteAttrs","instanceSecondAttrs","createElement","className","ref","inputRef","placeholder","maxLength","onKeyDown","size","pattern","htmlFor","Fragment","selectedKeys","Button","text","isDisabled","selectedKey","_this3","_this$props2","_refCallback2","timeInputClassNames","focused","tabIndex","readOnly","select","isConsideredMobileDevice","mobileInput","desktopInput","Component","_default","TimeUtil","test","numericHour","timeVariant","minValue","numericMinute","numericSecond","time","hourMinuteAndSecond","split","hasSeconds","window","matchMedia","matches","DocumentTouch","navigator","maxTouchPoints","msMaxTouchPoints","configurable","enumerable","writable","module"],"mappings":"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","file":"9-2de1cfcf817061f20831.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraFormInput = _interopRequireDefault(require(\"terra-form-input\"));\n\nvar _terraButtonGroup = _interopRequireDefault(require(\"terra-button-group\"));\n\nvar _keycodeJs = _interopRequireDefault(require(\"keycode-js\"));\n\nvar _TimeUtil = _interopRequireDefault(require(\"./TimeUtil\"));\n\nvar _TimeInputModule = _interopRequireDefault(require(\"./TimeInput.module.scss\"));\n\nvar cx = _bind.default.bind(_TimeInputModule.default);\n\nvar propTypes = {\n  /**\n   * Whether the time input should be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Custom input attributes that apply to the hour, minute, and second inputs.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  inputAttributes: _propTypes.default.object,\n\n  /**\n   * Custom input attributes to apply to the hour input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  hourAttributes: _propTypes.default.object,\n\n  /**\n   * Custom input attributes to apply to the minutes input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  minuteAttributes: _propTypes.default.object,\n\n  /**\n   * Name of the time input. The name should be unique.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * A callback function to execute when the entire time input component loses focus.\n   * This event does not get triggered when the focus is moved from the hour input to the minute input or meridiem because the focus is still within the main time input component.\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * A callback function to execute when either the hour or minute has been changed.\n   * The first parameter is the event. The second parameter is the changed time value.\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * A callback function triggered when the hour input or minute input receives focus.\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * Callback ref to pass into the input dom element.\n   */\n  refCallback: _propTypes.default.func,\n\n  /**\n   * Custom input attribues to apply to the seconds input\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  secondAttributes: _propTypes.default.object,\n\n  /**\n   * Whether the input for seconds should be displayed or not. If true then the second field must have a valid\n   * number for the overall time to be considered valid.\n   */\n  showSeconds: _propTypes.default.bool,\n\n  /**\n   * An ISO 8601 string representation of the time value in the input.\n   */\n  value: _propTypes.default.string,\n\n  /**\n   * Type of time input to initialize. Must be '24-hour' or '12-hour'\n   */\n  variant: _propTypes.default.oneOf([_TimeUtil.default.FORMAT_12_HOUR, _TimeUtil.default.FORMAT_24_HOUR])\n};\nvar defaultProps = {\n  disabled: false,\n  inputAttributes: {},\n  minuteAttributes: {},\n  hourAttributes: {},\n  onBlur: null,\n  onChange: null,\n  onFocus: undefined,\n  refCallback: undefined,\n  secondAttributes: {},\n  showSeconds: false,\n  value: undefined,\n  variant: _TimeUtil.default.FORMAT_24_HOUR\n};\nvar contextTypes = {\n  /* eslint-disable consistent-return */\n  intl: function intl(context) {\n    if (context.intl === undefined) {\n      return new Error('Component is internationalized, and must be wrapped in terra-base');\n    }\n  }\n};\n\nvar TimeInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(TimeInput, _React$Component);\n\n  function TimeInput(props, context) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TimeInput);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeInput).call(this, props));\n    var value = _this.props.value;\n    var showSeconds = _this.props.showSeconds;\n\n    if (value && !_TimeUtil.default.validateTime(value, showSeconds)) {\n      if (process.env !== 'production') {\n        // eslint-disable-next-line no-console\n        console.warn(\"An invalid time value, \".concat(value, \", has been passed to the terra-time-picker. \") + 'This value has been ignored and will not be rendered. ' + \"Time values must be in \".concat(showSeconds ? 'hh:mm:ss' : 'hh:mm', \" format because showSeconds is \").concat(showSeconds, \".\"));\n      }\n\n      value = undefined;\n    }\n\n    _this.timeInputContainer = _react.default.createRef();\n    _this.handleHourChange = _this.handleHourChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMinuteChange = _this.handleMinuteChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleSecondChange = _this.handleSecondChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleHourInputKeyDown = _this.handleHourInputKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMinuteInputKeyDown = _this.handleMinuteInputKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleSecondInputKeyDown = _this.handleSecondInputKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleFocus = _this.handleFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleHourFocus = _this.handleHourFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMinuteFocus = _this.handleMinuteFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleSecondFocus = _this.handleSecondFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleHourBlur = _this.handleHourBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMinuteBlur = _this.handleMinuteBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleSecondBlur = _this.handleSecondBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMeridiemBlur = _this.handleMeridiemBlur.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMeridiemChange = _this.handleMeridiemChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMeridiemInputKeyDown = _this.handleMeridiemInputKeyDown.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMeridiemInputFocus = _this.handleMeridiemInputFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMeridiemSelectFocus = _this.handleMeridiemSelectFocus.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleMeridiemButtonChange = _this.handleMeridiemButtonChange.bind((0, _assertThisInitialized2.default)(_this));\n\n    var hour = _TimeUtil.default.splitHour(value);\n\n    var meridiem;\n\n    if (props.variant === _TimeUtil.default.FORMAT_12_HOUR) {\n      if (!context.intl.messages['Terra.timeInput.am'] || !context.intl.messages['Terra.timeInput.pm']) {\n        if (process.env !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn('This locale only uses 24 hour clock. The ante meridiem and post meridiem will not be displayed');\n        }\n\n        _this.anteMeridiem = '';\n        _this.postMeridiem = '';\n      } else {\n        _this.anteMeridiem = context.intl.formatMessage({\n          id: 'Terra.timeInput.am'\n        });\n        _this.postMeridiem = context.intl.formatMessage({\n          id: 'Terra.timeInput.pm'\n        });\n      }\n\n      if (hour) {\n        var parsedHour = _TimeUtil.default.parseTwelveHourTime(hour, _this.anteMeridiem, _this.postMeridiem);\n\n        hour = parsedHour.hourString; // eslint-disable-next-line prefer-destructuring\n\n        meridiem = parsedHour.meridiem;\n      } else {\n        meridiem = _this.anteMeridiem;\n      }\n    }\n\n    _this.state = {\n      hour: hour,\n      minute: _TimeUtil.default.splitMinute(value),\n      second: _TimeUtil.default.splitSecond(value),\n      isFocused: false,\n      meridiem: meridiem,\n      hourInitialFocused: false,\n      minuteInitialFocused: false,\n      secondInitialFocused: false,\n      meridiemFocused: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(TimeInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.value === prevProps.value && this.props.variant === prevProps.variant) {\n        return;\n      }\n\n      var hour = _TimeUtil.default.splitHour(this.props.value);\n\n      var meridiem = this.state.meridiem;\n\n      if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR) {\n        if (!this.context.intl.messages['Terra.timeInput.am'] || !this.context.intl.messages['Terra.timeInput.pm']) {\n          if (process.env !== 'production') {\n            // eslint-disable-next-line no-console\n            console.warn('This locale only uses 24 hour clock. The ante meridiem and post meridiem will not be displayed');\n          }\n\n          this.anteMeridiem = '';\n          this.postMeridiem = '';\n        } else {\n          this.anteMeridiem = this.context.intl.formatMessage({\n            id: 'Terra.timeInput.am'\n          });\n          this.postMeridiem = this.context.intl.formatMessage({\n            id: 'Terra.timeInput.pm'\n          });\n        }\n\n        if (hour) {\n          var parsedHour = _TimeUtil.default.parseTwelveHourTime(hour, this.anteMeridiem, this.postMeridiem);\n\n          hour = parsedHour.hourString; // eslint-disable-next-line prefer-destructuring\n\n          meridiem = parsedHour.meridiem;\n        }\n      } // eslint-disable-next-line react/no-did-update-set-state\n\n\n      this.setState({\n        hour: hour,\n        minute: _TimeUtil.default.splitMinute(this.props.value),\n        second: _TimeUtil.default.splitSecond(this.props.value),\n        meridiem: meridiem\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(event) {\n      if (this.props.onFocus && !this.timeInputContainer.current.contains(event.relatedTarget)) {\n        this.props.onFocus(event);\n      }\n\n      this.setState({\n        isFocused: true\n      });\n    }\n  }, {\n    key: \"handleSecondFocus\",\n    value: function handleSecondFocus(event) {\n      this.handleFocus(event);\n      this.setState({\n        secondInitialFocused: true\n      });\n      this.secondInput.setSelectionRange(0, this.secondInput.value.length);\n    }\n  }, {\n    key: \"handleMinuteFocus\",\n    value: function handleMinuteFocus(event) {\n      this.handleFocus(event);\n      this.setState({\n        minuteInitialFocused: true\n      });\n      this.minuteInput.setSelectionRange(0, this.minuteInput.value.length);\n    }\n  }, {\n    key: \"handleHourFocus\",\n    value: function handleHourFocus(event) {\n      this.handleFocus(event);\n      this.setState({\n        hourInitialFocused: true\n      });\n      this.hourInput.setSelectionRange(0, this.hourInput.value.length);\n    }\n  }, {\n    key: \"handleHourBlur\",\n    value: function handleHourBlur(event) {\n      this.handleBlur(event, _TimeUtil.default.inputType.HOUR);\n      this.setState({\n        hourInitialFocused: false\n      });\n    }\n  }, {\n    key: \"handleMinuteBlur\",\n    value: function handleMinuteBlur(event) {\n      this.handleBlur(event, _TimeUtil.default.inputType.MINUTE);\n      this.setState({\n        minuteInitialFocused: false\n      });\n    }\n  }, {\n    key: \"handleSecondBlur\",\n    value: function handleSecondBlur(event) {\n      this.handleBlur(event, _TimeUtil.default.inputType.SECOND);\n      this.setState({\n        secondInitialFocused: false\n      });\n    }\n  }, {\n    key: \"handleMeridiemBlur\",\n    value: function handleMeridiemBlur(event) {\n      this.handleBlur(event, _TimeUtil.default.inputType.MERIDIEM);\n      this.setState({\n        meridiemFocused: false\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(event, type) {\n      this.setState({\n        isFocused: false\n      });\n\n      if (type === _TimeUtil.default.inputType.HOUR || type === _TimeUtil.default.inputType.MINUTE || type === _TimeUtil.default.inputType.SECOND) {\n        var stateValue = event.target.value; // Prepend a 0 to the value when losing focus and the value is single digit.\n\n        if (stateValue.length === 1) {\n          if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && type === _TimeUtil.default.inputType.HOUR && stateValue === '0') {\n            stateValue = '12';\n          } else {\n            stateValue = '0'.concat(stateValue);\n          }\n\n          this.handleValueChange(event, type, stateValue, this.state.meridiem);\n        }\n      }\n\n      if (this.props.onBlur) {\n        // Modern browsers support event.relatedTarget but event.relatedTarget returns null in IE 10 / IE 11.\n        // IE 11 sets document.activeElement to the next focused element before the blur event is called.\n        var activeTarget = event.relatedTarget ? event.relatedTarget : document.activeElement; // Handle blur only if focus has moved out of the entire time input component.\n\n        if (!this.timeInputContainer.current.contains(activeTarget)) {\n          this.props.onBlur(event);\n        }\n      }\n    }\n  }, {\n    key: \"handleHourChange\",\n    value: function handleHourChange(event) {\n      if (!_TimeUtil.default.validNumericInput(event.target.value)) {\n        return;\n      }\n\n      var inputValue = event.target.value;\n      var stateValue = this.state.hour;\n      var maxValue = this.props.variant === _TimeUtil.default.FORMAT_12_HOUR ? 12 : 23; // Ignore the entry if the value did not change or it is invalid.\n      // When 'Predictive text' is enabled on Android the maxLength attribute on the input is ignored so we have to\n      // check the length of inputValue to make sure that it is less then 2.\n\n      if (inputValue === stateValue || inputValue.length > 2 || Number(inputValue) > maxValue) {\n        return;\n      } // If the change made was not a deletion of a digit, then prepend '0' if the input value is a\n      // single digit value between 3 and 9 for a 24 hour time, or 2 and 9 for a 12 hour clock\n\n\n      if (inputValue.length >= stateValue.length) {\n        var digitsToPrependZero = ['3', '4', '5', '6', '7', '8', '9'];\n\n        if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR) {\n          digitsToPrependZero.push('2');\n        }\n\n        if (digitsToPrependZero.indexOf(inputValue) > -1) {\n          inputValue = '0'.concat(inputValue);\n        }\n      }\n\n      if (inputValue === '00' && this.props.variant === _TimeUtil.default.FORMAT_12_HOUR) {\n        inputValue = '12';\n      } // // Move focus to the minute input if the hour input has a valid and complete entry.\n\n\n      if (inputValue.length === 2) {\n        this.minuteInput.focus();\n      }\n\n      this.handleValueChange(event, _TimeUtil.default.inputType.HOUR, inputValue, this.state.meridiem);\n    }\n  }, {\n    key: \"handleMinuteChange\",\n    value: function handleMinuteChange(event) {\n      if (!_TimeUtil.default.validNumericInput(event.target.value)) {\n        return;\n      }\n\n      var inputValue = event.target.value;\n      var stateValue = this.state.minute;\n      var maxValue = 59; // Ignore the entry if the value did not change or it is invalid.\n      // When 'Predictive text' is enabled on Android the maxLength attribute on the input is ignored so we have\n      // to check the length of inputValue to make sure that it is less then 2.\n\n      if (inputValue === stateValue || inputValue.length > 2 || Number(inputValue) > maxValue) {\n        return;\n      } // If the change made was not a deletion of a digit, then prepend '0'\n      // if the input value is a single digit value between 6 and 9.\n\n\n      if (inputValue.length >= stateValue.length) {\n        var digitsToPrependZero = ['6', '7', '8', '9'];\n\n        if (digitsToPrependZero.indexOf(inputValue) > -1) {\n          inputValue = '0'.concat(inputValue);\n        }\n      }\n\n      if (inputValue.length === 2) {\n        if (this.props.showSeconds) {\n          // Move focus to second if second is shown and minute input has a valid and complete entry\n          this.secondInput.focus();\n        } else if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && this.meridiemSelect) {\n          // Else move focus to the merdiem for 12 hours times if the minute input has a valid and complete entry.\n          this.meridiemSelect.focus();\n        }\n      }\n\n      this.handleValueChange(event, _TimeUtil.default.inputType.MINUTE, inputValue, this.state.meridiem);\n    }\n  }, {\n    key: \"handleSecondChange\",\n    value: function handleSecondChange(event) {\n      if (!_TimeUtil.default.validNumericInput(event.target.value)) {\n        return;\n      }\n\n      var inputValue = event.target.value;\n      var stateValue = this.state.second;\n      var maxValue = 59; // Ignore the entry if the value did not change or it is invalid.\n      // When 'Predictive text' is enabled on Android the maxLength attribute on the input is ignored so we have\n      // to check the length of inputValue to make sure that it is less then 2.\n\n      if (inputValue === stateValue || inputValue.length > 2 || Number(inputValue) > maxValue) {\n        return;\n      } // If the change made was not a deletion of a digit, then prepend '0'\n      // if the input value is a single digit value between 6 and 9.\n\n\n      if (inputValue.length >= stateValue.length) {\n        var digitsToPrependZero = ['6', '7', '8', '9'];\n\n        if (digitsToPrependZero.indexOf(inputValue) > -1) {\n          inputValue = '0'.concat(inputValue);\n        }\n      } // Move focus to the merdiem for 12 hours times if the second input has a valid and complete entry.\n\n\n      if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && inputValue.length === 2 && this.meridiemSelect) {\n        this.meridiemSelect.focus();\n      }\n\n      this.handleValueChange(event, _TimeUtil.default.inputType.SECOND, inputValue, this.state.meridiem);\n    }\n  }, {\n    key: \"handleMeridiemChange\",\n    value: function handleMeridiemChange(event) {\n      this.setState({\n        meridiem: event.target.value\n      });\n      this.handleValueChange(event, _TimeUtil.default.inputType.HOUR, this.state.hour.toString(), event.target.value);\n    }\n  }, {\n    key: \"handleMeridiemInputFocus\",\n    value: function handleMeridiemInputFocus(event) {\n      // When clicked to put focus on the meridiem input, the focus would then need to be passed and set on the meridium select,\n      // which would call handleMeridiemSelectFocus, to get the desired behavior and styles.\n      this.meridiemSelect.focus();\n\n      if (this.props.onFocus && !this.timeInputContainer.current.contains(event.relatedTarget)) {\n        this.props.onFocus(event);\n      }\n    }\n  }, {\n    key: \"handleMeridiemSelectFocus\",\n    value: function handleMeridiemSelectFocus() {\n      this.setState({\n        isFocused: true,\n        meridiemFocused: true\n      });\n    }\n    /**\n     * Takes a key input from the hour input, and processes it based on the value of the keycode.\n     * If the key is an up or down arrow, it increments/decrements the hour. If the right arrow\n     * is pressed, it shifts focus to the minute input.\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"handleHourInputKeyDown\",\n    value: function handleHourInputKeyDown(event) {\n      var stateValue = this.state.hour;\n      var meridiem = this.state.meridiem;\n      var previousStateValue = stateValue;\n\n      if (event.keyCode === _keycodeJs.default.KEY_UP) {\n        stateValue = _TimeUtil.default.incrementHour(stateValue, this.props.variant); // Hitting 12 when incrementing up changes the meridiem\n\n        if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && stateValue === '12') {\n          if (meridiem === this.postMeridiem || !previousStateValue) {\n            meridiem = this.anteMeridiem;\n          } else {\n            meridiem = this.postMeridiem;\n          }\n        }\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_DOWN) {\n        stateValue = _TimeUtil.default.decrementHour(stateValue, this.props.variant); // Hitting 11 when incrementing down changes the meridiem\n\n        if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && stateValue === '11') {\n          meridiem = meridiem === this.postMeridiem ? this.anteMeridiem : this.postMeridiem;\n        }\n      }\n\n      if (stateValue !== previousStateValue) {\n        this.handleValueChange(event, _TimeUtil.default.inputType.HOUR, stateValue, meridiem);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_RIGHT) {\n        this.focusMinuteFromHour(event);\n      }\n    }\n  }, {\n    key: \"focusMinuteFromHour\",\n    value: function focusMinuteFromHour(event) {\n      // If the hour is empty or the cursor is after the value, move focus to the minute input when the right arrow is pressed.\n      if (this.state.hour.length === 0 || this.state.hour.length === this.hourInput.selectionEnd) {\n        this.minuteInput.focus();\n        this.minuteInput.setSelectionRange(0, 0);\n        event.preventDefault();\n      }\n    }\n    /**\n     * Takes a key input from the minute input, and processes it based on the value of the keycode.\n     * If the key is an up or down arrow, it increments/decrements the minute. If the left arrow\n     * is pressed, it shifts focus to the hour input. If the right arrow is pressed, it shifts\n     * focus to the merdiem input.\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"handleMinuteInputKeyDown\",\n    value: function handleMinuteInputKeyDown(event) {\n      var stateValue = this.state.minute;\n      var previousStateValue = stateValue;\n\n      if (event.keyCode === _keycodeJs.default.KEY_UP) {\n        stateValue = _TimeUtil.default.incrementMinute(stateValue);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_DOWN) {\n        stateValue = _TimeUtil.default.decrementMinute(stateValue);\n      }\n\n      if (previousStateValue !== stateValue) {\n        this.handleValueChange(event, _TimeUtil.default.inputType.MINUTE, stateValue, this.state.meridiem);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_LEFT || event.keyCode === _keycodeJs.default.KEY_DELETE || event.keyCode === _keycodeJs.default.KEY_BACK_SPACE) {\n        this.focusHour(event);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_RIGHT) {\n        if (this.props.showSeconds) {\n          this.focusSecondFromMinute(event);\n        } else {\n          this.focusMeridiemFromMinute(event);\n        }\n      }\n    }\n  }, {\n    key: \"focusHour\",\n    value: function focusHour(event) {\n      // If the cursor is at the left most position in the minute input, is empty or the cursor is before the value,\n      // move focus to the hour input\n      if (this.minuteInput.selectionEnd === 0) {\n        this.hourInput.focus();\n\n        if (this.state.hour) {\n          this.hourInput.setSelectionRange(this.state.hour.length, this.state.hour.length);\n          event.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"focusMeridiemFromMinute\",\n    value: function focusMeridiemFromMinute(event) {\n      // If the minute is empty or the cursor is after the value, move focus to the meridiem.\n      if ((this.state.minute.length === 0 || this.state.minute.length === this.minuteInput.selectionEnd) && this.meridiemSelect) {\n        this.meridiemSelect.focus();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"focusSecondFromMinute\",\n    value: function focusSecondFromMinute(event) {\n      // If the minute is empty or the cursor is after the value, move focus to the meridiem.\n      if ((this.state.minute.length === 0 || this.state.minute.length === this.minuteInput.selectionEnd) && this.secondInput) {\n        this.secondInput.focus();\n\n        if (this.state.second) {\n          this.secondInput.setSelectionRange(0, 0);\n          event.preventDefault();\n        }\n      }\n    }\n    /**\n     * Takes a key input from the second input, and processes it based on the value of the keycode.\n     * If the key is an up or down arrow, it increments/decrements the second. If the left arrow\n     * is pressed, it shifts focus to the minute input. If the right arrow is pressed, it shifts\n     * focus to the merdiem input.\n     * @param {Object} event Event object generated from the event delegation.\n     */\n\n  }, {\n    key: \"handleSecondInputKeyDown\",\n    value: function handleSecondInputKeyDown(event) {\n      var stateValue = this.state.second;\n      var previousStateValue = stateValue;\n\n      if (event.keyCode === _keycodeJs.default.KEY_UP) {\n        stateValue = _TimeUtil.default.incrementSecond(stateValue);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_DOWN) {\n        stateValue = _TimeUtil.default.decrementSecond(stateValue);\n      }\n\n      if (previousStateValue !== stateValue) {\n        this.handleValueChange(event, _TimeUtil.default.inputType.SECOND, stateValue, this.state.meridiem);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_LEFT || event.keyCode === _keycodeJs.default.KEY_DELETE || event.keyCode === _keycodeJs.default.KEY_BACK_SPACE) {\n        this.focusMinuteFromSecond(event);\n      }\n\n      if (event.keyCode === _keycodeJs.default.KEY_RIGHT) {\n        this.focusMeridiemFromSecond(event);\n      }\n    }\n  }, {\n    key: \"focusMinuteFromSecond\",\n    value: function focusMinuteFromSecond(event) {\n      // If the cursor is at the left most position in the second input, is empty or the cursor is before the value,\n      // move focus to the minute input\n      if (this.secondInput.selectionEnd === 0) {\n        this.minuteInput.focus();\n\n        if (this.state.minute) {\n          this.minuteInput.setSelectionRange(this.state.minute.length, this.state.minute.length);\n          event.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"focusMeridiemFromSecond\",\n    value: function focusMeridiemFromSecond(event) {\n      // If the second is empty or the cursor is after the value, move focus to the meridiem.\n      if ((this.state.second.length === 0 || this.state.second.length === this.secondInput.selectionEnd) && this.meridiemSelect) {\n        this.meridiemSelect.focus();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange(event, type, timeValue, meridiem) {\n      if (type === _TimeUtil.default.inputType.HOUR) {\n        this.setState({\n          hour: timeValue,\n          meridiem: meridiem,\n          hourInitialFocused: false\n        });\n      } else if (type === _TimeUtil.default.inputType.MINUTE) {\n        this.setState({\n          minute: timeValue,\n          minuteInitialFocused: false\n        });\n      } else {\n        this.setState({\n          second: timeValue,\n          secondInitialFocused: false\n        });\n      } // Input values of length 1 indicate incomplete time, which means we cannot get a\n      // reliable time so onChange isn't triggered.\n\n\n      if (this.props.onChange && timeValue.length !== 1) {\n        var hour = type === _TimeUtil.default.inputType.HOUR ? timeValue : this.state.hour;\n        var minute = type === _TimeUtil.default.inputType.MINUTE ? timeValue : this.state.minute;\n        var second = type === _TimeUtil.default.inputType.SECOND ? timeValue : this.state.second;\n\n        if (hour === '' && minute === '' && second === '') {\n          this.props.onChange(event, '');\n        } else {\n          this.props.onChange(event, this.formatHour(hour, meridiem).concat(':', minute).concat(this.props.showSeconds ? ':'.concat(second) : ''));\n        }\n      }\n    }\n  }, {\n    key: \"formatHour\",\n    value: function formatHour(hour, meridiem) {\n      if (!hour) {\n        return hour;\n      }\n\n      var tempHour = parseInt(hour, 10);\n\n      if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR) {\n        if (meridiem === this.postMeridiem && tempHour < 12) {\n          tempHour += 12;\n        } else if (meridiem === this.anteMeridiem && tempHour === 12) {\n          tempHour = 0;\n        }\n      }\n\n      var hourString = tempHour.toString();\n\n      if (hourString.length < 2) {\n        hourString = '0'.concat(hourString);\n      }\n\n      return hourString;\n    }\n  }, {\n    key: \"handleMeridiemInputKeyDown\",\n    value: function handleMeridiemInputKeyDown(event) {\n      if (event.keyCode === _keycodeJs.default.KEY_LEFT || event.keyCode === _keycodeJs.default.KEY_DELETE || event.keyCode === _keycodeJs.default.KEY_BACK_SPACE) {\n        if (this.props.showSeconds) {\n          this.secondInput.focus();\n\n          if (this.state.second) {\n            this.secondInput.setSelectionRange(this.state.second.length, this.state.second.length);\n          }\n        } else {\n          this.minuteInput.focus();\n\n          if (this.state.minute) {\n            this.minuteInput.setSelectionRange(this.state.minute.length, this.state.minute.length);\n          }\n        }\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"mobileInput\",\n    value: function mobileInput() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          inputAttributes = _this$props.inputAttributes,\n          minuteAttributes = _this$props.minuteAttributes,\n          hourAttributes = _this$props.hourAttributes,\n          onBlur = _this$props.onBlur,\n          onChange = _this$props.onChange,\n          onFocus = _this$props.onFocus,\n          name = _this$props.name,\n          _refCallback = _this$props.refCallback,\n          secondAttributes = _this$props.secondAttributes,\n          showSeconds = _this$props.showSeconds,\n          value = _this$props.value,\n          variant = _this$props.variant,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"disabled\", \"inputAttributes\", \"minuteAttributes\", \"hourAttributes\", \"onBlur\", \"onChange\", \"onFocus\", \"name\", \"refCallback\", \"secondAttributes\", \"showSeconds\", \"value\", \"variant\"]);\n      var instanceHoursAttrs = (0, _extends2.default)({}, hourAttributes);\n      var instanceMinuteAttrs = (0, _extends2.default)({}, minuteAttributes);\n      var instanceSecondAttrs = (0, _extends2.default)({}, secondAttributes); // Using the state of hour, minute, and second (if shown) create a time in UTC represented in ISO 8601 format.\n\n      var timeValue = '';\n\n      if (this.state.hour.length > 0 || this.state.minute.length > 0 || this.state.second.length > 0) {\n        var hour = parseInt(this.state.hour, 10);\n\n        if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && this.state.meridiem === this.postMeridiem && hour > 12) {\n          hour += 12;\n        }\n\n        timeValue = 'T'.concat(hour, ':', this.state.minute).concat(showSeconds ? ':'.concat(this.state.second) : '');\n      }\n\n      if (!instanceHoursAttrs.id) {\n        instanceHoursAttrs.id = 'terra-time-hour-'.concat(name);\n      }\n\n      if (!instanceMinuteAttrs.id) {\n        instanceMinuteAttrs.id = 'terra-time-minute-'.concat(name);\n      }\n\n      if (!instanceSecondAttrs.id) {\n        instanceSecondAttrs.id = 'terra-time-second-'.concat(name);\n      }\n\n      return _react.default.createElement(\"div\", (0, _extends2.default)({}, customProps, {\n        className: cx(['mobile-time-picker', customProps.className]),\n        ref: this.timeInputContainer\n      }), _react.default.createElement(\"input\", {\n        // Create a hidden input for storing the name and value attributes to use when submitting the form.\n        // The data stored in the value attribute will be the visible date in the date input but in ISO 8601 format.\n        type: \"hidden\",\n        name: name,\n        value: timeValue\n      }), _react.default.createElement(\"div\", {\n        className: cx('time-input-group')\n      }, _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, instanceHoursAttrs, {\n        refCallback: function refCallback(inputRef) {\n          _this2.hourInput = inputRef;\n          if (_refCallback) _refCallback(inputRef);\n        },\n        className: cx('time-input-hour'),\n        value: this.state.hour,\n        name: 'terra-time-hour-'.concat(name),\n        placeholder: this.context.intl.formatMessage({\n          id: 'Terra.timeInput.hh'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleHourChange,\n        onKeyDown: this.handleHourInputKeyDown,\n        onFocus: this.handleFocus,\n        onBlur: this.handleHourBlur,\n        size: \"2\",\n        pattern: \"\\\\d*\",\n        disabled: disabled\n      })), _react.default.createElement(\"label\", {\n        htmlFor: instanceHoursAttrs.id,\n        className: cx('mobile-input-label')\n      }, this.context.intl.formatMessage({\n        id: 'Terra.timeInput.hours'\n      }))), _react.default.createElement(\"span\", {\n        className: cx('time-spacer')\n      }, \":\"), _react.default.createElement(\"div\", {\n        className: cx('time-input-group')\n      }, _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, instanceMinuteAttrs, {\n        refCallback: function refCallback(inputRef) {\n          _this2.minuteInput = inputRef;\n        },\n        className: cx('time-input-minute', showSeconds ? 'with-second' : 'without-second'),\n        value: this.state.minute,\n        name: 'terra-time-minute-'.concat(name),\n        placeholder: this.context.intl.formatMessage({\n          id: 'Terra.timeInput.mm'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleMinuteChange,\n        onKeyDown: this.handleMinuteInputKeyDown,\n        onFocus: this.handleFocus,\n        onBlur: this.handleMinuteBlur,\n        size: \"2\",\n        pattern: \"\\\\d*\",\n        disabled: disabled\n      })), _react.default.createElement(\"label\", {\n        htmlFor: instanceMinuteAttrs.id,\n        className: cx('mobile-input-label')\n      }, this.context.intl.formatMessage({\n        id: 'Terra.timeInput.minutes'\n      }))), showSeconds && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"span\", {\n        className: cx('time-spacer')\n      }, \":\"), _react.default.createElement(\"div\", {\n        className: cx('time-input-group')\n      }, _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, instanceSecondAttrs, {\n        refCallback: function refCallback(inputRef) {\n          _this2.secondInput = inputRef;\n        },\n        className: cx('time-input-second'),\n        value: this.state.second,\n        name: 'terra-time-second-'.concat(name),\n        placeholder: this.context.intl.formatMessage({\n          id: 'Terra.timeInput.ss'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleSecondChange,\n        onKeyDown: this.handleSecondInputKeyDown,\n        onFocus: this.handleFocus,\n        onBlur: this.handleSecondBlur,\n        size: \"2\",\n        pattern: \"\\\\d*\",\n        disabled: disabled\n      })), _react.default.createElement(\"label\", {\n        htmlFor: instanceSecondAttrs.id,\n        className: cx('mobile-input-label')\n      }, this.context.intl.formatMessage({\n        id: 'Terra.timeInput.seconds'\n      })))), this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && _react.default.createElement(_terraButtonGroup.default, {\n        selectedKeys: [this.state.meridiem],\n        onChange: this.handleMeridiemButtonChange,\n        className: cx('meridiem-button-group')\n      }, _react.default.createElement(_terraButtonGroup.default.Button, {\n        key: this.anteMeridiem,\n        className: cx('meridiem-button'),\n        text: this.anteMeridiem,\n        onBlur: this.handleMeridiemBlur,\n        onFocus: this.handleFocus,\n        isDisabled: disabled\n      }), _react.default.createElement(_terraButtonGroup.default.Button, {\n        key: this.postMeridiem,\n        className: cx('meridiem-button'),\n        text: this.postMeridiem,\n        onBlur: this.handleMeridiemBlur,\n        onFocus: this.handleFocus,\n        isDisabled: disabled\n      })));\n    }\n  }, {\n    key: \"handleMeridiemButtonChange\",\n    value: function handleMeridiemButtonChange(event, selectedKey) {\n      this.handleValueChange(event, _TimeUtil.default.inputType.HOUR, this.state.hour.toString(), selectedKey);\n    }\n  }, {\n    key: \"desktopInput\",\n    value: function desktopInput() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          inputAttributes = _this$props2.inputAttributes,\n          minuteAttributes = _this$props2.minuteAttributes,\n          hourAttributes = _this$props2.hourAttributes,\n          onBlur = _this$props2.onBlur,\n          onChange = _this$props2.onChange,\n          onFocus = _this$props2.onFocus,\n          name = _this$props2.name,\n          _refCallback2 = _this$props2.refCallback,\n          secondAttributes = _this$props2.secondAttributes,\n          showSeconds = _this$props2.showSeconds,\n          value = _this$props2.value,\n          variant = _this$props2.variant,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props2, [\"disabled\", \"inputAttributes\", \"minuteAttributes\", \"hourAttributes\", \"onBlur\", \"onChange\", \"onFocus\", \"name\", \"refCallback\", \"secondAttributes\", \"showSeconds\", \"value\", \"variant\"]);\n      var timeInputClassNames = cx([{\n        disabled: disabled\n      }, 'time-input', {\n        'is-focused': this.state.isFocused\n      }, customProps.className]); // Using the state of hour and minute create a time in UTC represented in ISO 8601 format.\n\n      var timeValue = '';\n\n      if (this.state.hour.length > 0 || this.state.minute.length > 0 || this.state.second.length > 0 && showSeconds) {\n        var hour = parseInt(this.state.hour, 10);\n\n        if (this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && this.state.meridiem === this.postMeridiem) {\n          hour += 12;\n        }\n\n        timeValue = 'T'.concat(hour, ':', this.state.minute);\n\n        if (showSeconds) {\n          timeValue = timeValue.concat(':', this.state.second);\n        }\n      }\n      /* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n      return _react.default.createElement(\"div\", (0, _extends2.default)({}, customProps, {\n        className: timeInputClassNames,\n        ref: this.timeInputContainer\n      }), _react.default.createElement(\"input\", {\n        // Create a hidden input for storing the name and value attributes to use when submitting the form.\n        // The data stored in the value attribute will be the visible date in the date input but in ISO 8601 format.\n        type: \"hidden\",\n        name: name,\n        value: timeValue\n      }), _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, minuteAttributes, {\n        \"aria-label\": this.context.intl.formatMessage({\n          id: 'Terra.timeInput.hours'\n        }),\n        refCallback: function refCallback(inputRef) {\n          _this3.hourInput = inputRef;\n          if (_refCallback2) _refCallback2(inputRef);\n        },\n        className: cx('time-input-hour', 'desktop', {\n          'initial-focus': this.state.hourInitialFocused\n        }),\n        type: \"text\",\n        value: this.state.hour,\n        name: 'terra-time-hour-'.concat(name),\n        placeholder: this.context.intl.formatMessage({\n          id: 'Terra.timeInput.hh'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleHourChange,\n        onKeyDown: this.handleHourInputKeyDown,\n        onFocus: this.handleHourFocus,\n        onBlur: this.handleHourBlur,\n        size: \"2\",\n        pattern: \"\\\\d*\",\n        disabled: disabled\n      })), _react.default.createElement(\"span\", {\n        className: cx('time-spacer')\n      }, \":\"), _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, minuteAttributes, {\n        refCallback: function refCallback(inputRef) {\n          _this3.minuteInput = inputRef;\n        },\n        \"aria-label\": this.context.intl.formatMessage({\n          id: 'Terra.timeInput.minutes'\n        }),\n        className: cx('time-input-minute', showSeconds ? 'with-second' : 'without-second', 'desktop', {\n          'initial-focus': this.state.minuteInitialFocused\n        }),\n        type: \"text\",\n        value: this.state.minute,\n        name: 'terra-time-minute-'.concat(name),\n        placeholder: this.context.intl.formatMessage({\n          id: 'Terra.timeInput.mm'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleMinuteChange,\n        onKeyDown: this.handleMinuteInputKeyDown,\n        onFocus: this.handleMinuteFocus,\n        onBlur: this.handleMinuteBlur,\n        size: \"2\",\n        pattern: \"\\\\d*\",\n        disabled: disabled\n      })), showSeconds && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"span\", {\n        className: cx('time-spacer')\n      }, \":\"), _react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, secondAttributes, {\n        refCallback: function refCallback(inputRef) {\n          _this3.secondInput = inputRef;\n        },\n        \"aria-label\": this.context.intl.formatMessage({\n          id: 'Terra.timeInput.seconds'\n        }),\n        className: cx('time-input-second', 'desktop', {\n          'initial-focus': this.state.secondInitialFocused\n        }),\n        type: \"text\",\n        value: this.state.second,\n        name: 'terra-time-second-'.concat(name),\n        placeholder: this.context.intl.formatMessage({\n          id: 'Terra.timeInput.ss'\n        }),\n        maxLength: \"2\",\n        onChange: this.handleSecondChange,\n        onKeyDown: this.handleSecondInputKeyDown,\n        onFocus: this.handleSecondFocus,\n        onBlur: this.handleSecondBlur,\n        size: \"2\",\n        pattern: \"\\\\d*\",\n        disabled: disabled\n      }))), this.props.variant === _TimeUtil.default.FORMAT_12_HOUR && [_react.default.createElement(_terraFormInput.default, (0, _extends2.default)({}, inputAttributes, {\n        \"aria-label\": this.context.intl.formatMessage({\n          id: 'Terra.timeInput.display.meridiem'\n        }) // value in translations set to 'Display Meridiem'\n        ,\n        \"aria-readonly\": true,\n        className: cx(['meridiem-display', {\n          focused: this.state.meridiemFocused\n        }]),\n        onFocus: this.handleMeridiemInputFocus,\n        key: \"meridiem_display\",\n        tabIndex: \"-1\",\n        value: this.state.meridiem,\n        size: this.state.meridiem.length || 1,\n        readOnly: true,\n        disabled: disabled\n      })), _react.default.createElement(\"div\", {\n        className: cx('meridiem-select-wrapper'),\n        key: \"meridiem_select_box\"\n      }, _react.default.createElement(\"select\", {\n        \"aria-label\": this.context.intl.formatMessage({\n          id: 'Terra.timeInput.select.meridiem'\n        }) // value in translations set to 'Select Meridiem'\n        ,\n        ref: function ref(select) {\n          _this3.meridiemSelect = select;\n        },\n        onBlur: this.handleMeridiemBlur,\n        onFocus: this.handleMeridiemSelectFocus,\n        name: 'terra-time-meridiem-'.concat(name),\n        value: this.state.meridiem,\n        className: cx('time-input-meridiem'),\n        onChange: this.handleMeridiemChange,\n        onKeyDown: this.handleMeridiemInputKeyDown,\n        size: \"2\"\n      }, _react.default.createElement(\"option\", {\n        key: \"anteMeridiem\",\n        value: this.anteMeridiem\n      }, this.anteMeridiem), _react.default.createElement(\"option\", {\n        key: \"postMeridiem\",\n        value: this.postMeridiem\n      }, this.postMeridiem)))]);\n      /* eslint-enable jsx-a11y/no-static-element-interactions */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (_TimeUtil.default.isConsideredMobileDevice()) {\n        return this.mobileInput();\n      }\n\n      return this.desktopInput();\n    }\n  }]);\n  return TimeInput;\n}(_react.default.Component);\n\nTimeInput.propTypes = propTypes;\nTimeInput.defaultProps = defaultProps;\nTimeInput.contextTypes = contextTypes;\nvar _default = TimeInput;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar TimeUtil =\n/*#__PURE__*/\nfunction () {\n  function TimeUtil() {\n    (0, _classCallCheck2.default)(this, TimeUtil);\n  }\n\n  (0, _createClass2.default)(TimeUtil, null, [{\n    key: \"validNumericInput\",\n\n    /**\n     * Determines if a provided nuermic input value is valid.\n     * Valid inputs are either empty strings or numeric.\n     * @param {String} value Value to validate\n     * @return True if the value is empty or numeric, false otherwise.\n     */\n    value: function validNumericInput(value) {\n      return value.length === 0 || /^\\d+$/.test(value);\n    }\n    /**\n     * Finds the equivalent twelve hour time and meridiem for a given hour, anteMeridiem, and postMeridiem\n     * @param {String} hour Hour to parse.\n     * @param {String} anteMeridiem String representation of the anteMeridiem.\n     * @param {String} postMeridiem String representation of the postMeridiem.\n     * @return {{hourString: string, meridiem: string}} Hour and meridiem associated to the passed in variables.\n     *   Hour will be in 2 digit format.\n     */\n\n  }, {\n    key: \"parseTwelveHourTime\",\n    value: function parseTwelveHourTime(hour, anteMeridiem, postMeridiem) {\n      var parsedHour = {\n        hourString: hour\n      };\n      var numericHour = parseInt(hour, 10);\n\n      if (numericHour >= 12) {\n        parsedHour.meridiem = postMeridiem;\n\n        if (numericHour > 12) {\n          numericHour -= 12;\n        }\n      } else {\n        parsedHour.meridiem = anteMeridiem;\n\n        if (numericHour === 0) {\n          numericHour = 12;\n        }\n      }\n\n      if (numericHour < 10) {\n        parsedHour.hourString = '0'.concat(numericHour.toString());\n      } else {\n        parsedHour.hourString = numericHour.toString();\n      }\n\n      return parsedHour;\n    }\n    /**\n     * Increments an hour to it's next value. Resets to 01 if the passed in hour is 12 and the variant is a 12 hour clock.\n     * @param {String} hour Hour to increment\n     * @param {String} timeVariant Variant of time the passed in hour refers to.\n     * @return {String} Returns a string representation of the value of an hour after it's incremented. If the\n     *   hour is 01 and the timeVariant is 12, it returns 01.\n     */\n\n  }, {\n    key: \"incrementHour\",\n    value: function incrementHour(hour, timeVariant) {\n      var maxValue = timeVariant === this.FORMAT_12_HOUR ? 12 : 23; // Increment the value by 1 when arrow up is pressed.\n\n      if (hour) {\n        var numericHour = Number(hour);\n\n        if (numericHour < maxValue) {\n          numericHour += 1;\n          return numericHour < 10 ? '0'.concat(numericHour.toString()) : numericHour.toString();\n        }\n\n        if (timeVariant === this.FORMAT_12_HOUR) {\n          return '01';\n        }\n\n        return hour;\n      }\n\n      return timeVariant === this.FORMAT_12_HOUR ? '12' : '00';\n    }\n    /**\n     * Decrements an hour to it's next value. Resets to 12 if the passed in hour is 01 and the variant is a 12 hour clock.\n     * @param {String} hour Hour to decrement\n     * @param {String} timeVariant Variant of time the passed in hour refers to.\n     * @return {String} Returns a string representation of the value of the an hour after it's decremented. If the\n     *   hour is 12 and the timeVariant is 12, it returns 12.\n     */\n\n  }, {\n    key: \"decrementHour\",\n    value: function decrementHour(hour, timeVariant) {\n      var minValue = timeVariant === this.FORMAT_12_HOUR ? 1 : 0;\n\n      if (hour) {\n        var numericHour = Number(hour);\n\n        if (numericHour > minValue) {\n          numericHour -= 1;\n          return numericHour < 10 ? '0'.concat(numericHour.toString()) : numericHour.toString();\n        }\n\n        if (timeVariant === this.FORMAT_12_HOUR) {\n          return '12';\n        }\n\n        return hour;\n      }\n\n      return timeVariant === this.FORMAT_12_HOUR ? '12' : '00';\n    }\n    /**\n     * Increments a minute to it's next value\n     * @param {String} minute Minute to increment\n     * @return {String} Returns a string representation of the value of the passed in minute after it's incremented\n     */\n\n  }, {\n    key: \"incrementMinute\",\n    value: function incrementMinute(minute) {\n      if (minute) {\n        var numericMinute = Number(minute);\n\n        if (numericMinute < 59) {\n          numericMinute += 1;\n          return numericMinute < 10 ? '0'.concat(numericMinute.toString()) : numericMinute.toString();\n        }\n\n        return minute;\n      }\n\n      return '00';\n    }\n    /**\n     * Decrements a minute to it's next value\n     * @param {String} minute Minute to decrement\n     * @return {String} Returns a string representation of the value of the passed in minute after it's decremented\n     */\n\n  }, {\n    key: \"decrementMinute\",\n    value: function decrementMinute(minute) {\n      if (minute) {\n        var numericMinute = Number(minute);\n\n        if (numericMinute > 0) {\n          numericMinute -= 1;\n          return numericMinute < 10 ? '0'.concat(numericMinute.toString()) : numericMinute.toString();\n        }\n\n        return minute;\n      }\n\n      return '00';\n    }\n    /**\n     * Increments a second to it's next value\n     * @param {String} second Second to increment\n     * @return {String} Returns a string representation of the value of the passed in second after it's incremented\n     */\n\n  }, {\n    key: \"incrementSecond\",\n    value: function incrementSecond(second) {\n      if (second) {\n        var numericSecond = Number(second);\n\n        if (numericSecond < 59) {\n          numericSecond += 1;\n          return numericSecond < 10 ? '0'.concat(numericSecond.toString()) : numericSecond.toString();\n        }\n\n        return second;\n      }\n\n      return '00';\n    }\n    /**\n     * Decrements a second to it's next value\n     * @param {String} second Second to decrement\n     * @return {String} Returns a string representation of the value of the passed in second after it's decremented\n     */\n\n  }, {\n    key: \"decrementSecond\",\n    value: function decrementSecond(second) {\n      if (second) {\n        var numericSecond = Number(second);\n\n        if (numericSecond > 0) {\n          numericSecond -= 1;\n          return numericSecond < 10 ? '0'.concat(numericSecond.toString()) : numericSecond.toString();\n        }\n\n        return second;\n      }\n\n      return '00';\n    }\n  }, {\n    key: \"splitHour\",\n    value: function splitHour(time) {\n      if (typeof time === 'string') {\n        var hourMinuteAndSecond = time.split(':');\n\n        if (hourMinuteAndSecond.length) {\n          var hour = Number(hourMinuteAndSecond[0]);\n\n          if (hour >= 0 && hour < 24) {\n            if (hourMinuteAndSecond[0].length === 1) {\n              return '0'.concat(hourMinuteAndSecond[0]);\n            }\n\n            return hourMinuteAndSecond[0];\n          }\n        }\n\n        return '';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"splitMinute\",\n    value: function splitMinute(time) {\n      if (typeof time === 'string') {\n        var hourMinuteAndSecond = time.split(':');\n\n        if (hourMinuteAndSecond.length > 1) {\n          var minute = Number(hourMinuteAndSecond[1]);\n\n          if (minute >= 0 && minute < 60) {\n            if (hourMinuteAndSecond[1].length === 1) {\n              return '0'.concat(hourMinuteAndSecond[1]);\n            }\n\n            return hourMinuteAndSecond[1];\n          }\n        }\n\n        return '';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"splitSecond\",\n    value: function splitSecond(time) {\n      if (typeof time === 'string') {\n        var hourMinuteAndSecond = time.split(':');\n\n        if (hourMinuteAndSecond.length > 2) {\n          var second = Number(hourMinuteAndSecond[2]);\n\n          if (second >= 0 && second < 60) {\n            if (hourMinuteAndSecond[2].length === 1) {\n              return '0'.concat(hourMinuteAndSecond[2]);\n            }\n\n            return hourMinuteAndSecond[2];\n          }\n        }\n\n        return '';\n      }\n\n      return '';\n    }\n    /**\n     * Ensures the passed in value is a valid time in the HH:mm format or HH:mm:ss format if hasSeconds is true\n     * @param {string} value The time to validate\n     * @param {boolean} hasSeconds The time will be required to have seconds if this is true\n     */\n\n  }, {\n    key: \"validateTime\",\n    value: function validateTime(value, hasSeconds) {\n      // Including seconds in the value is required if seconds are shown\n      if (hasSeconds) {\n        return /^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/.test(value);\n      }\n\n      return /^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/.test(value);\n    }\n  }]);\n  return TimeUtil;\n}();\n\nTimeUtil.inputType = {\n  HOUR: 0,\n  MINUTE: 1,\n  MERIDIEM: 2,\n  SECOND: 3\n};\n\nTimeUtil.isConsideredMobileDevice = function () {\n  return window.matchMedia('(max-width: 1024px)').matches && ('ontouchstart' in window // eslint-disable-next-line no-undef\n  || window.DocumentTouch && document instanceof DocumentTouch || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0);\n}; // These formats are designed to be the possible props for the\n// variant prop of the TimeInput. They should not change.\n\n\nObject.defineProperty(TimeUtil, 'FORMAT_12_HOUR', {\n  value: '12-hour',\n  configurable: false,\n  enumerable: true,\n  writable: false\n});\nObject.defineProperty(TimeUtil, 'FORMAT_24_HOUR', {\n  value: '24-hour',\n  configurable: false,\n  enumerable: true,\n  writable: false\n});\nvar _default = TimeUtil;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time-input\":\"TimeInput-module__time-input___3U4jr\",\"time-input-hour\":\"TimeInput-module__time-input-hour___7mUOm\",\"time-input-minute\":\"TimeInput-module__time-input-minute___36DSf\",\"time-input-second\":\"TimeInput-module__time-input-second___18Anl\",\"meridiem-display\":\"TimeInput-module__meridiem-display___7Pf8Y\",\"is-focused\":\"TimeInput-module__is-focused___30ssW\",\"disabled\":\"TimeInput-module__disabled___3xuB0\",\"time-input-group\":\"TimeInput-module__time-input-group___1z6k-\",\"desktop\":\"TimeInput-module__desktop___1gDsM\",\"initial-focus\":\"TimeInput-module__initial-focus___1DxZ3\",\"without-second\":\"TimeInput-module__without-second___2q3rW\",\"with-second\":\"TimeInput-module__with-second___1m4kS\",\"time-spacer\":\"TimeInput-module__time-spacer___11EVG\",\"mobile-time-picker\":\"TimeInput-module__mobile-time-picker___2qnM8\",\"meridiem-button-group\":\"TimeInput-module__meridiem-button-group___hGg4X\",\"mobile-input-label\":\"TimeInput-module__mobile-input-label___uc75h\",\"focused\":\"TimeInput-module__focused___bIj8d\",\"meridiem-button\":\"TimeInput-module__meridiem-button___2VvyL\",\"time-input-meridiem\":\"TimeInput-module__time-input-meridiem___1A3C_\",\"meridiem-select-wrapper\":\"TimeInput-module__meridiem-select-wrapper___wDiSi\"};"],"sourceRoot":""}