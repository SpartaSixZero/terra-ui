(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{1092:function(e,t,n){e.exports={checkbox:"Checkbox-module__checkbox___HI9Vi",label:"Checkbox-module__label___3E8fg","is-mobile":"Checkbox-module__is-mobile___frQvN","native-input":"Checkbox-module__native-input___GvkXw","label-text":"Checkbox-module__label-text___fY5lt","is-hidden":"Checkbox-module__is-hidden___26Rqh","is-disabled":"Checkbox-module__is-disabled___WSQKG","is-inline":"Checkbox-module__is-inline___1jo0Z"}},1093:function(e,t,n){"use strict";var o={isConsideredMobileDevice:function(){return window.matchMedia("(max-width: 1024px)").matches&&("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0)}};e.exports=o},1354:function(e){e.exports=JSON.parse('{"_from":"terra-form-checkbox@^3.0.0","_id":"terra-form-checkbox@3.21.0","_inBundle":false,"_integrity":"sha512-ZCB0bUKt2eemz/xSfBDteO1JHIqysp5XWCMhKsyKu7Izj6Q65sIrcYm6ghcF9WbkLYcF8Oewfb6Npb2ZtdvyGg==","_location":"/terra-form-checkbox","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-form-checkbox@^3.0.0","name":"terra-form-checkbox","escapedName":"terra-form-checkbox","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/","/terra-collapsible-menu-view"],"_resolved":"https://registry.npmjs.org/terra-form-checkbox/-/terra-form-checkbox-3.21.0.tgz","_shasum":"a52983555bbfe5bdb28642e09c2ecfdb43ef8442","_spec":"terra-form-checkbox@^3.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-core/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","lodash.uniqueid":"^4.0.1","prop-types":"^15.5.8","terra-doc-template":"^2.15.0","terra-mixins":"^1.33.0","terra-visually-hidden-text":"^2.14.0"},"deprecated":false,"description":"The Terra Form Checkbox is a responsive input component rendered as a box. When activated, a check mark shall appear. Focus can be activated through tabbing and the checked state can be toggled with the space bar.","gitHead":"0b893dc4a80250c0b485a5f205f2defde7c38ecf","homepage":"https://github.com/cerner/terra-core#readme","keywords":["Cerner","Terra","terra-form-checkbox","Checkbox","UI"],"license":"Apache-2.0","main":"lib/Checkbox.js","name":"terra-form-checkbox","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"3.21.0"}')},2392:function(e,t,n){"use strict";n.r(t),t.default="# Terra Form Checkbox\n\nThe Terra Form Checkbox is a responsive input component rendered as a box next to label text. When activated, a check mark shall appear. Focus can be activated through tabbing and the checked state can be toggled with the space bar.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-form-checkbox`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\n<details>\n<summary>View information on this component's peer dependencies.</summary>\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n\n\n</details>\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Implementation Notes:\nThe Form-Checkbox component must be composed inside the [Base][1] component with a locale in order for it to load the correct translation strings.\n\n[1]: https://github.com/cerner/terra-core/tree/master/packages/terra-base/docs\n\n## Usage\n\n```jsx\nimport React from 'react';\nimport Checkbox from 'terra-form-checkbox';\n\n<Checkbox id=\"checkbox\" labelText=\"Default Checkbox\" />\n```\n\n## Jest Tests:\n* This component requires `window.matchMedia` to be mocked in Jest tests. To do so add the following to the top of your test file(s) that use this component:\n    ```\n    window.matchMedia = () => ({ matches: true });\n    ```\n\n\n## Component Features\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\n"},2393:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './Checkbox.module.scss';\nimport CheckboxUtil from './CheckboxUtil';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n    * Whether or not the checkbox element is checked. Use this to generate a controlled Checkbox Element.\n    */\n  checked: PropTypes.bool,\n  /**\n    * The checked property of the Input element. Use this to generate an uncontrolled Checkbox Element.\n    */\n  defaultChecked: PropTypes.bool,\n  /**\n    * The id of the checkbox.\n    */\n  id: PropTypes.string,\n  /**\n    * Additional attributes for the input object.\n    */\n  // eslint-disable-next-line react/forbid-prop-types\n  inputAttrs: PropTypes.object,\n  /**\n    * Whether the checkbox element is disabled.\n    */\n  disabled: PropTypes.bool,\n  /**\n    * Whether the checkbox element is inline.\n    */\n  isInline: PropTypes.bool,\n  /**\n    * Whether the label is hidden.\n    */\n  isLabelHidden: PropTypes.bool,\n  /**\n    * Text of the label.\n    */\n  labelText: PropTypes.node.isRequired,\n  /**\n    * Additional attributes for the text object.\n    */\n  // eslint-disable-next-line react/forbid-prop-types\n  labelTextAttrs: PropTypes.object,\n  /**\n    * Name attribute of the input.\n    */\n  name: PropTypes.string,\n  /**\n   * Function to trigger when focus is lost from the checkbox.\n   */\n  onBlur: PropTypes.func,\n  /**\n    * Function to trigger when user clicks on the checkbox. Provide a function to create a controlled input.\n    */\n  onChange: PropTypes.func,\n  /**\n   *  Function to trigger when user focuses on the checkbox.\n   */\n  onFocus: PropTypes.func,\n  /**\n    * The value of the input element.\n    */\n  value: PropTypes.string,\n};\n\nconst defaultProps = {\n  checked: undefined,\n  defaultChecked: undefined,\n  id: undefined,\n  inputAttrs: {},\n  disabled: false,\n  isInline: false,\n  isLabelHidden: false,\n  labelTextAttrs: {},\n  name: null,\n  onBlur: undefined,\n  onChange: undefined,\n  onFocus: undefined,\n  value: undefined,\n};\n\nconst Checkbox = ({\n  checked,\n  defaultChecked,\n  inputAttrs,\n  id,\n  disabled,\n  isInline,\n  isLabelHidden,\n  labelText,\n  labelTextAttrs,\n  name,\n  onBlur,\n  onChange,\n  onFocus,\n  value,\n  ...customProps\n}) => {\n  const controlInputAttrs = Object.assign({}, inputAttrs);\n\n  if (checked !== undefined) {\n    controlInputAttrs.checked = checked;\n  } else {\n    controlInputAttrs.defaultChecked = defaultChecked;\n  }\n\n  const checkboxClasses = cx([\n    'checkbox',\n    { 'is-inline': isInline },\n    customProps.className,\n  ]);\n\n  const labelClasses = cx([\n    'label',\n    { 'is-disabled': disabled },\n    { 'is-mobile': CheckboxUtil.isConsideredMobileDevice() },\n    labelTextAttrs.className,\n  ]);\n\n  const inputClasses = cx([\n    'native-input',\n    inputAttrs.className,\n  ]);\n\n  const labelTextClasses = cx([\n    'label-text',\n    { 'is-hidden': isLabelHidden },\n    { 'is-mobile': CheckboxUtil.isConsideredMobileDevice() },\n  ]);\n\n  let labelTextContainer = null;\n  if (isLabelHidden) {\n    controlInputAttrs['aria-label'] = labelText;\n    labelTextContainer = <span {...labelTextAttrs} className={labelTextClasses} />;\n  } else {\n    labelTextContainer = <span {...labelTextAttrs} className={labelTextClasses}>{labelText}</span>;\n  }\n\n  return (\n    <div {...customProps} className={checkboxClasses}>\n      <label htmlFor={id} className={labelClasses}>\n        <input\n          {...controlInputAttrs}\n          type=\"checkbox\"\n          id={id}\n          disabled={disabled}\n          name={name}\n          value={value}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          className={inputClasses}\n        />\n        {labelTextContainer}\n      </label>\n    </div>\n  );\n};\n\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\nCheckbox.isCheckbox = true;\n\nexport default Checkbox;\n"},2394:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=i(n(0)),r=i(n(923));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(){return o.default.createElement(r.default,{id:"defaultCheckbox",labelText:"Default Checkbox"})};t.default=l},2395:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Checkbox from 'terra-form-checkbox/lib/Checkbox';\n\nconst defaultCheckboxExample = () => (<Checkbox id=\"defaultCheckbox\" labelText=\"Default Checkbox\" />);\n\nexport default defaultCheckboxExample;\n"},2396:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=i(n(0)),r=i(n(923));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(){return o.default.createElement("div",null,o.default.createElement(r.default,{id:"disabledCheckbox",labelText:"Disabled Checkbox",disabled:!0}),o.default.createElement(r.default,{id:"disabledcheckedCheckbox",labelText:"Disabled and Checked Checkbox",defaultChecked:!0,disabled:!0}))};t.default=l},2397:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Checkbox from \'terra-form-checkbox/lib/Checkbox\';\n\nconst disabledCheckbox = () => (\n  <div>\n    <Checkbox id="disabledCheckbox" labelText="Disabled Checkbox" disabled />\n    <Checkbox id="disabledcheckedCheckbox" labelText="Disabled and Checked Checkbox" defaultChecked disabled />\n  </div>\n);\n\nexport default disabledCheckbox;\n'},2398:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=i(n(0)),r=i(n(923));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(){return o.default.createElement("div",null,o.default.createElement(r.default,{labelText:"Can you see me?",isLabelHidden:!0}))};t.default=l},2399:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Checkbox from 'terra-form-checkbox/lib/Checkbox';\n\nconst hiddenLabelCheckboxExample = () => (\n  <div>\n    <Checkbox labelText=\"Can you see me?\" isLabelHidden />\n  </div>\n);\n\nexport default hiddenLabelCheckboxExample;\n"},2400:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=i(n(0)),r=i(n(923));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(){return o.default.createElement(r.default,{id:"longTextCheckbox",labelText:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"})};t.default=l},2401:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Checkbox from 'terra-form-checkbox/lib/Checkbox';\n\nconst longTextExample = () => (\n  <Checkbox\n    id=\"longTextCheckbox\"\n    labelText={'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua '\n              + 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua'}\n  />\n);\n\nexport default longTextExample;\n"},2402:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=i(n(0)),r=i(n(923));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(){return o.default.createElement("div",null,o.default.createElement(r.default,{id:"firstInline",labelText:"First Checkbox",isInline:!0}),o.default.createElement(r.default,{id:"secondInline",labelText:"Second Checkbox",isInline:!0}),o.default.createElement(r.default,{id:"thirdInline",labelText:"Third Checkbox",isInline:!0}))};t.default=l},2403:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Checkbox from \'terra-form-checkbox/lib/Checkbox\';\n\nconst inlineCheckboxesExample = () => (\n  <div>\n    <Checkbox id="firstInline" labelText="First Checkbox" isInline />\n    <Checkbox id="secondInline" labelText="Second Checkbox" isInline />\n    <Checkbox id="thirdInline" labelText="Third Checkbox" isInline />\n  </div>\n);\n\nexport default inlineCheckboxesExample;\n'},2404:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=i(n(0)),r=i(n(923));function i(e){return e&&e.__esModule?e:{default:e}}var l=function(){return o.default.createElement("div",null,o.default.createElement(r.default,{id:"first",labelText:"First Checkbox",defaultChecked:!0}),o.default.createElement(r.default,{id:"second",labelText:"Second Checkbox"}),o.default.createElement(r.default,{id:"third",labelText:"Third Checkbox"}))};t.default=l},2405:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Checkbox from \'terra-form-checkbox/lib/Checkbox\';\n\nconst multipleCheckboxesExample = () => (\n  <div>\n    <Checkbox id="first" labelText="First Checkbox" defaultChecked />\n    <Checkbox id="second" labelText="Second Checkbox" />\n    <Checkbox id="third" labelText="Third Checkbox" />\n  </div>\n);\n\nexport default multipleCheckboxesExample;\n'},2406:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=l(n(0)),r=l(n(2)),i=l(n(923));function l(e){return e&&e.__esModule?e:{default:e}}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var b={onChange:r.default.func},f={onChange:void 0},p=function(e){function t(e){var n,o,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,(n=!(r=c(t).call(this,e))||"object"!==a(r)&&"function"!=typeof r?d(o):r).onChange=n.onChange.bind(d(n)),n}var n,r,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,o.default.Component),n=t,(r=[{key:"onChange",value:function(){this.props.onChange()}},{key:"render",value:function(){var e=this.props.onChange;return o.default.createElement(i.default,{id:"mobileCheckbox",labelText:"Toggle to trigger resize. Window size needs to be less than or equal to 1024px.",onChange:e})}}])&&s(n.prototype,r),l&&s(n,l),t}();p.propTypes=b,p.defaultProps=f;var h=p;t.default=h},3691:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=g(n(0)),r=g(n(911)),i=g(n(2392)),l=n(1354),a=g(n(2393)),s=g(n(2394)),c=g(n(2395)),d=g(n(2396)),u=g(n(2397)),b=g(n(2398)),f=g(n(2399)),p=g(n(2400)),h=g(n(2401)),m=g(n(2402)),x=g(n(2403)),k=g(n(2404)),C=g(n(2405)),v=g(n(2406));function g(e){return e&&e.__esModule?e:{default:e}}function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function w(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var j=function(e){function t(){var e,n,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(o=_(t).call(this))||"object"!==y(o)&&"function"!=typeof o?w(n):o).state={isMobile:!1},e.onChange=e.onChange.bind(w(e)),e}var n,g,j;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(t,o.default.Component),n=t,(g=[{key:"onChange",value:function(){window.ontouchstart?this.state.isMobile&&(delete window.ontouchstart,this.setState({isMobile:!1})):(this.setState({isMobile:!0}),window.ontouchstart="true")}},{key:"render",value:function(){return o.default.createElement(r.default,{packageName:l.name,readme:i.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(l.name),examples:[{title:"Default Checkbox",example:o.default.createElement(s.default,null),source:c.default},{title:"Disabled Checkbox",example:o.default.createElement(d.default,null),source:u.default},{title:"Hidden Label Checkbox",example:o.default.createElement(b.default,null),source:f.default},{title:"Long Text Checkbox",example:o.default.createElement(p.default,null),source:h.default},{title:"Multiple Inline Checkboxes",example:o.default.createElement(m.default,null),source:x.default},{title:"Multiple Checkboxes - first defaults to checked",example:o.default.createElement(k.default,null),source:C.default},{title:"[Theme Specific] Resize checkboxes on non-desktop touch device",example:o.default.createElement(v.default,{onChange:this.onChange})}],propsTables:[{componentName:"Checkbox",componentSrc:a.default}]})}}])&&T(n.prototype,g),j&&T(n,j),t}();t.default=j},923:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=s(n(0)),r=s(n(2)),i=s(n(4)),l=s(n(1092)),a=s(n(1093));function s(e){return e&&e.__esModule?e:{default:e}}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.default.bind(l.default),b={checked:r.default.bool,defaultChecked:r.default.bool,id:r.default.string,inputAttrs:r.default.object,disabled:r.default.bool,isInline:r.default.bool,isLabelHidden:r.default.bool,labelText:r.default.node.isRequired,labelTextAttrs:r.default.object,name:r.default.string,onBlur:r.default.func,onChange:r.default.func,onFocus:r.default.func,value:r.default.string},f={checked:void 0,defaultChecked:void 0,id:void 0,inputAttrs:{},disabled:!1,isInline:!1,isLabelHidden:!1,labelTextAttrs:{},name:null,onBlur:void 0,onChange:void 0,onFocus:void 0,value:void 0},p=function(e){var t=e.checked,n=e.defaultChecked,r=e.inputAttrs,i=e.id,l=e.disabled,s=e.isInline,b=e.isLabelHidden,f=e.labelText,p=e.labelTextAttrs,h=e.name,m=e.onBlur,x=e.onChange,k=e.onFocus,C=e.value,v=d(e,["checked","defaultChecked","inputAttrs","id","disabled","isInline","isLabelHidden","labelText","labelTextAttrs","name","onBlur","onChange","onFocus","value"]),g=c({},r);void 0!==t?g.checked=t:g.defaultChecked=n;var y=u(["checkbox",{"is-inline":s},v.className]),T=u(["label",{"is-disabled":l},{"is-mobile":a.default.isConsideredMobileDevice()},p.className]),_=u(["native-input",r.className]),w=u(["label-text",{"is-hidden":b},{"is-mobile":a.default.isConsideredMobileDevice()}]),E=null;return b?(g["aria-label"]=f,E=o.default.createElement("span",c({},p,{className:w}))):E=o.default.createElement("span",c({},p,{className:w}),f),o.default.createElement("div",c({},v,{className:y}),o.default.createElement("label",{htmlFor:i,className:T},o.default.createElement("input",c({},g,{type:"checkbox",id:i,disabled:l,name:h,value:C,onChange:x,onFocus:k,onBlur:m,className:_})),E))};p.propTypes=b,p.defaultProps=f,p.isCheckbox=!0;var h=p;t.default=h}}]);
//# sourceMappingURL=93-b898dcaa7b4ebc5160df.js.map