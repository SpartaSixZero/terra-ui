{"version":3,"sources":["webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/common/MyExampleContainer.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/example/InfiniteListDocExampleCommon.module.scss?1b5e","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/common/MyInitialLoadingIndicator.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/common/MyInitialLoadingIndicator.module.scss?07dc","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/common/MyProgressiveLoadingIndicator.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/common/MyProgressiveLoadingIndicator.module.scss?56a5","webpack:///./node_modules/terra-infinite-list/docs/README.md","webpack:///./node_modules/terra-infinite-list/src/InfiniteList.jsx","webpack:///./node_modules/terra-infinite-list/src/terra-dev-site/doc/example/InitialLoadingExample.jsx","webpack:///./node_modules/terra-infinite-list/src/terra-dev-site/doc/example/ProgressiveLoadingExample.jsx","webpack:///./node_modules/terra-infinite-list/src/terra-dev-site/doc/example/VirtualizedExample.jsx","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/example/InitialLoadingExample.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/example/ProgressiveLoadingExample.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/example/VirtualizedExample.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/example/mock-data/virtualizedData.js","webpack:///./node_modules/terra-infinite-list/lib/terra-dev-site/doc/infinite-list/InfiniteList.1.doc.js","webpack:///./node_modules/terra-doc-template/lib/Placeholder.js","webpack:///./node_modules/terra-doc-template/lib/Placeholder.module.scss?c491"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","_ref","children","createElement","style","height","width","position","border","module","_bind","_Placeholder","_MyInitialLoadingIndicatorModule","cx","bind","className","title","variant","_MyProgressiveLoadingIndicatorModule","_index","_MyInitialLoadingIndicator","_MyExampleContainer","dividerStyle","initialLoadingIndicator","_interopRequireWildcard","_MyProgressiveLoadingIndicator","_InfiniteListDocExampleCommonModule","progressiveLoadingIndicator","Item","key","_virtualizedData","createItems","data","map","item","itemData","isFinishedLoading","items","i","push","concat","_terraDocTemplate","_package","_README","_InfiniteList","_InitialLoadingExample","_ProgressiveLoadingExample","_VirtualizedExample","_InitialLoadingExample2","_ProgressiveLoadingExample2","_VirtualizedExample2","packageName","name","readme","srcPath","examples","example","source","propsTables","componentSrc","_propTypes","_PlaceholderModule","obj","__esModule","_extends","assign","target","arguments","length","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","oneOf","string","Placeholder","customProps","placeholderClassNames","innerClassNames","defaultProps"],"mappings":"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","file":"85-dd467468f8f94ba30d43.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\n/* eslint-disable */\nvar MyExampleContainer = function MyExampleContainer(_ref) {\n  var children = _ref.children;\n  return _react.default.createElement(\"div\", {\n    style: {\n      height: '300px',\n      width: '100%',\n      position: 'relative',\n      border: '1px solid black'\n    }\n  }, children);\n};\n\nvar _default = MyExampleContainer;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"InfiniteListDocExampleCommon-module__placeholder___1xFyT\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _Placeholder = _interopRequireDefault(require(\"terra-doc-template/lib/Placeholder\"));\n\nvar _MyInitialLoadingIndicatorModule = _interopRequireDefault(require(\"./MyInitialLoadingIndicator.module.scss\"));\n\nvar cx = _bind.default.bind(_MyInitialLoadingIndicatorModule.default);\n\nvar MyInitialLoadingIndicator = function MyInitialLoadingIndicator() {\n  return _react.default.createElement(\"div\", {\n    className: cx('indicator')\n  }, _react.default.createElement(_Placeholder.default, {\n    title: \"I'm Loading\",\n    variant: \"light\"\n  }));\n};\n\nvar _default = MyInitialLoadingIndicator;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicator\":\"MyInitialLoadingIndicator-module__indicator___1fmN_\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _Placeholder = _interopRequireDefault(require(\"terra-doc-template/lib/Placeholder\"));\n\nvar _MyProgressiveLoadingIndicatorModule = _interopRequireDefault(require(\"./MyProgressiveLoadingIndicator.module.scss\"));\n\nvar cx = _bind.default.bind(_MyProgressiveLoadingIndicatorModule.default);\n\nvar MyProgressiveLoadingIndicator = function MyProgressiveLoadingIndicator() {\n  return _react.default.createElement(\"div\", {\n    className: cx('indicator')\n  }, _react.default.createElement(_Placeholder.default, {\n    title: \"I'm Loading More\",\n    variant: \"light\"\n  }));\n};\n\nvar _default = MyProgressiveLoadingIndicator;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicator\":\"MyProgressiveLoadingIndicator-module__indicator___1mT7L\"};","export default \"# Terra Infinite List\\n\\nThe infinite list component provides virtual dom management and data request callbacks to manage large data sets within a list.\\nInfiniteList is a controlled HOC built upon the `terra-list` component in order to allow for list style and selection patterns.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-infinite-list`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n| react-intl | ^2.8.0 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Component Features\\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n\\n## List Item Selection\\n\\nManagement of list selection is provided by the HOC implementing the InfiniteList. For an example of list item selection you can refer to List's documentation:\\n\\n* [Single Select List](https://engineering.cerner.com/terra-ui/#/components/terra-list/list/guides/single-select-list)\\n* [Multi Select List](https://engineering.cerner.com/terra-ui/#/components/terra-list/list/guides/multi-select-list)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport { injectIntl, intlShape } from 'react-intl';\\nimport ResizeObserver from 'resize-observer-polyfill';\\nimport List from 'terra-list';\\nimport VisuallyHiddenText from 'terra-visually-hidden-text';\\nimport InfiniteUtils from './_InfiniteUtils';\\nimport styles from './InfiniteList.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * The child list items, of type InfiniteList Item, to be placed within the infinite list.\\n   * For further documentation of InfiniteList Item see terra-list's ListItem.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * Whether or not the list's child items should have a border color applied.\\n   * One of `'none'`, `'standard'`, `'bottom-only'`.\\n   */\\n  dividerStyle: PropTypes.oneOf(['none', 'standard', 'bottom-only']),\\n  /**\\n   * An indicator to be displayed when no children are yet present.\\n   */\\n  initialLoadingIndicator: PropTypes.element,\\n  /**\\n   * @private\\n   * Internationalization object with translation APIs. Provided by `injectIntl`.\\n   */\\n  intl: intlShape,\\n  /**\\n   * Determines whether or not the loading indicator is visible and if callbacks are triggered.\\n   */\\n  isFinishedLoading: PropTypes.bool,\\n  /**\\n   * Callback trigger when new list items are requested.\\n   */\\n  onRequestItems: PropTypes.func,\\n  /**\\n   * The padding styling to apply to the child list item content.\\n   * One of `'none'`, `'standard'`, `'compact'`.\\n   */\\n  paddingStyle: PropTypes.oneOf(['none', 'standard', 'compact']),\\n  /**\\n   * An indicator to be displayed at the end of the current loaded children.\\n   */\\n  progressiveLoadingIndicator: PropTypes.element,\\n  /**\\n   * A message to be provided to screen readers as new items are progressively loaded in\\n   */\\n  progressiveLoadingMessage: PropTypes.string,\\n  /**\\n   * Accessibility role of the list, defaults to 'none'. If creating a list with selectable items, pass 'listbox'.\\n   */\\n  role: PropTypes.string,\\n};\\n\\nconst defaultProps = {\\n  children: [],\\n  dividerStyle: 'none',\\n  isFinishedLoading: false,\\n  paddingStyle: 'none',\\n  progressiveLoadingMessage: undefined,\\n  role: 'none',\\n};\\n\\n/**\\n * Returns a ListItem sized according to the provided height to use as a spacer.\\n * @param {number} height - Height to set on the ListItem.\\n * @param {number} index - Index to use as part of the spacers key.\\n */\\n/* eslint-disable react/forbid-dom-props */\\nconst createSpacer = (height, index) => (\\n  <div\\n    className={cx(['spacer'])}\\n    style={{ height }}\\n    key={`infinite-spacer-${index}`}\\n  />\\n);\\n/* eslint-enable react/forbid-dom-props */\\n\\nclass InfiniteList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.update = this.update.bind(this);\\n    this.enableListeners = this.enableListeners.bind(this);\\n    this.disableListeners = this.disableListeners.bind(this);\\n    this.setContentNode = this.setContentNode.bind(this);\\n    this.updateItemCache = this.updateItemCache.bind(this);\\n    this.initializeItemCache = this.initializeItemCache.bind(this);\\n    this.updateScrollGroups = this.updateScrollGroups.bind(this);\\n    this.handleRenderCompletion = this.handleRenderCompletion.bind(this);\\n    this.handleResize = this.resizeDebounce(this.handleResize.bind(this));\\n    this.resetTimeout = this.resetTimeout.bind(this);\\n    this.wrapChild = this.wrapChild.bind(this);\\n    this.ariaLiveStatus = '';\\n    this.updateAriaLiveLoadingStatus = this.updateAriaLiveLoadingStatus.bind(this);\\n\\n    this.initializeItemCache(props);\\n  }\\n\\n  componentDidMount() {\\n    if (!this.listenersAdded) {\\n      this.enableListeners();\\n    }\\n    this.updateScrollGroups();\\n    this.handleRenderCompletion();\\n  }\\n\\n  shouldComponentUpdate(nextProps) {\\n    const newChildCount = React.Children.count(nextProps.children);\\n    if (newChildCount > this.childCount) {\\n      this.lastChildIndex = this.childCount;\\n      this.loadingIndex += 1;\\n      this.updateItemCache(nextProps);\\n    } else if (newChildCount < this.childCount) {\\n      this.initializeItemCache(nextProps);\\n    } else {\\n      this.childrenArray = React.Children.toArray(nextProps.children);\\n    }\\n\\n    return true;\\n  }\\n\\n  componentDidUpdate() {\\n    if (!this.listenersAdded) {\\n      this.enableListeners();\\n    }\\n    this.handleRenderCompletion();\\n  }\\n\\n  componentWillUnmount() {\\n    this.disableListeners();\\n  }\\n\\n  /**\\n   * Sets the html node of contentNode and if it was previously undefined trigger updateScrollGroups.\\n   * @param {node} node - Html node of the List.\\n   */\\n  setContentNode(node) {\\n    const wasUndefined = !this.contentNode;\\n    this.contentNode = node;\\n\\n    if (this.contentNode && wasUndefined) {\\n      this.updateScrollGroups();\\n    }\\n  }\\n\\n  /**\\n   * If a request for items has not been made and/or updates are not pending trigger onRequestItems.\\n   */\\n  triggerItemRequest() {\\n    if (!this.props.isFinishedLoading && !this.hasRequestedItems && !this.isRenderingNew && this.props.onRequestItems) {\\n      this.hasRequestedItems = true;\\n      this.props.onRequestItems();\\n      this.updateAriaLiveLoadingStatus();\\n    }\\n  }\\n\\n  updateAriaLiveLoadingStatus() {\\n    this.ariaLiveStatus = this.props.progressiveLoadingMessage ? this.props.progressiveLoadingMessage : this.props.intl.formatMessage({ id: 'Terra.InfiniteList.loading' });\\n    // Clears status so aria live announces correctly next time more items are loaded\\n    setTimeout(() => {\\n      this.ariaLiveStatus = '';\\n    }, 1000);\\n  }\\n\\n  /**\\n   * Following a render reset newChildren values. If new items were render trigger an update calculation.\\n   */\\n  handleRenderCompletion() {\\n    this.renderNewChildren = false;\\n    this.preventUpdate = false;\\n    this.lastChildIndex = this.childCount;\\n    if (this.isRenderingNew) {\\n      this.isRenderingNew = false;\\n      this.update(null, false, true); // Prevent from triggering an item request to avoid infinite loop of loading.\\n    } else if (this.contentNode && InfiniteUtils.shouldTriggerItemRequest(InfiniteUtils.getContentData(this.contentNode))) {\\n      this.triggerItemRequest();\\n    }\\n  }\\n\\n  /**\\n   * Cache the value for the child count and convert the children props to an array.\\n   * @param {object} props - React element props.\\n   */\\n  updateItemCache(props) {\\n    this.childCount = React.Children.count(props.children);\\n    this.childrenArray = React.Children.toArray(props.children);\\n    this.hasRequestedItems = false;\\n    this.renderNewChildren = true;\\n  }\\n\\n  /**\\n   * Set the initial state of the virtualization values for the list.\\n   * @param {object} props - React element props.\\n   */\\n  initializeItemCache(props) {\\n    this.loadingIndex = 0;\\n    this.lastChildIndex = -1;\\n    this.itemsByIndex = [];\\n    this.scrollGroups = [];\\n    this.boundary = {\\n      topBoundryIndex: -1,\\n      hiddenTopHeight: -1,\\n      bottomBoundryIndex: -1,\\n      hiddenBottomHeight: -1,\\n    };\\n    this.updateItemCache(props);\\n  }\\n\\n  /**\\n   * Adds a resize observer and scroll event listener to the contentNode.\\n   */\\n  enableListeners() {\\n    if (!this.contentNode) {\\n      return;\\n    }\\n    this.resizeObserver = new ResizeObserver((entries) => {\\n      this.handleResize(entries[0].contentRect);\\n    });\\n    this.resizeObserver.observe(this.contentNode);\\n    this.contentNode.addEventListener('scroll', this.update);\\n    this.listenersAdded = true;\\n  }\\n\\n  /**\\n   * Removes the resize observer and scroll event listener from the contentNode.\\n   */\\n  disableListeners() {\\n    if (!this.contentNode) {\\n      return;\\n    }\\n    this.resizeObserver.disconnect(this.contentNode);\\n    this.contentNode.removeEventListener('scroll', this.update);\\n    this.listenersAdded = false;\\n  }\\n\\n  /**\\n   * Reset the timeout on this.timer.\\n   * @param {function} fn - The handleResize function.\\n   * @param {object} args - Arguments passed to the handleResize function.\\n   * @param {context} context - Javascript context.\\n   * @param {double} now - DOMHighResTimeStamp.\\n   */\\n  resetTimeout(fn, args, context, now) {\\n    clearTimeout(this.timer);\\n    this.timer = setTimeout(() => {\\n      this.last = now;\\n      this.disableScroll = false;\\n      fn.apply(context, args);\\n    }, 250);\\n  }\\n\\n  /**\\n   * Debounce the size event and prevent updates from scrolling.\\n   * @param {function} fn - The handleResize function.\\n   */\\n  resizeDebounce(fn) {\\n    return (...args) => {\\n      const context = this;\\n      const now = performance.now();\\n      if (this.last && now < this.last + 250) {\\n        this.resetTimeout(fn, args, context, now);\\n      } else {\\n        this.last = now;\\n        this.disableScroll = true;\\n        this.resetTimeout(fn, args, context, now);\\n      }\\n    };\\n  }\\n\\n  /**\\n   * Triggers a height adjustment if the height or scroll height changes.\\n   */\\n  handleResize() {\\n    if (this.scrollHeight !== this.contentNode.scrollHeight || this.clientHeight !== this.contentNode.clientHeight) {\\n      this.adjustHeight();\\n    }\\n  }\\n\\n  /**\\n   * Calculates the visible scroll items and if the hidden items have changed force an update.\\n   * @param {object} event - Browser DOM event.\\n   * @param {bool} ensureUpdate - Regardless of calculation ensure a forceUpdate occurs.\\n   * @param {bool} preventRequest - Should triggerItemRequest be prevented.\\n   */\\n  update(event, ensureUpdate, preventRequest) {\\n    if (!this.contentNode || this.disableScroll || this.preventUpdate) {\\n      return;\\n    }\\n\\n    const contentData = InfiniteUtils.getContentData(this.contentNode);\\n    const hiddenItems = InfiniteUtils.getHiddenItems(this.scrollGroups, contentData, this.boundary.topBoundryIndex, this.boundary.bottomBoundryIndex);\\n    this.scrollHeight = contentData.scrollHeight;\\n    this.clientHeight = contentData.clientHeight;\\n\\n    if (ensureUpdate || hiddenItems.topHiddenItem.index !== this.boundary.topBoundryIndex || hiddenItems.bottomHiddenItem.index !== this.boundary.bottomBoundryIndex) {\\n      this.preventUpdate = true;\\n      this.boundary = {\\n        topBoundryIndex: hiddenItems.topHiddenItem.index,\\n        hiddenTopHeight: hiddenItems.topHiddenItem.height,\\n        bottomBoundryIndex: hiddenItems.bottomHiddenItem.index,\\n        hiddenBottomHeight: hiddenItems.bottomHiddenItem.height,\\n      };\\n      this.forceUpdate();\\n    }\\n\\n    if (!preventRequest && InfiniteUtils.shouldTriggerItemRequest(contentData)) {\\n      this.triggerItemRequest();\\n    }\\n  }\\n\\n  /**\\n   * Groups scroll items by height to reduce the number of refreshs that occur on scroll.\\n   */\\n  updateScrollGroups() {\\n    if (!this.contentNode) {\\n      return;\\n    }\\n\\n    let groupHeight = 0;\\n    let groupIndex = 0;\\n    let captureOffsetTop = true;\\n    const maxGroupHeight = 1 * this.contentNode.clientHeight;\\n    this.scrollGroups = [];\\n    for (let i = 0; i < this.itemsByIndex.length; i += 1) {\\n      const item = this.itemsByIndex[i];\\n      if (this.scrollGroups[groupIndex] && item.height >= maxGroupHeight) {\\n        groupHeight = 0;\\n        groupIndex += 1;\\n        captureOffsetTop = true;\\n      }\\n\\n      groupHeight += item.height;\\n      this.scrollGroups[groupIndex] = this.scrollGroups[groupIndex] || { items: [] };\\n      this.scrollGroups[groupIndex].items.push(i);\\n      this.scrollGroups[groupIndex].height = groupHeight;\\n      this.itemsByIndex[i].groupIndex = groupIndex;\\n      if (captureOffsetTop) {\\n        this.scrollGroups[groupIndex].offsetTop = this.itemsByIndex[i].offsetTop;\\n        captureOffsetTop = false;\\n      }\\n\\n      if (groupHeight >= maxGroupHeight) {\\n        groupHeight = 0;\\n        groupIndex += 1;\\n        captureOffsetTop = true;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Checks the boundingClientRect for the scroll item's height and offsetTop then caches it.\\n   * @param {node} node - The child node for the scroll item.\\n   * @param {number} index - Index of the child.\\n   */\\n  updateHeight(node, index) {\\n    if (node) {\\n      this.itemsByIndex[index] = this.itemsByIndex[index] || {};\\n      let updatedHeight = false;\\n      const newHeight = node.getBoundingClientRect().height;\\n      if (!this.itemsByIndex[index].height || Math.abs(this.itemsByIndex[index].height - newHeight) > 1) {\\n        this.itemsByIndex[index].height = newHeight;\\n        updatedHeight = true;\\n      }\\n      if (!this.itemsByIndex[index].offsetTop || Math.abs(this.itemsByIndex[index].offsetTop - node.offsetTop) > 1) {\\n        this.itemsByIndex[index].offsetTop = node.offsetTop;\\n      }\\n      if (this.itemsByIndex.length === this.childCount) {\\n        if (!this.scrollGroups.length) {\\n          this.updateScrollGroups();\\n        } else if (updatedHeight) {\\n          this.adjustHeight();\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Detects which scroll items are on the dom and reads the heights to see if resize has changed the boundClientRect.\\n   */\\n  adjustHeight() {\\n    if (this.contentNode) {\\n      this.itemsByIndex.forEach((item, itemIndex) => {\\n        const scrollItemNode = this.contentNode.querySelector(`[data-infinite-list-index=\\\"${itemIndex}\\\"]`);\\n        if (scrollItemNode) {\\n          const newHeight = scrollItemNode.getBoundingClientRect().height;\\n          if (!this.itemsByIndex[itemIndex].height || Math.abs(newHeight - this.itemsByIndex[itemIndex].height) > 1) {\\n            this.itemsByIndex[itemIndex].height = newHeight;\\n          }\\n          if (!this.itemsByIndex[itemIndex].offsetTop || Math.abs(this.itemsByIndex[itemIndex].offsetTop - scrollItemNode.offsetTop) > 1) {\\n            this.itemsByIndex[itemIndex].offsetTop = scrollItemNode.offsetTop;\\n          }\\n          this.adjustTrailingItems(itemIndex);\\n        }\\n      });\\n\\n      // needs to update offset tops of every other save\\n      this.updateScrollGroups();\\n      this.boundary = {\\n        topBoundryIndex: -1,\\n        hiddenTopHeight: -1,\\n        bottomBoundryIndex: -1,\\n        hiddenBottomHeight: -1,\\n      };\\n      this.update(null, true);\\n    }\\n  }\\n\\n  /**\\n   * Updates the offsetTop of scroll items following the element that adjusted it's height.\\n   * @param {number} index - Index of the scroll item that had adjusted it's height.\\n   */\\n  adjustTrailingItems(index) {\\n    let lastTop = this.itemsByIndex[index].offsetTop;\\n    let lastHeight = this.itemsByIndex[index].height;\\n    for (let i = index + 1; i < this.itemsByIndex.length; i += 1) {\\n      lastTop += lastHeight;\\n      lastHeight = this.itemsByIndex[i].height;\\n      this.itemsByIndex[i].offsetTop = lastTop;\\n    }\\n  }\\n\\n  /**\\n   * Clones the child element with new props for selection, refCallback,  and data attributes.\\n   * @param {element} child - React child element.\\n   * @param {number} index - Index of the child element.\\n   */\\n  wrapChild(child, index) {\\n    const wrappedCallback = (node) => {\\n      this.updateHeight(node, index);\\n      if (child.props.refCallback) {\\n        child.props.refCallback(node);\\n      }\\n    };\\n    const newProps = {\\n      refCallback: wrappedCallback,\\n      'data-infinite-list-index': index,\\n    };\\n    return React.cloneElement(child, newProps);\\n  }\\n\\n  render() {\\n    const {\\n      children,\\n      dividerStyle,\\n      initialLoadingIndicator,\\n      isFinishedLoading,\\n      onRequestItems,\\n      paddingStyle,\\n      progressiveLoadingIndicator,\\n      role,\\n      ...customProps\\n    } = this.props;\\n\\n    const topSpacer = createSpacer(`${this.boundary.hiddenTopHeight > 0 ? this.boundary.hiddenTopHeight : 0}px`, 0);\\n    const bottomSpacer = createSpacer(`${this.boundary.hiddenBottomHeight > 0 ? this.boundary.hiddenBottomHeight : 0}px`, 1);\\n\\n    let loadingSpinner;\\n    let initialSpinner;\\n    if (!isFinishedLoading) {\\n      if (this.childCount > 0) {\\n        loadingSpinner = (\\n          <div\\n            className={cx('spacer')}\\n            key={`infinite-spinner-row-${this.loadingIndex}`}\\n          >\\n            {progressiveLoadingIndicator}\\n          </div>\\n        );\\n      } else {\\n        /* eslint-disable react/forbid-dom-props */\\n        initialSpinner = (\\n          <div\\n            className={cx('spacer')}\\n            key=\\\"infinite-spinner-full\\\"\\n            style={{ height: '100%' }}\\n          >\\n            {initialLoadingIndicator}\\n          </div>\\n        );\\n        /* eslint-enable react/forbid-dom-props */\\n      }\\n    }\\n\\n    const attrSpread = { dividerStyle, paddingStyle };\\n    if (role && role.length > 0 && role !== 'none') {\\n      attrSpread.role = role;\\n    }\\n\\n    let newChildren;\\n    let visibleChildren;\\n    if (!initialSpinner) {\\n      let upperChildIndex = this.lastChildIndex;\\n      if ((!this.scrollGroups.length && this.lastChildIndex <= 0) || !this.renderNewChildren) {\\n        upperChildIndex = this.childCount;\\n      } else {\\n        newChildren = (\\n          <List {...attrSpread} className={cx(['infinite-hidden'])}>\\n            {InfiniteUtils.getNewChildren(this.lastChildIndex, this.childrenArray, this.wrapChild)}\\n          </List>\\n        );\\n        this.isRenderingNew = true;\\n      }\\n      visibleChildren = InfiniteUtils.getVisibleChildren(this.scrollGroups, this.childrenArray, this.boundary.topBoundryIndex, this.boundary.bottomBoundryIndex, this.wrapChild, upperChildIndex);\\n    }\\n\\n    return (\\n      <React.Fragment>\\n        <div {...customProps} className={cx(['infinite-list', customProps.className])} ref={this.setContentNode}>\\n          {initialSpinner}\\n          {topSpacer}\\n          <List {...attrSpread}>\\n            {visibleChildren}\\n          </List>\\n          {bottomSpacer}\\n          {loadingSpinner}\\n        </div>\\n        {newChildren}\\n        <VisuallyHiddenText aria-atomic=\\\"true\\\" aria-live=\\\"assertive\\\" text={this.ariaLiveStatus} />\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\\nInfiniteList.propTypes = propTypes;\\nInfiniteList.defaultProps = defaultProps;\\n\\nexport default injectIntl(InfiniteList);\\n\"","export default \"import React from 'react';\\n/* eslint-disable import/no-unresolved, import/extensions */\\nimport InfiniteList from 'terra-infinite-list/lib/index';\\n/* eslint-enable import/no-unresolved, import/extensions */\\n\\nimport MyInitialLoadingIndicator from '../common/MyInitialLoadingIndicator';\\nimport MyExampleContainer from '../common/MyExampleContainer';\\n\\nconst InitialLoadingExample = () => (\\n  <MyExampleContainer>\\n    <InfiniteList\\n      dividerStyle=\\\"standard\\\"\\n      initialLoadingIndicator={<MyInitialLoadingIndicator />}\\n    />\\n  </MyExampleContainer>\\n);\\n\\nexport default InitialLoadingExample;\\n\"","export default \"import React from 'react';\\n/* eslint-disable import/no-unresolved, import/extensions */\\nimport InfiniteList, { Item } from 'terra-infinite-list/lib/index';\\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\\nimport classNames from 'classnames/bind';\\n/* eslint-enable import/no-unresolved, import/extensions */\\n\\nimport MyProgressiveLoadingIndicator from '../common/MyProgressiveLoadingIndicator';\\nimport MyExampleContainer from '../common/MyExampleContainer';\\nimport styles from './InfiniteListDocExampleCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst ProgressiveLoadingExample = () => (\\n  <MyExampleContainer>\\n    <InfiniteList\\n      dividerStyle=\\\"standard\\\"\\n      progressiveLoadingIndicator={<MyProgressiveLoadingIndicator />}\\n    >\\n      <Item key=\\\"item-1\\\">\\n        <Placeholder title=\\\"Item 1\\\" className={cx('placeholder')} />\\n      </Item>\\n    </InfiniteList>\\n  </MyExampleContainer>\\n);\\n\\nexport default ProgressiveLoadingExample;\\n\"","export default \"import React from 'react';\\n/* eslint-disable import/no-unresolved, import/extensions */\\nimport InfiniteList, { Item } from 'terra-infinite-list/lib/index';\\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\\nimport classNames from 'classnames/bind';\\n/* eslint-enable import/no-unresolved, import/extensions */\\n\\nimport mockData from './mock-data/virtualizedData';\\nimport MyExampleContainer from '../common/MyExampleContainer';\\nimport styles from './InfiniteListDocExampleCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst createListItem = itemData => (\\n  <Item key={itemData.key}>\\n    <Placeholder title={itemData.title} className={cx('placeholder')} />\\n  </Item>\\n);\\n\\nconst createItems = data => data.map(item => createListItem(item));\\n\\nconst VirtualizedExample = () => (\\n  <MyExampleContainer>\\n    <InfiniteList\\n      dividerStyle=\\\"standard\\\"\\n      isFinishedLoading\\n    >\\n      {createItems(mockData)}\\n    </InfiniteList>\\n  </MyExampleContainer>\\n);\\n\\nexport default VirtualizedExample;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _index = _interopRequireDefault(require(\"terra-infinite-list/lib/index\"));\n\nvar _MyInitialLoadingIndicator = _interopRequireDefault(require(\"../common/MyInitialLoadingIndicator\"));\n\nvar _MyExampleContainer = _interopRequireDefault(require(\"../common/MyExampleContainer\"));\n\n/* eslint-disable import/no-unresolved, import/extensions */\n\n/* eslint-enable import/no-unresolved, import/extensions */\nvar InitialLoadingExample = function InitialLoadingExample() {\n  return _react.default.createElement(_MyExampleContainer.default, null, _react.default.createElement(_index.default, {\n    dividerStyle: \"standard\",\n    initialLoadingIndicator: _react.default.createElement(_MyInitialLoadingIndicator.default, null)\n  }));\n};\n\nvar _default = InitialLoadingExample;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _index = _interopRequireWildcard(require(\"terra-infinite-list/lib/index\"));\n\nvar _Placeholder = _interopRequireDefault(require(\"terra-doc-template/lib/Placeholder\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _MyProgressiveLoadingIndicator = _interopRequireDefault(require(\"../common/MyProgressiveLoadingIndicator\"));\n\nvar _MyExampleContainer = _interopRequireDefault(require(\"../common/MyExampleContainer\"));\n\nvar _InfiniteListDocExampleCommonModule = _interopRequireDefault(require(\"./InfiniteListDocExampleCommon.module.scss\"));\n\n/* eslint-disable import/no-unresolved, import/extensions */\n\n/* eslint-enable import/no-unresolved, import/extensions */\nvar cx = _bind.default.bind(_InfiniteListDocExampleCommonModule.default);\n\nvar ProgressiveLoadingExample = function ProgressiveLoadingExample() {\n  return _react.default.createElement(_MyExampleContainer.default, null, _react.default.createElement(_index.default, {\n    dividerStyle: \"standard\",\n    progressiveLoadingIndicator: _react.default.createElement(_MyProgressiveLoadingIndicator.default, null)\n  }, _react.default.createElement(_index.Item, {\n    key: \"item-1\"\n  }, _react.default.createElement(_Placeholder.default, {\n    title: \"Item 1\",\n    className: cx('placeholder')\n  }))));\n};\n\nvar _default = ProgressiveLoadingExample;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _index = _interopRequireWildcard(require(\"terra-infinite-list/lib/index\"));\n\nvar _Placeholder = _interopRequireDefault(require(\"terra-doc-template/lib/Placeholder\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _virtualizedData = _interopRequireDefault(require(\"./mock-data/virtualizedData\"));\n\nvar _MyExampleContainer = _interopRequireDefault(require(\"../common/MyExampleContainer\"));\n\nvar _InfiniteListDocExampleCommonModule = _interopRequireDefault(require(\"./InfiniteListDocExampleCommon.module.scss\"));\n\n/* eslint-disable import/no-unresolved, import/extensions */\n\n/* eslint-enable import/no-unresolved, import/extensions */\nvar cx = _bind.default.bind(_InfiniteListDocExampleCommonModule.default);\n\nvar createListItem = function createListItem(itemData) {\n  return _react.default.createElement(_index.Item, {\n    key: itemData.key\n  }, _react.default.createElement(_Placeholder.default, {\n    title: itemData.title,\n    className: cx('placeholder')\n  }));\n};\n\nvar createItems = function createItems(data) {\n  return data.map(function (item) {\n    return createListItem(item);\n  });\n};\n\nvar VirtualizedExample = function VirtualizedExample() {\n  return _react.default.createElement(_MyExampleContainer.default, null, _react.default.createElement(_index.default, {\n    dividerStyle: \"standard\",\n    isFinishedLoading: true\n  }, createItems(_virtualizedData.default)));\n};\n\nvar _default = VirtualizedExample;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar mockData = function () {\n  var items = [];\n\n  for (var i = 0; i < 100; i += 1) {\n    items.push({\n      title: \"Item \".concat(i),\n      key: \"unique-\".concat(i)\n    });\n  }\n\n  return items;\n}();\n\nvar _default = mockData;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _InfiniteList = _interopRequireDefault(require(\"!raw-loader!../../../../src/InfiniteList.jsx\"));\n\nvar _InitialLoadingExample = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/InitialLoadingExample.jsx\"));\n\nvar _ProgressiveLoadingExample = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/ProgressiveLoadingExample.jsx\"));\n\nvar _VirtualizedExample = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/VirtualizedExample.jsx\"));\n\nvar _InitialLoadingExample2 = _interopRequireDefault(require(\"../example/InitialLoadingExample\"));\n\nvar _ProgressiveLoadingExample2 = _interopRequireDefault(require(\"../example/ProgressiveLoadingExample\"));\n\nvar _VirtualizedExample2 = _interopRequireDefault(require(\"../example/VirtualizedExample\"));\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Example Files\n\n/* eslint-enabled import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Example Initial Loading Indicator',\n      example: _react.default.createElement(_InitialLoadingExample2.default, null),\n      source: _InitialLoadingExample.default\n    }, {\n      title: 'Example Progressive Loading Indicator',\n      example: _react.default.createElement(_ProgressiveLoadingExample2.default, null),\n      source: _ProgressiveLoadingExample.default\n    }, {\n      title: 'Example Virtualized List',\n      example: _react.default.createElement(_VirtualizedExample2.default, null),\n      source: _VirtualizedExample.default\n    }],\n    propsTables: [{\n      componentSrc: _InfiniteList.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _PlaceholderModule = _interopRequireDefault(require(\"./Placeholder.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar cx = _bind.default.bind(_PlaceholderModule.default);\n\nvar propTypes = {\n  /**\n   * The themed variant of the text and border. Example, use the light variant when against a dark background.\n   */\n  variant: _propTypes.default.oneOf(['light', 'dark']),\n\n  /**\n   * The placeholder text to be displayed.\n   */\n  title: _propTypes.default.string\n};\nvar defaultProps = {\n  variant: 'dark',\n  title: ''\n};\n\nvar Placeholder = function Placeholder(_ref) {\n  var variant = _ref.variant,\n      title = _ref.title,\n      customProps = _objectWithoutProperties(_ref, [\"variant\", \"title\"]);\n\n  var placeholderClassNames = cx(['placeholder', customProps.className]);\n  var innerClassNames = cx(['inner', \"is-\".concat(variant)]);\n  return _react.default.createElement(\"div\", _extends({}, customProps, {\n    className: placeholderClassNames\n  }), _react.default.createElement(\"div\", {\n    className: innerClassNames\n  }, _react.default.createElement(\"h2\", null, title)));\n};\n\nPlaceholder.propTypes = propTypes;\nPlaceholder.defaultProps = defaultProps;\nvar _default = Placeholder;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Placeholder-module__placeholder___37I0I\",\"inner\":\"Placeholder-module__inner___2DX7N\",\"is-light\":\"Placeholder-module__is-light___3__YD\",\"is-dark\":\"Placeholder-module__is-dark___9wQwQ\"};"],"sourceRoot":""}