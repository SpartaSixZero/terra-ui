{"version":3,"sources":["webpack:///./node_modules/terra-icon/lib/icon/IconDiamond.js","webpack:///./node_modules/terra-icon/lib/IconDiamond.module.scss?aa67","webpack:///./node_modules/terra-status-view/docs/README.md","webpack:///./node_modules/terra-status-view/src/StatusView.jsx","webpack:///./node_modules/terra-status-view/lib/terra-dev-site/doc/example/ToggleVariants.js","webpack:///./node_modules/terra-status-view/src/terra-dev-site/doc/example/ToggleVariants.jsx","webpack:///./node_modules/terra-status-view/lib/terra-dev-site/doc/example/ToggleAlignmentAndGlyph.js","webpack:///./node_modules/terra-status-view/src/terra-dev-site/doc/example/ToggleAlignmentAndGlyph.jsx","webpack:///./node_modules/terra-status-view/lib/terra-dev-site/doc/example/Custom.js","webpack:///./node_modules/terra-status-view/src/terra-dev-site/doc/example/Custom.jsx","webpack:///./node_modules/terra-status-view/lib/terra-dev-site/doc/status-view/StatusView.1.doc.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_bind","_IconBase","_IconDiamondModule","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","cx","bind","SvgIcon","customProps","attributes","iconClassNames","className","createElement","fill","d","displayName","defaultProps","_default","module","newObj","desc","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_StatusView","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_useState2","useState","variant","setVariant","id","name","onChange","event","isAlignedTop","setIsAlignedTop","_useState4","isGlyphHidden","setIsGlyphHidden","style","height","border","type","htmlFor","_IconDiamond","message","customGlyph","title","buttonAttrs","text","size","_terraDocTemplate","_README","_package","_ToggleVariants","_ToggleVariants2","_ToggleAlignmentAndGlyph","_ToggleAlignmentAndGlyph2","_Custom","_Custom2","packageName","readme","srcPath","concat","examples","example","propsTables","componentName","componentSrc"],"mappings":"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","file":"130-747d16d289aca64f6e9f.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nvar _IconDiamondModule = _interopRequireDefault(require(\"../IconDiamond.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar cx = _bind.default.bind(_IconDiamondModule.default);\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  var iconClassNames = cx(['IconDiamond', customProps.className]);\n  return _react.default.createElement(_IconBase.default, _extends({\n    className: iconClassNames\n  }, attributes), _react.default.createElement(\"path\", {\n    fill: \"#78288C\",\n    d: \"M24.8 47.7l22.9-22.9c.4-.4.4-1.1 0-1.6L24.8.3c-.4-.4-1.1-.4-1.6 0L.3 23.2c-.4.4-.4 1.1 0 1.6l22.9 22.9c.4.4 1.2.4 1.6 0z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconDiamond\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconDiamond\":\"IconDiamond-module__IconDiamond___21vv7\"};","export default \"# Terra Status View\\n\\nPresents an icon, title, message, and/or buttons based on a status type scenario. Scenarios include `no-data`, `no-matching-results`, `not-authorized`, `error`, or a custom scenario.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-status-view`\\n  - `yarn add terra-status-view`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n| react-intl | ^2.8.0 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Implementation Notes:\\n\\nThe Status-View component must be composed inside the [Base][1] component with a locale in order for it to load the correct translation strings.\\n\\n[1]: https://github.com/cerner/terra-core/tree/master/packages/terra-base/docs\\n\\n## Component Features\\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport { FormattedMessage } from 'react-intl';\\nimport Button from 'terra-button';\\nimport Divider from 'terra-divider';\\nimport styles from './StatusView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst StatusViewVariants = {\\n  NODATA: 'no-data',\\n  NOMATCHINGRESULTS: 'no-matching-results',\\n  NOTAUTHORIZED: 'not-authorized',\\n  ERROR: 'error',\\n};\\n\\n/* eslint-disable react/forbid-foreign-prop-types */\\nconst propTypes = {\\n  /**\\n   * An array of objects containing terra-button properties. A key attribute is required for each object.\\n   * This array is used to render buttons in the bottom section.\\n   * Example:`[{ text: 'Button 1', key: 1, size: 'medium', variant: 'action', onClick: onClickFunction}]`\\n   */\\n  buttonAttrs: PropTypes.arrayOf(PropTypes.shape(Button.propTypes)),\\n\\n  /**\\n   * Display a custom glyph. Overrides a variant's default glyph.\\n   */\\n  customGlyph: PropTypes.node,\\n\\n  /**\\n   *  Aligns the component at the top of the container rather than \\\"centered\\\"\\n   */\\n  isAlignedTop: PropTypes.bool,\\n\\n  /**\\n   * Determines if the glyph should be displayed.\\n   */\\n  isGlyphHidden: PropTypes.bool,\\n\\n  /**\\n   * The descriptive text, displayed under the title.\\n   */\\n  message: PropTypes.string,\\n\\n  /**\\n   * The title displayed under the glyph. Variants contain default titles that can be overriden by this prop.\\n   */\\n  title: PropTypes.string,\\n\\n  /**\\n   * Sets the glyph and title using a pre-baked variant. One of the following: `no-data`,\\n   * `no-matching-results`, `not-authorized`, or `error`\\n   */\\n  variant: PropTypes.oneOf(Object.values(StatusViewVariants)),\\n};\\n/* eslint-enable react/forbid-foreign-prop-types */\\n\\nconst defaultProps = {\\n  buttonAttrs: [],\\n  customGlyph: undefined,\\n  isAlignedTop: false,\\n  isGlyphHidden: false,\\n  message: undefined,\\n  title: undefined,\\n  variant: undefined,\\n};\\n\\nconst generateButtons = (buttonAttrsArray) => {\\n  if (!buttonAttrsArray.length) {\\n    return undefined;\\n  }\\n\\n  return buttonAttrsArray.map(button => <Button {...button} className={cx(['button', button.className])} />);\\n};\\n\\nconst StatusView = ({\\n  buttonAttrs,\\n  customGlyph,\\n  isAlignedTop,\\n  isGlyphHidden,\\n  message,\\n  title,\\n  variant,\\n  ...customProps\\n}) => {\\n  let glyphSection;\\n  if (customGlyph && !isGlyphHidden) {\\n    glyphSection = (\\n      <div className={cx('glyph')}>\\n        {customGlyph}\\n      </div>\\n    );\\n  } else if (variant && !isGlyphHidden) {\\n    glyphSection = (\\n      <div className={cx('glyph')}>\\n        <svg className={cx(variant)} />\\n      </div>\\n    );\\n  }\\n\\n  let defaultTitle;\\n  if (variant) {\\n    defaultTitle = <FormattedMessage id={`Terra.status-view.${variant}`} />;\\n  }\\n\\n  // Custom title takes precedence\\n  let titleSection;\\n  if (title || defaultTitle) {\\n    titleSection = (\\n      <div className={cx('title')}>\\n        {title || defaultTitle}\\n      </div>\\n    );\\n  }\\n\\n  let messageSection;\\n  if (message) {\\n    messageSection = (\\n      <div className={cx('message')}>\\n        {message}\\n      </div>\\n    );\\n  }\\n\\n  let actionSection;\\n  const buttons = generateButtons(buttonAttrs);\\n  if (buttons) {\\n    actionSection = (\\n      <div className={cx('actions')}>\\n        {buttons}\\n      </div>\\n    );\\n  }\\n\\n  let dividerSection;\\n  if (titleSection && (messageSection || actionSection)) {\\n    dividerSection = (\\n      <div className={cx('divider')}>\\n        <Divider />\\n      </div>\\n    );\\n  }\\n\\n  const outerViewClassNames = cx([\\n    'outer-view',\\n    { 'is-aligned-top': isAlignedTop },\\n    customProps.className,\\n  ]);\\n\\n  const innerViewClassNames = cx([\\n    'inner-view',\\n  ]);\\n\\n  return (\\n    <div {...customProps} className={outerViewClassNames}>\\n      <div className={cx('top-space')} />\\n      <div className={innerViewClassNames}>\\n        {glyphSection}\\n        {titleSection}\\n        {dividerSection}\\n        {messageSection}\\n        {actionSection}\\n      </div>\\n      <div className={cx('bottom-space')} />\\n    </div>\\n  );\\n};\\n\\nStatusView.propTypes = propTypes;\\nStatusView.defaultProps = defaultProps;\\nexport default StatusView;\\nexport { StatusViewVariants };\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StatusView = _interopRequireDefault(require(\"terra-status-view/lib/StatusView\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar ToggleVariants = function ToggleVariants() {\n  var _useState = (0, _react.useState)('error'),\n      _useState2 = _slicedToArray(_useState, 2),\n      variant = _useState2[0],\n      setVariant = _useState2[1];\n\n  var handleOnSelect = function handleOnSelect(event) {\n    setVariant(event.target.value);\n  };\n\n  return _react.default.createElement(\"div\", null, _react.default.createElement(_StatusView.default, {\n    variant: variant\n  }), _react.default.createElement(\"fieldset\", null, _react.default.createElement(\"legend\", null, \"Change Variant\"), _react.default.createElement(\"select\", {\n    id: \"statusViewVariant\",\n    name: \"statusViewVariant\",\n    value: variant,\n    onChange: handleOnSelect\n  }, _react.default.createElement(\"option\", {\n    value: \"error\"\n  }, \"Error\"), _react.default.createElement(\"option\", {\n    value: \"no-data\"\n  }, \"No Data\"), _react.default.createElement(\"option\", {\n    value: \"no-matching-results\"\n  }, \"No Matching Results\"), _react.default.createElement(\"option\", {\n    value: \"not-authorized\"\n  }, \"Not Authorized\"))));\n};\n\nvar _default = ToggleVariants;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport StatusView from 'terra-status-view/lib/StatusView';\\n\\nconst ToggleVariants = () => {\\n  const [variant, setVariant] = useState('error');\\n\\n  const handleOnSelect = (event) => {\\n    setVariant(event.target.value);\\n  };\\n\\n  return (\\n    <div>\\n      <StatusView variant={variant} />\\n      <fieldset>\\n        <legend>Change Variant</legend>\\n        <select id=\\\"statusViewVariant\\\" name=\\\"statusViewVariant\\\" value={variant} onChange={handleOnSelect}>\\n          <option value=\\\"error\\\">Error</option>\\n          <option value=\\\"no-data\\\">No Data</option>\\n          <option value=\\\"no-matching-results\\\">No Matching Results</option>\\n          <option value=\\\"not-authorized\\\">Not Authorized</option>\\n        </select>\\n      </fieldset>\\n    </div>\\n  );\\n};\\n\\nexport default ToggleVariants;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StatusView = _interopRequireDefault(require(\"terra-status-view/lib/StatusView\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar ToggleAlignmentAndGlyph = function ToggleAlignmentAndGlyph() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlignedTop = _useState2[0],\n      setIsAlignedTop = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isGlyphHidden = _useState4[0],\n      setIsGlyphHidden = _useState4[1];\n\n  var handleOnAlignChange = function handleOnAlignChange() {\n    setIsAlignedTop(!isAlignedTop);\n  };\n\n  var handleOnGlyphChange = function handleOnGlyphChange() {\n    setIsGlyphHidden(!isGlyphHidden);\n  };\n  /* eslint-disable react/forbid-dom-props */\n\n\n  return _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", {\n    style: {\n      height: '400px',\n      border: '1px dashed black'\n    }\n  }, _react.default.createElement(_StatusView.default, {\n    variant: \"error\",\n    isAlignedTop: isAlignedTop,\n    isGlyphHidden: isGlyphHidden\n  })), _react.default.createElement(\"fieldset\", null, _react.default.createElement(\"legend\", null, \"Toggle alignment and glyph\"), _react.default.createElement(\"div\", null, _react.default.createElement(\"input\", {\n    id: \"isAlignedTop\",\n    type: \"checkbox\",\n    onChange: handleOnAlignChange\n  }), _react.default.createElement(\"label\", {\n    htmlFor: \"isAlignedTop\"\n  }, \"isAlignedTop\")), _react.default.createElement(\"div\", null, _react.default.createElement(\"input\", {\n    id: \"isGlyphHidden\",\n    type: \"checkbox\",\n    onChange: handleOnGlyphChange\n  }), _react.default.createElement(\"label\", {\n    htmlFor: \"isGlyphHidden\"\n  }, \"isGlyphHidden\"))));\n};\n\nvar _default = ToggleAlignmentAndGlyph;\nexports.default = _default;","export default \"import React, { useState } from 'react';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport StatusView from 'terra-status-view/lib/StatusView';\\n\\nconst ToggleAlignmentAndGlyph = () => {\\n  const [isAlignedTop, setIsAlignedTop] = useState(false);\\n  const [isGlyphHidden, setIsGlyphHidden] = useState(false);\\n\\n  const handleOnAlignChange = () => {\\n    setIsAlignedTop(!isAlignedTop);\\n  };\\n\\n  const handleOnGlyphChange = () => {\\n    setIsGlyphHidden(!isGlyphHidden);\\n  };\\n\\n  /* eslint-disable react/forbid-dom-props */\\n  return (\\n    <div>\\n      <div style={{ height: '400px', border: '1px dashed black' }}>\\n        <StatusView variant=\\\"error\\\" isAlignedTop={isAlignedTop} isGlyphHidden={isGlyphHidden} />\\n      </div>\\n      <fieldset>\\n        <legend>Toggle alignment and glyph</legend>\\n        <div>\\n          <input id=\\\"isAlignedTop\\\" type=\\\"checkbox\\\" onChange={handleOnAlignChange} />\\n          <label htmlFor=\\\"isAlignedTop\\\">isAlignedTop</label>\\n        </div>\\n        <div>\\n          <input id=\\\"isGlyphHidden\\\" type=\\\"checkbox\\\" onChange={handleOnGlyphChange} />\\n          <label htmlFor=\\\"isGlyphHidden\\\">isGlyphHidden</label>\\n        </div>\\n      </fieldset>\\n    </div>\\n  );\\n};\\n\\nexport default ToggleAlignmentAndGlyph;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconDiamond = _interopRequireDefault(require(\"terra-icon/lib/icon/IconDiamond\"));\n\nvar _StatusView = _interopRequireDefault(require(\"terra-status-view/lib/StatusView\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar StatusViewButtons = [{\n  text: 'Action 1',\n  size: 'medium',\n  key: 1\n}, {\n  text: 'Action 2',\n  size: 'medium',\n  key: 2\n}];\n\nvar Custom = _react.default.createElement(_StatusView.default, {\n  message: \"Custom Message\",\n  customGlyph: _react.default.createElement(_IconDiamond.default, null),\n  title: \"Custom Title\",\n  buttonAttrs: StatusViewButtons\n});\n\nvar _default = Custom;\nexports.default = _default;","export default \"import React from 'react';\\nimport IconDiamond from 'terra-icon/lib/icon/IconDiamond';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport StatusView from 'terra-status-view/lib/StatusView';\\n\\nconst StatusViewButtons = [\\n  {\\n    text: 'Action 1',\\n    size: 'medium',\\n    key: 1,\\n  }, {\\n    text: 'Action 2',\\n    size: 'medium',\\n    key: 2,\\n  },\\n];\\n\\nconst Custom = (\\n  <StatusView\\n    message=\\\"Custom Message\\\"\\n    customGlyph={<IconDiamond />}\\n    title=\\\"Custom Title\\\"\\n    buttonAttrs={StatusViewButtons}\\n  />\\n);\\n\\nexport default Custom;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _StatusView = _interopRequireDefault(require(\"!raw-loader!../../../../src/StatusView\"));\n\nvar _ToggleVariants = _interopRequireDefault(require(\"../example/ToggleVariants\"));\n\nvar _ToggleVariants2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/ToggleVariants\"));\n\nvar _ToggleAlignmentAndGlyph = _interopRequireDefault(require(\"../example/ToggleAlignmentAndGlyph\"));\n\nvar _ToggleAlignmentAndGlyph2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/ToggleAlignmentAndGlyph\"));\n\nvar _Custom = _interopRequireDefault(require(\"../example/Custom\"));\n\nvar _Custom2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/Custom\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Example Files\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'Variants',\n      example: _react.default.createElement(_ToggleVariants.default, null),\n      source: _ToggleVariants2.default\n    }, {\n      title: 'Custom: Icon + message + buttons',\n      example: _Custom.default,\n      source: _Custom2.default\n    }, {\n      title: 'Toggle Alignment and Glyph',\n      example: _react.default.createElement(_ToggleAlignmentAndGlyph.default, null),\n      source: _ToggleAlignmentAndGlyph2.default\n    }],\n    propsTables: [{\n      componentName: 'Status View',\n      componentSrc: _StatusView.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}