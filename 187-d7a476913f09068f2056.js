(window.webpackJsonp=window.webpackJsonp||[]).push([[187,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],{3005:function(e,t,n){"use strict";n.r(t),t.default="# List Section Header\n\nThe list section header is a sub-component of the list section. It provides the visual representation of the section, but does not provided any collapsible functionality itself, it's collapsible props are for the display of the collapse/expand indicator. The section header should only be consumed directly when the header is static, as the actual list item collapse is handled by the section.\n\nWhen consumed by itself as an individual list item avoid enabling the collapsible properties.\n\n## Usage\n\n```jsx\nimport React from 'react';\nimport List, { SectionHeader } from 'terra-list/lib/List';\n\n<SectionHeader\n  title=\"test title\"\n  key=\"section-1\"\n/>\n\n```\n"},3006:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport ListUtils from './ListUtils';\nimport styles from './ListSectionHeader.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * @private Whether or not the section is collapsed.\n   */\n  isCollapsed: PropTypes.bool,\n  /**\n   * @private Whether or not the section can be collapsed.\n   */\n  isCollapsible: PropTypes.bool,\n  /**\n   * Optionally sets the heading level. One of `1`, `2`, `3`, `4`, `5`, `6`.\n   */\n  level: PropTypes.oneOf([1, 2, 3, 4, 5, 6]),\n  /**\n   * @private The associated metaData to be provided in the onSelect callback.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  metaData: PropTypes.object,\n  /**\n   * @private Function callback for when the appropriate click or key action is performed.\n   * Callback contains the javascript evnt and prop metadata, e.g. onSelect(event, metaData)\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Function callback passthrough for the ref of the section li.\n   */\n  refCallback: PropTypes.func,\n  /**\n   * Title text to be placed within the section header.\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.\n   */\n  onClick: PropTypes.func,\n  /**\n   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @private Callback function not intended for use with this API, but if set pass it through to the element regardless.\n   */\n  onMouseDown: PropTypes.func,\n};\n\nconst defaultProps = {\n  isCollapsed: false,\n  isCollapsible: false,\n  level: 1,\n};\n\nconst ListSectionHeader = ({\n  isCollapsed,\n  isCollapsible,\n  level,\n  metaData,\n  onBlur,\n  onClick,\n  onKeyDown,\n  onMouseDown,\n  onSelect,\n  refCallback,\n  title,\n  ...customProps\n}) => {\n  const sectionHeaderClassNames = cx([\n    'section-header',\n    { 'is-collapsible': isCollapsible },\n    customProps.className,\n  ]);\n\n  const attrSpread = {};\n  const Element = `h${level}`;\n  let titleElement = <Element className={cx('title')}>{title}</Element>;\n  let accordionIcon;\n  if (isCollapsible) {\n    accordionIcon = (\n      <div className={cx('start')}>\n        <span className={cx(['accordion-icon', { 'is-open': !isCollapsed }])} />\n      </div>\n    );\n    titleElement = (\n      <div className={cx('fill')}>\n        {titleElement}\n      </div>\n    );\n\n    attrSpread.onClick = ListUtils.wrappedOnClickForItem(onClick, onSelect, metaData);\n    attrSpread.onKeyDown = ListUtils.wrappedOnKeyDownForItem(onKeyDown, onSelect, metaData);\n    attrSpread.tabIndex = '0';\n    attrSpread.role = 'heading';\n    attrSpread['aria-expanded'] = !isCollapsed;\n    attrSpread['aria-level'] = 1;\n    attrSpread['data-item-show-focus'] = 'true';\n    attrSpread.onBlur = ListUtils.wrappedEventCallback(onBlur, event => event.currentTarget.setAttribute('data-item-show-focus', 'true'));\n    attrSpread.onMouseDown = ListUtils.wrappedEventCallback(onMouseDown, event => event.currentTarget.setAttribute('data-item-show-focus', 'false'));\n  }\n\n  return (\n    <li {...customProps} {...attrSpread} className={sectionHeaderClassNames} ref={refCallback}>\n      {accordionIcon}\n      {titleElement}\n    </li>\n  );\n};\n\nListSectionHeader.propTypes = propTypes;\nListSectionHeader.defaultProps = defaultProps;\n\nexport default ListSectionHeader;\n"},3007:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,a=(r=n(0))&&r.__esModule?r:{default:r},s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n(123));var i=function(){return a.default.createElement(s.default,null,a.default.createElement(s.SectionHeader,{title:"Default SectionHeader",key:"default"}))};t.default=i},3008:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport List, { SectionHeader } from 'terra-list/lib/index';\n\nconst ListSectionHeaderExample = () => (\n  <List>\n    <SectionHeader title=\"Default SectionHeader\" key=\"default\" />\n  </List>\n);\n\nexport default ListSectionHeaderExample;\n"},3754:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=p(n(0)),a=p(n(911)),s=p(n(3005)),i=n(921),o=p(n(3006)),l=p(n(3007)),c=p(n(3008));function p(e){return e&&e.__esModule?e:{default:e}}var d=function(){return r.default.createElement(a.default,{packageName:i.name,readme:s.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(i.name),examples:[{example:r.default.createElement(l.default,null),source:c.default}],propsTables:[{componentName:"List-Section-Header",componentSrc:o.default}]})};t.default=d},912:function(e,t){},921:function(e){e.exports=JSON.parse('{"_from":"terra-list@^4.0.0","_id":"terra-list@4.14.0","_inBundle":false,"_integrity":"sha512-8J/uID+LTXyBUFDAHetqXOkCX463OuXg9/bW8z7rfilgqDYuGjZmjxn+9OYTK+vhGvpt4WCKH/C8WGwaEq7afQ==","_location":"/terra-list","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-list@^4.0.0","name":"terra-list","escapedName":"terra-list","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/","/terra-collapsible-menu-view","/terra-dev-site","/terra-infinite-list","/terra-menu"],"_resolved":"https://registry.npmjs.org/terra-list/-/terra-list-4.14.0.tgz","_shasum":"801467d9ebc874914daa659d1aab99a64b2f53ac","_spec":"terra-list@^4.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-core/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","keycode-js":"^1.0.4","prop-types":"^15.5.8","terra-doc-template":"^2.15.0","terra-icon":"^3.16.0","terra-mixins":"^1.33.0"},"deprecated":false,"description":"The Terra List is a structural component to arrange content within list/listitems.","gitHead":"0b893dc4a80250c0b485a5f205f2defde7c38ecf","homepage":"https://github.com/cerner/terra-core#readme","keywords":["Cerner","Terra","terra-list","List","UI"],"license":"Apache-2.0","main":"lib/index.js","name":"terra-list","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"4.14.0"}')}}]);
//# sourceMappingURL=187-d7a476913f09068f2056.js.map