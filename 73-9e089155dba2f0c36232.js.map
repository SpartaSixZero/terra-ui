{"version":3,"sources":["webpack:///./node_modules/terra-form-checkbox/lib/Checkbox.module.scss?68eb","webpack:///./node_modules/terra-form-checkbox/lib/CheckboxUtil.js","webpack:///./node_modules/terra-icon/lib/icon/IconTrash.js","webpack:///./node_modules/terra-icon/lib/icon/IconFolder.js","webpack:///./node_modules/terra-icon/lib/icon/IconPrinter.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/CollapsibleMenuView.module.scss?60ce","webpack:///./node_modules/terra-icon/lib/icon/IconVisualization.js","webpack:///./node_modules/terra-icon/lib/icon/IconTable.js","webpack:///./node_modules/terra-icon/lib/icon/IconFlowsheet.js","webpack:///./node_modules/terra-icon/lib/icon/IconSend.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/_CollapsibleMenu.js","webpack:///./node_modules/terra-collapsible-menu-view/docs/README.md","webpack:///./node_modules/terra-collapsible-menu-view/src/CollapsibleMenuView.jsx","webpack:///./node_modules/terra-collapsible-menu-view/src/CollapsibleMenuViewItem.jsx","webpack:///./node_modules/terra-collapsible-menu-view/src/CollapsibleMenuViewItemGroup.jsx","webpack:///./node_modules/terra-collapsible-menu-view/src/CollapsibleMenuViewToggle.jsx","webpack:///./node_modules/terra-collapsible-menu-view/lib/terra-dev-site/doc/example/CollapsibleMenuViewDemo.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/CollapsibleMenuView.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/CollapsibleMenuViewItem.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/CollapsibleMenuViewItemGroup.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/CollapsibleMenuViewToggle.js","webpack:///./node_modules/terra-collapsible-menu-view/lib/CollapsibleMenuViewDivider.js","webpack:///./node_modules/terra-collapsible-menu-view/src/terra-dev-site/doc/example/CollapsibleMenuViewDemo.jsx","webpack:///./node_modules/terra-collapsible-menu-view/lib/terra-dev-site/doc/collapsible-menu-view/CollapsibleMenuView.1.doc.js","webpack:///./node_modules/terra-form-checkbox/lib/Checkbox.js"],"names":["module","exports","CheckboxUtil","isConsideredMobileDevice","window","matchMedia","matches","DocumentTouch","document","navigator","maxTouchPoints","msMaxTouchPoints","Object","defineProperty","value","default","_react","_interopRequireDefault","_IconBase","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgIcon","customProps","attributes","createElement","d","displayName","defaultProps","_default","_extends2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_propTypes","_bind","_terraMenu","_CollapsibleMenuViewModule","cx","bind","propTypes","children","node","isRequired","boundingRef","func","contentWidth","oneOf","keys","Opts","widths","button","element","childContextTypes","isCollapsibleMenuItem","bool","CollapsibleMenu","_React$Component","props","_this","handleRequestClose","wrappedOnClick","wrapButtonClick","wrapChildrenOnClick","setButtonNode","getButtonNode","state","isOpen","buttonNode","setState","item","_this2","event","onClick","_this3","_this4","cloneChildren","undefined","Children","forEach","clonedElement","shouldCloseOnClick","cloneElement","clonedChildren","subMenuItems","push","_this$props","clonedButton","className","ref","onRequestClose","isArrowDisplayed","targetRef","Component","Item","ItemGroup","_IconTable","_IconFlowsheet","_IconVisualization","_IconSend","_IconPrinter","_IconFolder","_IconTrash","_CollapsibleMenuView","CollapsibleMenuViewDemo","handleDisplayTypeChange","handleToggleOneOnChange","handleToggleTwoOnChange","toggle1Selection","toggle2Selection","displayType","isSelected","selectedKey","Toggle","text","onChange","isSelectable","isDisabled","Divider","selectedKeys","icon","isIconOnly","_resizeObserverPolyfill","_CollapsibleMenuViewItem","_CollapsibleMenuViewItemGroup","_CollapsibleMenuViewToggle","_CollapsibleMenuViewDivider","menuWidth","contextTypes","intl","context","Error","CollapsibleMenuView","setContainer","setMenuButton","resetCache","handleResize","resizeObserver","entries","contentRect","width","isCalculating","animationFrameID","requestAnimationFrame","forceUpdate","observe","container","cancelAnimationFrame","disconnect","menuButton","hiddenStartIndex","menuHidden","availableWidth","getBoundingClientRect","calcWidth","count","ellipsesText","formatMessage","id","visibleChildren","toArray","hiddenChildren","splice","collapsibleMenuViewClassName","menuButtonClassName","hidden","_terraButton","_terraButtonGroup","_CollapsibleMenu","string","isReversed","arrayOf","isCollapsibleGroupItem","CollapsibleMenuViewItem","_this$context","Button","handleButtonClick","_terraList","CollapsibleMenuViewItemGroup","handleOnChange","selectedIndex","child","index","role","buttonGroupClassNames","_terraFormCheckbox","CollapsibleMenuViewToggle","wrappedOnChange","checked","controllClassName","labelText","defaultChecked","disabled","CollapsibleMenuViewDivider","_ref","_terraDocTemplate","_README","_package","_CollapsibleMenuViewDemo","_CollapsibleMenuViewDemo2","packageName","name","readme","srcPath","concat","examples","title","example","propsTables","componentName","componentSrc","_CheckboxModule","_CheckboxUtil","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","inputAttrs","object","isInline","isLabelHidden","labelTextAttrs","onBlur","onFocus","Checkbox","controlInputAttrs","checkboxClasses","labelClasses","inputClasses","labelTextClasses","labelTextContainer","htmlFor","type","isCheckbox"],"mappings":"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","file":"73-9e089155dba2f0c36232.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox-module__checkbox___HI9Vi\",\"label\":\"Checkbox-module__label___3E8fg\",\"is-mobile\":\"Checkbox-module__is-mobile___frQvN\",\"native-input\":\"Checkbox-module__native-input___GvkXw\",\"label-text\":\"Checkbox-module__label-text___fY5lt\",\"is-hidden\":\"Checkbox-module__is-hidden___26Rqh\",\"is-disabled\":\"Checkbox-module__is-disabled___WSQKG\",\"is-inline\":\"Checkbox-module__is-inline___1jo0Z\"};","\"use strict\";\n\n// TODO: move this to utils package. Issue #1010.\nvar CheckboxUtil = function () {\n  var isConsideredMobileDevice = function isConsideredMobileDevice() {\n    return window.matchMedia('(max-width: 1024px)').matches && ('ontouchstart' in window // eslint-disable-next-line no-undef\n    || window.DocumentTouch && document instanceof DocumentTouch || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0);\n  };\n\n  return {\n    isConsideredMobileDevice: isConsideredMobileDevice\n  };\n}();\n\nmodule.exports = CheckboxUtil;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M42.1 4H28V2a2 2 0 00-2-2h-4a2 2 0 00-2 2v2H5.9L5 11h38zM38 14H8.1l3.7 32a2.26 2.26 0 002.2 2h20a2.26 2.26 0 002.2-2l3.7-32z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconTrash\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M45.8 12c1.2 0 2.2 1 2.2 2.2v26.7c0 1.2-1 2.2-2.2 2.2H2.2C1 43 0 42 0 40.8V7.2C0 6 1 5 2.2 5H15c1.4.1 2.7.6 3.7 1.6l3.8 3.9c1 1 2.3 1.5 3.7 1.6l19.4-.1h.2z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconFolder\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M39.8 12H35V1.7c0-.9-.8-1.7-1.7-1.7H8.7C7.8 0 7 .8 7 1.7V12H2.2C1 12 0 13 0 14.2v19.7C.1 35.1 1 36 2.2 36H7v10.3c0 .9.8 1.7 1.7 1.7h24.6c.9 0 1.7-.8 1.7-1.7V36h4.8c1.2 0 2.2-1 2.2-2.2V14.2c0-1.2-1-2.2-2.2-2.2zM10 3h22v9H10V3zm22 42H10V29.9h22V45zm3.2-24C34 21 33 20 33 18.8s1-2.2 2.2-2.2 2.2 1 2.2 2.2c0 1.2-1 2.2-2.2 2.2z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconPrinter\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 42 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapsible-menu-view\":\"CollapsibleMenuView-module__collapsible-menu-view___2nx9S\",\"menu-button\":\"CollapsibleMenuView-module__menu-button___stZoT\",\"hidden\":\"CollapsibleMenuView-module__hidden___oBOhM\",\"menu-button-icon\":\"CollapsibleMenuView-module__menu-button-icon___3AEH6\",\"face-up-item\":\"CollapsibleMenuView-module__face-up-item___1DBow\",\"control\":\"CollapsibleMenuView-module__control___14DH1\",\"is-disabled\":\"CollapsibleMenuView-module__is-disabled___3j2OV\",\"divider\":\"CollapsibleMenuView-module__divider___XkJS5\",\"is-calculating\":\"CollapsibleMenuView-module__is-calculating___2D9gM\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M48 8v16h-6v-5.7L25.31 35l-4.56-4.56L9.18 42H48v6H0V0h6v36.7l14.75-14.76 4.56 4.56L37.82 14H32V8z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconVisualization\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M0 0v48h48V0zm31 9v10H18V9zm0 13v10H18V22zm3 0h11v10H34zm0-3V9h11v10zM3 9h12v10H3zm0 13h12v10H3zm0 23V35h12v10zm15 0V35h13v10zm16 0V35h11v10z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconTable\";\nSvgIcon.defaultProps = {\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\"\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M0 0v48h48V0zm45 45H15V3h30z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconFlowsheet\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"data-name\": \"Layer 1\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconBase = _interopRequireDefault(require(\"../IconBase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar SvgIcon = function SvgIcon(customProps) {\n  var attributes = _extends({}, customProps);\n\n  return _react.default.createElement(_IconBase.default, attributes, _react.default.createElement(\"path\", {\n    d: \"M47.2 24.9c1-.5 1-1.3 0-1.8L28 13.5 25 12c-.7-.3-2.9-1.5-3.9-2L1.9.4C.8-.1 0 .4 0 1.5V19c0 1.2.9 2.2 2.1 2.3L30.3 24c1.1.1 1.1.3 0 .4L2.1 27C.9 27.1 0 28 0 29.2v17.2c-.1.6.3 1.2.9 1.3.3 0 .6 0 .9-.2L21.1 38l3-1.5c.7-.3 2.9-1.5 3.9-2l19.2-9.6z\"\n  }));\n};\n\nSvgIcon.displayName = \"IconSend\";\nSvgIcon.defaultProps = {\n  \"className\": \"\",\n  \"viewBox\": \"0 0 48 48\",\n  \"xmlns\": \"http://www.w3.org/2000/svg\",\n  \"isBidi\": true\n};\nvar _default = SvgIcon;\n/* eslint-enable */\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraMenu = _interopRequireDefault(require(\"terra-menu\"));\n\nvar _CollapsibleMenuViewModule = _interopRequireDefault(require(\"./CollapsibleMenuView.module.scss\"));\n\nvar cx = _bind.default.bind(_CollapsibleMenuViewModule.default);\n\nvar propTypes = {\n  /**\n   * List of CollapsibleMenuView.Item(s)/CollapsibleMenuView.ItemGroup(s)/CollapsibleMenuView.Divider(s) to be displayed as content within the Menu.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Bounding container for the menu, will use window if no value provided.\n   */\n  boundingRef: _propTypes.default.func,\n\n  /**\n   * A string representation of the width in px, limited to:\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\n   */\n  contentWidth: _propTypes.default.oneOf(Object.keys(_terraMenu.default.Opts.widths)),\n\n  /**\n   * Button to display the menu from\n   */\n  button: _propTypes.default.element.isRequired\n};\nvar childContextTypes = {\n  isCollapsibleMenuItem: _propTypes.default.bool\n};\n\nvar CollapsibleMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenu, _React$Component);\n\n  function CollapsibleMenu(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenu);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenu).call(this, props));\n    _this.handleRequestClose = _this.handleRequestClose.bind((0, _assertThisInitialized2.default)(_this));\n    _this.wrappedOnClick = _this.wrappedOnClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.wrapButtonClick = _this.wrapButtonClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.wrapChildrenOnClick = _this.wrapChildrenOnClick.bind((0, _assertThisInitialized2.default)(_this));\n    _this.setButtonNode = _this.setButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getButtonNode = _this.getButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollapsibleMenu, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        isCollapsibleMenuItem: true\n      };\n    }\n  }, {\n    key: \"setButtonNode\",\n    value: function setButtonNode(node) {\n      this.buttonNode = node;\n    }\n  }, {\n    key: \"getButtonNode\",\n    value: function getButtonNode() {\n      return this.buttonNode;\n    }\n  }, {\n    key: \"handleRequestClose\",\n    value: function handleRequestClose() {\n      this.setState({\n        isOpen: false\n      });\n    }\n  }, {\n    key: \"wrappedOnClick\",\n    value: function wrappedOnClick(item) {\n      var _this2 = this;\n\n      return function (event) {\n        _this2.handleRequestClose();\n\n        if (item.props.onClick) {\n          item.props.onClick(event);\n        }\n      };\n    }\n  }, {\n    key: \"wrapButtonClick\",\n    value: function wrapButtonClick(button) {\n      var _this3 = this;\n\n      return function (event) {\n        _this3.setState({\n          isOpen: true\n        });\n\n        if (button.props.onClick) {\n          button.props.onClick(event);\n        }\n      };\n    }\n  }, {\n    key: \"wrapChildrenOnClick\",\n    value: function wrapChildrenOnClick(children) {\n      var _this4 = this;\n\n      var cloneChildren = children ? [] : undefined;\n\n      _react.default.Children.forEach(children, function (item) {\n        var clonedElement = item;\n\n        if (item.props.shouldCloseOnClick) {\n          clonedElement = _react.default.cloneElement(item, {\n            onClick: _this4.wrappedOnClick(item)\n          });\n        } else if (item.props.children) {\n          var clonedChildren = _this4.wrapChildrenOnClick(item.props.children);\n\n          clonedElement = _react.default.cloneElement(item, {\n            children: clonedChildren\n          });\n        } else if (item.props.subMenuItems) {\n          var subMenuItems = _this4.wrapChildrenOnClick(item.props.subMenuItems);\n\n          clonedElement = _react.default.cloneElement(item, {\n            subMenuItems: subMenuItems\n          });\n        }\n\n        cloneChildren.push(clonedElement);\n      });\n\n      return cloneChildren;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          button = _this$props.button,\n          contentWidth = _this$props.contentWidth,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"button\", \"contentWidth\"]);\n\n      var clonedButton = _react.default.cloneElement(button, {\n        onClick: this.wrapButtonClick(button)\n      });\n\n      return _react.default.createElement(\"div\", {\n        className: cx('face-up-item'),\n        ref: this.setButtonNode\n      }, _react.default.createElement(_terraMenu.default, (0, _extends2.default)({}, customProps, {\n        onRequestClose: this.handleRequestClose,\n        isArrowDisplayed: true,\n        isOpen: this.state.isOpen,\n        targetRef: this.getButtonNode,\n        contentWidth: contentWidth\n      }), this.wrapChildrenOnClick(children)), clonedButton);\n    }\n  }]);\n  return CollapsibleMenu;\n}(_react.default.Component);\n\nCollapsibleMenu.propTypes = propTypes;\nCollapsibleMenu.childContextTypes = childContextTypes;\nCollapsibleMenu.Item = _terraMenu.default.Item;\nCollapsibleMenu.ItemGroup = _terraMenu.default.ItemGroup;\nCollapsibleMenu.Opts = {\n  widths: _terraMenu.default.Opts.widths\n};\nvar _default = CollapsibleMenu;\nexports.default = _default;","export default \"# Terra Collapsible Menu View\\n\\nThe collapsible menu view is a mechanism that can be used in toolbar scenarios where actionable items will be displayed face-up and flex based on the space available. Any items that can not fit in the available space will be rolled into an ellipsis menu.\\n\\nCollapsibleMenuView.Item will flex between a button when displayed face-up and a Menu.Item when in a menu. An item can have an onClick action and/or contain menuItems that will be displayed in a menu when clicked (they will be displayed in a submenu if the item is rolled into the ellipsis menu)\\n\\nCollapsibleMenuView.Toggle will flex between a checkbox with a label when displayed face-up and a selectable Menu.Item when in a menu.\\n\\nCollapsibleMenuView.ItemGroup will flex between a button group when displayed face-up and a Menu.ItemGroup when rolled into the ellipsis menu. A selectable ItemGroup will have toggle style selection. An Item group that is not slectable will have it's children roll into the ellipsis menu as non selectable Menu.Items.\\n\\nCollapsibleMenuView.Divider will flex between a vertical divider when displayed face-up and a Menu.Divider when in a menu.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-collapsible-menu-view`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport IconTable from 'terra-icon/lib/icon/IconTable';\\nimport IconFlowsheet from 'terra-icon/lib/icon/IconFlowsheet';\\nimport IconVisualization from 'terra-icon/lib/icon/IconVisualization';\\nimport IconSend from 'terra-icon/lib/icon/IconSend';\\nimport IconPrinter from 'terra-icon/lib/icon/IconPrinter';\\nimport IconFolder from 'terra-icon/lib/icon/IconFolder';\\nimport IconTrash from 'terra-icon/lib/icon/IconTrash';\\nimport CollapsibleMenuView from 'terra-collapsible-menu-view';\\n\\nclass CollapsibleMenuViewDemo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\\n    this.state = {\\n      toggle1Selection: false,\\n      toggle2Selection: false,\\n      displayType: 'tableView',\\n    };\\n  }\\n\\n  handleToggleOneOnChange(event, isSelected) {\\n    this.setState({ toggle1Selection: isSelected });\\n  }\\n\\n  handleToggleTwoOnChange(event, isSelected) {\\n    this.setState({ toggle2Selection: isSelected });\\n  }\\n\\n  handleDisplayTypeChange(event, selectedKey) {\\n    this.setState({ displayType: selectedKey });\\n  }\\n\\n  render() {\\n    return (\\n      <CollapsibleMenuView>\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 1\\\"\\n          key=\\\"toggle1\\\"\\n          onChange={this.handleToggleOneOnChange}\\n          isSelected={this.state.toggle1Selection}\\n        />\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 2\\\"\\n          key=\\\"toggle2\\\"\\n          onChange={this.handleToggleTwoOnChange}\\n          isSelected={this.state.toggle2Selection}\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider1\\\" />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 1\\\"\\n          key=\\\"MenuButton1\\\"\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 2\\\"\\n          key=\\\"MenuButton 2\\\"\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider2\\\" />\\n        <CollapsibleMenuView.ItemGroup key=\\\"ViewTypeSelection\\\" onChange={this.handleDisplayTypeChange}>\\n          <CollapsibleMenuView.Item\\n            icon={<IconTable />}\\n            text=\\\"Table View\\\"\\n            key=\\\"tableView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'tableView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconFlowsheet />}\\n            text=\\\"Expanded View\\\"\\n            key=\\\"expandedView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'expandedView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconVisualization />}\\n            text=\\\"Trending View\\\"\\n            key=\\\"trendingView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'trendingView'}\\n          />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider3\\\" />\\n        <CollapsibleMenuView.Item icon={<IconSend />} text=\\\"Send Message\\\" key=\\\"send\\\" isIconOnly />\\n        <CollapsibleMenuView.ItemGroup key=\\\"messageActionGroup\\\">\\n          <CollapsibleMenuView.Item icon={<IconPrinter />} text=\\\"Print Message\\\" key=\\\"print\\\" isIconOnly />\\n          <CollapsibleMenuView.Item icon={<IconFolder />} text=\\\"Move Message to Folder...\\\" key=\\\"move\\\" isIconOnly />\\n          <CollapsibleMenuView.Item icon={<IconTrash />} text=\\\"Trash Message\\\" key=\\\"trash\\\" isIconOnly />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider4\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 1\\\" key=\\\"button1\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 2\\\" key=\\\"button2\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 3\\\" key=\\\"button3\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 4\\\" key=\\\"button4\\\" />\\n      </CollapsibleMenuView>\\n    );\\n  }\\n}\\n\\nexport default CollapsibleMenuViewDemo;\\n```\\n\\n## Component Features\\n\\n\\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\\n\"","export default \"import React from 'react';\\nimport ResizeObserver from 'resize-observer-polyfill';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport CollapsibleMenuViewItem from './CollapsibleMenuViewItem';\\nimport CollapsibleMenuViewItemGroup from './CollapsibleMenuViewItemGroup';\\nimport CollapsibleMenuViewToggle from './CollapsibleMenuViewToggle';\\nimport CollapsibleMenuViewDivider from './CollapsibleMenuViewDivider';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Item/ItemGroup/Divider elements to display in the view. Items that will fit in the space available will\\n   * display face-up the remainder will be rolled into a menu\\n   */\\n  children: PropTypes.node.isRequired,\\n\\n  /**\\n   * A string representation of the width in px, limited to:\\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\\n   */\\n  menuWidth: PropTypes.oneOf(Object.keys(CollapsibleMenuViewItem.Opts.widths)),\\n\\n  /**\\n   * Bounding container for the menu, will use window if no value provided.\\n   */\\n  boundingRef: PropTypes.func,\\n};\\n\\nconst contextTypes = {\\n  /* eslint-disable consistent-return */\\n  intl: (context) => {\\n    if (context.intl === undefined) {\\n      return new Error('Component is internationalized, and must be wrapped in terra-base');\\n    }\\n  },\\n};\\n\\nclass CollapsibleMenuView extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.setContainer = this.setContainer.bind(this);\\n    this.setMenuButton = this.setMenuButton.bind(this);\\n    this.resetCache = this.resetCache.bind(this);\\n    this.handleResize = this.handleResize.bind(this);\\n    this.resetCache();\\n  }\\n\\n  componentDidMount() {\\n    this.resizeObserver = new ResizeObserver((entries) => {\\n      this.contentWidth = entries[0].contentRect.width;\\n      if (!this.isCalculating) {\\n        this.animationFrameID = window.requestAnimationFrame(() => {\\n          // Resetting the cache so that all elements will be rendered face-up for width calculations\\n          this.resetCache();\\n          this.forceUpdate();\\n        });\\n      }\\n    });\\n    this.handleResize(this.contentWidth);\\n    this.resizeObserver.observe(this.container);\\n  }\\n\\n  componentDidUpdate() {\\n    if (this.isCalculating) {\\n      this.isCalculating = false;\\n      this.handleResize(this.contentWidth);\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    window.cancelAnimationFrame(this.animationFrameID);\\n    this.resizeObserver.disconnect(this.container);\\n    this.container = null;\\n  }\\n\\n  setContainer(node) {\\n    if (node === null) { return; } // Ref callbacks happen on mount and unmount, element will be null on unmount\\n    this.container = node;\\n  }\\n\\n  setMenuButton(node) {\\n    if (node === null) { return; }\\n    this.menuButton = node;\\n  }\\n\\n  resetCache() {\\n    this.animationFrameID = null;\\n    this.hiddenStartIndex = -1;\\n    this.isCalculating = true;\\n    this.menuHidden = false;\\n  }\\n\\n  handleResize(width) {\\n    const menuButtonWidth = this.menuButton.getBoundingClientRect().width;\\n    const availableWidth = width - menuButtonWidth;\\n    let hiddenStartIndex = -1;\\n    let calcWidth = 0;\\n    let menuHidden = true;\\n\\n    for (let i = 0; i < React.Children.count(this.props.children); i += 1) {\\n      const child = this.container.children[i];\\n      const childWidth = child.getBoundingClientRect().width;\\n      calcWidth += childWidth;\\n\\n      if (calcWidth > availableWidth) {\\n        // If last child fits in the available space, leave it face up\\n        if (i === this.props.children.length - 1 && calcWidth <= width) {\\n          break;\\n        }\\n\\n        hiddenStartIndex = i;\\n        menuHidden = false;\\n        break;\\n      }\\n    }\\n\\n    if (this.menuHidden !== menuHidden || this.hiddenStartIndex !== hiddenStartIndex) {\\n      this.menuHidden = menuHidden;\\n      this.hiddenStartIndex = hiddenStartIndex;\\n      this.forceUpdate();\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      children, boundingRef, menuWidth, ...customProps\\n    } = this.props;\\n    const { intl } = this.context;\\n    const ellipsesText = intl.formatMessage({ id: 'Terra.collapsibleMenuView.more' });\\n    const visibleChildren = React.Children.toArray(children);\\n\\n    let hiddenChildren = null;\\n    if (this.hiddenStartIndex >= 0) {\\n      hiddenChildren = visibleChildren.splice(this.hiddenStartIndex);\\n    }\\n\\n    const collapsibleMenuViewClassName = cx([\\n      'collapsible-menu-view',\\n      { 'is-calculating': this.isCalculating },\\n      customProps.className,\\n    ]);\\n    const menuButtonClassName = cx([\\n      'menu-button',\\n      { hidden: this.menuHidden },\\n    ]);\\n\\n    return (\\n      <div {...customProps} className={collapsibleMenuViewClassName} ref={this.setContainer}>\\n        {visibleChildren}\\n        <div className={menuButtonClassName} ref={this.setMenuButton}>\\n          <CollapsibleMenuViewItem\\n            data-collapsible-menu-toggle\\n            icon={<span className={cx('menu-button-icon')} />}\\n            subMenuItems={hiddenChildren}\\n            boundingRef={boundingRef}\\n            menuWidth={menuWidth}\\n            isIconOnly\\n            text={ellipsesText}\\n          />\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nCollapsibleMenuView.Item = CollapsibleMenuViewItem;\\nCollapsibleMenuView.ItemGroup = CollapsibleMenuViewItemGroup;\\nCollapsibleMenuView.Toggle = CollapsibleMenuViewToggle;\\nCollapsibleMenuView.Divider = CollapsibleMenuViewDivider;\\n\\nCollapsibleMenuView.propTypes = propTypes;\\nCollapsibleMenuView.contextTypes = contextTypes;\\n\\nexport default CollapsibleMenuView;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport Button from 'terra-button';\\nimport ButtonGroup from 'terra-button-group';\\nimport Menu from './_CollapsibleMenu';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Sets the item's text\\n   */\\n  text: PropTypes.string.isRequired,\\n\\n  /**\\n   * Bounding container for the menu, will use window if no value provided.\\n   */\\n  boundingRef: PropTypes.func,\\n\\n  /**\\n  * An optional icon. Nested inline with the text when provided\\n  */\\n  icon: PropTypes.element,\\n\\n  /**\\n   * Indicates if only the icon should display when item is face-up. (Text should still be given to be displayed when item is in the menu)\\n   */\\n  isIconOnly: PropTypes.bool,\\n\\n  /**\\n  * Reverses the position of the icon and text\\n  */\\n  isReversed: PropTypes.bool,\\n\\n  /**\\n   * Indicates if the item start as selected when placed in a button group\\n   */\\n  isSelected: PropTypes.bool,\\n\\n  /**\\n   * Indicates if the item should be disabled.\\n   */\\n  isDisabled: PropTypes.bool,\\n\\n  /**\\n   * Indicates that clicking on this item while displayed inside a menu should close the menu.\\n   */\\n  shouldCloseOnClick: PropTypes.bool,\\n\\n  /**\\n   * List of Menu.Items to display in a submenu when this item is selected.\\n   */\\n  subMenuItems: PropTypes.arrayOf(PropTypes.element),\\n\\n  /**\\n   * Callback function for when the item is clicked\\n   */\\n  onClick: PropTypes.func,\\n\\n  /**\\n   * A string representation of the width in px, limited to:\\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\\n   */\\n  menuWidth: PropTypes.oneOf(Object.keys(Menu.Opts.widths)),\\n};\\n\\nconst contextTypes = {\\n  isCollapsibleGroupItem: PropTypes.bool,\\n  isCollapsibleMenuItem: PropTypes.bool,\\n};\\n\\nconst defaultProps = {\\n  isSelected: false,\\n  isReversed: false,\\n  shouldCloseOnClick: true,\\n  isIconOnly: false,\\n};\\n\\nclass CollapsibleMenuViewItem extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.setButtonNode = this.setButtonNode.bind(this);\\n    this.getButtonNode = this.getButtonNode.bind(this);\\n  }\\n\\n  setButtonNode(node) {\\n    this.buttonNode = node;\\n  }\\n\\n  getButtonNode() {\\n    return this.buttonNode;\\n  }\\n\\n  render() {\\n    const {\\n      icon,\\n      isIconOnly,\\n      isReversed,\\n      text,\\n      isSelected,\\n      isDisabled,\\n      subMenuItems,\\n      shouldCloseOnClick,\\n      boundingRef,\\n      menuWidth,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isCollapsibleGroupItem, isCollapsibleMenuItem } = this.context;\\n    const attributes = Object.assign({}, customProps);\\n    let item;\\n\\n    if (isCollapsibleMenuItem) {\\n      item = (\\n        <Menu.Item\\n          {...attributes}\\n          text={text}\\n          isSelected={isSelected && isCollapsibleGroupItem}\\n          isDisabled={isDisabled}\\n          subMenuItems={subMenuItems}\\n        />\\n      );\\n    } else if (isCollapsibleGroupItem) {\\n      item = (\\n        <ButtonGroup.Button\\n          {...attributes}\\n          icon={icon}\\n          text={text}\\n          isDisabled={isDisabled}\\n        />\\n      );\\n    } else if (subMenuItems && subMenuItems.length > 0) {\\n      item = (\\n        <Menu\\n          contentWidth={menuWidth}\\n          boundingRef={boundingRef}\\n          button={(\\n            <Button\\n              {...attributes}\\n              icon={icon}\\n              text={text}\\n              isReversed={isReversed}\\n              isDisabled={isDisabled}\\n              onClick={this.handleButtonClick}\\n              isIconOnly={isIconOnly}\\n            />\\n)}\\n        >\\n          {subMenuItems}\\n        </Menu>\\n      );\\n    } else {\\n      item = (\\n        <div className={cx('face-up-item')}>\\n          <Button\\n            {...attributes}\\n            icon={icon}\\n            text={text}\\n            isReversed={isReversed}\\n            isDisabled={isDisabled}\\n            isIconOnly={isIconOnly}\\n          />\\n        </div>\\n      );\\n    }\\n\\n    return item;\\n  }\\n}\\n\\nCollapsibleMenuViewItem.propTypes = propTypes;\\nCollapsibleMenuViewItem.defaultProps = defaultProps;\\nCollapsibleMenuViewItem.contextTypes = contextTypes;\\nCollapsibleMenuViewItem.Opts = {\\n  widths: Menu.Opts.widths,\\n};\\n\\nexport default CollapsibleMenuViewItem;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport ButtonGroup from 'terra-button-group';\\nimport List from 'terra-list';\\nimport Menu from './_CollapsibleMenu';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Callback function that is called when the group's selection state changes\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   * CollapsibleMenuView.Items to be grouped together\\n   */\\n  children: PropTypes.node.isRequired,\\n  /**\\n   * A list of keys of the CollapsibleMenuView.Items that should be selected.\\n   */\\n  selectedKeys: PropTypes.arrayOf(PropTypes.string),\\n};\\n\\nconst defaultProps = {\\n  selectedKeys: [],\\n};\\n\\nconst childContextTypes = {\\n  isCollapsibleGroupItem: PropTypes.bool,\\n};\\n\\nconst contextTypes = {\\n  isCollapsibleMenuItem: PropTypes.bool,\\n};\\n\\n\\nclass CollapsibleMenuViewItemGroup extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleOnChange = this.handleOnChange.bind(this);\\n  }\\n\\n  getChildContext() {\\n    return { isCollapsibleGroupItem: true };\\n  }\\n\\n  handleOnChange(event, selectedIndex) {\\n    if (this.props.onChange) {\\n      let selectedKey = selectedIndex;\\n      React.Children.forEach(this.props.children, (child, index) => {\\n        if (selectedIndex === index) {\\n          selectedKey = child.key;\\n        }\\n      });\\n\\n      this.props.onChange(event, selectedKey);\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      children,\\n      onChange,\\n      selectedKeys,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isCollapsibleMenuItem } = this.context;\\n\\n    if (isCollapsibleMenuItem && selectedKeys.length) {\\n      return (\\n        <li role=\\\"none\\\">\\n          <Menu.ItemGroup {...customProps} onChange={this.handleOnChange}>\\n            {children}\\n          </Menu.ItemGroup>\\n        </li>\\n      );\\n    } if (isCollapsibleMenuItem) {\\n      return (\\n        <li role=\\\"none\\\">\\n          <List {...customProps} role=\\\"listbox\\\">\\n            {children}\\n          </List>\\n        </li>\\n      );\\n    }\\n\\n    const buttonGroupClassNames = cx([\\n      'face-up-item',\\n      customProps.className,\\n    ]);\\n\\n    return (\\n      <ButtonGroup {...customProps} onChange={onChange} className={buttonGroupClassNames} selectedKeys={selectedKeys}>\\n        {children}\\n      </ButtonGroup>\\n    );\\n  }\\n}\\n\\nCollapsibleMenuViewItemGroup.propTypes = propTypes;\\nCollapsibleMenuViewItemGroup.defaultProps = defaultProps;\\nCollapsibleMenuViewItemGroup.childContextTypes = childContextTypes;\\nCollapsibleMenuViewItemGroup.contextTypes = contextTypes;\\n\\nexport default CollapsibleMenuViewItemGroup;\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport classNames from 'classnames/bind';\\nimport Checkbox from 'terra-form-checkbox';\\nimport Menu from './_CollapsibleMenu';\\nimport styles from './CollapsibleMenuView.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Sets the item's text\\n   */\\n  text: PropTypes.string.isRequired,\\n  /**\\n   * Indicates if the item is selected.\\n   */\\n  isSelected: PropTypes.bool,\\n  /**\\n   * Callback function for when selection state changes. Is called with event and isSelected parameters\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   *  Indicates that the toggle should be selectable\\n   */\\n  isSelectable: PropTypes.bool,\\n  /**\\n   * Indicates if the toggle should be disabled.\\n   */\\n  isDisabled: PropTypes.bool,\\n  /**\\n   * Indicates that clicking on this item while displayed inside a menu should close the menu\\n   */\\n  shouldCloseOnClick: PropTypes.bool,\\n};\\n\\nconst contextTypes = {\\n  isCollapsibleMenuItem: PropTypes.bool,\\n};\\n\\nconst defaultProps = {\\n  isSelected: false,\\n  isSelectable: true,\\n  shouldCloseOnClick: true,\\n};\\n\\nclass CollapsibleMenuViewToggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.wrappedOnChange = this.wrappedOnChange.bind(this);\\n  }\\n\\n\\n  // Wrapping onChange event so that the same parameters will be given when the display is a checkbox and a menu.item\\n  wrappedOnChange(event) {\\n    if (this.props.onChange) {\\n      this.props.onChange(event, event.target.checked);\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      text,\\n      isSelected,\\n      isSelectable,\\n      isDisabled,\\n      onChange,\\n      shouldCloseOnClick,\\n      ...customProps\\n    } = this.props;\\n\\n    const { isCollapsibleMenuItem } = this.context;\\n    const controllClassName = cx([\\n      'control',\\n      { 'is-disabled': isDisabled || !isSelectable },\\n      customProps.className,\\n    ]);\\n\\n    if (isCollapsibleMenuItem) {\\n      return (\\n        <Menu.Item\\n          {...customProps}\\n          text={text}\\n          isSelected={isSelected}\\n          isSelectable={isSelectable}\\n          isDisabled={isDisabled}\\n          onChange={onChange}\\n        />\\n      );\\n    }\\n\\n    return (\\n      <div className={cx(['face-up-item'])}>\\n        <Checkbox\\n          {...customProps}\\n          className={controllClassName}\\n          labelText={text}\\n          defaultChecked={isSelected}\\n          onChange={this.wrappedOnChange}\\n          disabled={isDisabled || !isSelectable}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nCollapsibleMenuViewToggle.propTypes = propTypes;\\nCollapsibleMenuViewToggle.defaultProps = defaultProps;\\nCollapsibleMenuViewToggle.contextTypes = contextTypes;\\n\\nexport default CollapsibleMenuViewToggle;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IconTable = _interopRequireDefault(require(\"terra-icon/lib/icon/IconTable\"));\n\nvar _IconFlowsheet = _interopRequireDefault(require(\"terra-icon/lib/icon/IconFlowsheet\"));\n\nvar _IconVisualization = _interopRequireDefault(require(\"terra-icon/lib/icon/IconVisualization\"));\n\nvar _IconSend = _interopRequireDefault(require(\"terra-icon/lib/icon/IconSend\"));\n\nvar _IconPrinter = _interopRequireDefault(require(\"terra-icon/lib/icon/IconPrinter\"));\n\nvar _IconFolder = _interopRequireDefault(require(\"terra-icon/lib/icon/IconFolder\"));\n\nvar _IconTrash = _interopRequireDefault(require(\"terra-icon/lib/icon/IconTrash\"));\n\nvar _CollapsibleMenuView = _interopRequireDefault(require(\"terra-collapsible-menu-view/lib/CollapsibleMenuView\"));\n\n// eslint-disable-next-line import/no-unresolved, import/extensions\nvar CollapsibleMenuViewDemo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenuViewDemo, _React$Component);\n\n  function CollapsibleMenuViewDemo(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenuViewDemo);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenuViewDemo).call(this, props));\n    _this.handleDisplayTypeChange = _this.handleDisplayTypeChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleToggleOneOnChange = _this.handleToggleOneOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleToggleTwoOnChange = _this.handleToggleTwoOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.state = {\n      toggle1Selection: false,\n      toggle2Selection: false,\n      displayType: 'tableView'\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollapsibleMenuViewDemo, [{\n    key: \"handleToggleOneOnChange\",\n    value: function handleToggleOneOnChange(event, isSelected) {\n      this.setState({\n        toggle1Selection: isSelected\n      });\n    }\n  }, {\n    key: \"handleToggleTwoOnChange\",\n    value: function handleToggleTwoOnChange(event, isSelected) {\n      this.setState({\n        toggle2Selection: isSelected\n      });\n    }\n  }, {\n    key: \"handleDisplayTypeChange\",\n    value: function handleDisplayTypeChange(event, selectedKey) {\n      this.setState({\n        displayType: selectedKey\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_CollapsibleMenuView.default, null, _react.default.createElement(_CollapsibleMenuView.default.Toggle, {\n        text: \"Toggle Item 1\",\n        key: \"toggle1\",\n        shouldCloseOnClick: false,\n        onChange: this.handleToggleOneOnChange,\n        isSelected: this.state.toggle1Selection,\n        isSelectable: false\n      }), _react.default.createElement(_CollapsibleMenuView.default.Toggle, {\n        text: \"Toggle Item 2\",\n        key: \"toggle2\",\n        shouldCloseOnClick: false,\n        onChange: this.handleToggleTwoOnChange,\n        isSelected: this.state.toggle2Selection,\n        isDisabled: true\n      }), _react.default.createElement(_CollapsibleMenuView.default.Divider, {\n        key: \"Divider1\"\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        text: \"Menu Button 1\",\n        key: \"MenuButton1\",\n        shouldCloseOnClick: false,\n        subMenuItems: [_react.default.createElement(_CollapsibleMenuView.default.Item, {\n          text: \"Default Item 1\",\n          key: \"defaultItem1\"\n        }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n          text: \"Default Item 2\",\n          key: \"defaultItem2\"\n        })]\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        text: \"Menu Button 2\",\n        key: \"MenuButton 2\",\n        isDisabled: true,\n        shouldCloseOnClick: false,\n        subMenuItems: [_react.default.createElement(_CollapsibleMenuView.default.Item, {\n          text: \"Default Item 1\",\n          key: \"defaultItem1\"\n        }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n          text: \"Default Item 2\",\n          key: \"defaultItem2\",\n          isDisabled: true\n        })]\n      }), _react.default.createElement(_CollapsibleMenuView.default.Divider, {\n        key: \"Divider2\"\n      }), _react.default.createElement(_CollapsibleMenuView.default.ItemGroup, {\n        key: \"ViewTypeSelection\",\n        selectedKeys: [this.state.displayType],\n        onChange: this.handleDisplayTypeChange\n      }, _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconTable.default, null),\n        text: \"Table View\",\n        key: \"tableView\",\n        isIconOnly: true,\n        shouldCloseOnClick: false,\n        isSelected: this.state.displayType === 'tableView'\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconFlowsheet.default, null),\n        text: \"Expanded View\",\n        key: \"expandedView\",\n        isIconOnly: true,\n        shouldCloseOnClick: false,\n        isSelected: this.state.displayType === 'expandedView'\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconVisualization.default, null),\n        text: \"Trending View\",\n        key: \"trendingView\",\n        isIconOnly: true,\n        shouldCloseOnClick: false,\n        isSelected: this.state.displayType === 'trendingView',\n        isDisabled: true\n      })), _react.default.createElement(_CollapsibleMenuView.default.Divider, {\n        key: \"Divider3\"\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconSend.default, null),\n        text: \"Send Message\",\n        key: \"send\",\n        isIconOnly: true\n      }), _react.default.createElement(_CollapsibleMenuView.default.ItemGroup, {\n        key: \"messageActionGroup\"\n      }, _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconPrinter.default, null),\n        text: \"Print Message\",\n        key: \"print\",\n        isIconOnly: true\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconFolder.default, null),\n        text: \"Move Message to Folder...\",\n        key: \"move\",\n        isIconOnly: true,\n        isDisabled: true\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        icon: _react.default.createElement(_IconTrash.default, null),\n        text: \"Trash Message\",\n        key: \"trash\",\n        isIconOnly: true\n      })), _react.default.createElement(_CollapsibleMenuView.default.Divider, {\n        key: \"Divider4\"\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        text: \"Button 1\",\n        key: \"button1\"\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        text: \"Button 2\",\n        key: \"button2\",\n        isDisabled: true\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        text: \"Button 3\",\n        key: \"button3\"\n      }), _react.default.createElement(_CollapsibleMenuView.default.Item, {\n        text: \"Button 4\",\n        key: \"button4\"\n      }));\n    }\n  }]);\n  return CollapsibleMenuViewDemo;\n}(_react.default.Component);\n\nvar _default = CollapsibleMenuViewDemo;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _CollapsibleMenuViewItem = _interopRequireDefault(require(\"./CollapsibleMenuViewItem\"));\n\nvar _CollapsibleMenuViewItemGroup = _interopRequireDefault(require(\"./CollapsibleMenuViewItemGroup\"));\n\nvar _CollapsibleMenuViewToggle = _interopRequireDefault(require(\"./CollapsibleMenuViewToggle\"));\n\nvar _CollapsibleMenuViewDivider = _interopRequireDefault(require(\"./CollapsibleMenuViewDivider\"));\n\nvar _CollapsibleMenuViewModule = _interopRequireDefault(require(\"./CollapsibleMenuView.module.scss\"));\n\nvar cx = _bind.default.bind(_CollapsibleMenuViewModule.default);\n\nvar propTypes = {\n  /**\n   * Item/ItemGroup/Divider elements to display in the view. Items that will fit in the space available will\n   * display face-up the remainder will be rolled into a menu\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * A string representation of the width in px, limited to:\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\n   */\n  menuWidth: _propTypes.default.oneOf(Object.keys(_CollapsibleMenuViewItem.default.Opts.widths)),\n\n  /**\n   * Bounding container for the menu, will use window if no value provided.\n   */\n  boundingRef: _propTypes.default.func\n};\nvar contextTypes = {\n  /* eslint-disable consistent-return */\n  intl: function intl(context) {\n    if (context.intl === undefined) {\n      return new Error('Component is internationalized, and must be wrapped in terra-base');\n    }\n  }\n};\n\nvar CollapsibleMenuView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenuView, _React$Component);\n\n  function CollapsibleMenuView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenuView);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenuView).call(this, props));\n    _this.setContainer = _this.setContainer.bind((0, _assertThisInitialized2.default)(_this));\n    _this.setMenuButton = _this.setMenuButton.bind((0, _assertThisInitialized2.default)(_this));\n    _this.resetCache = _this.resetCache.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleResize = _this.handleResize.bind((0, _assertThisInitialized2.default)(_this));\n\n    _this.resetCache();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollapsibleMenuView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.resizeObserver = new _resizeObserverPolyfill.default(function (entries) {\n        _this2.contentWidth = entries[0].contentRect.width;\n\n        if (!_this2.isCalculating) {\n          _this2.animationFrameID = window.requestAnimationFrame(function () {\n            // Resetting the cache so that all elements will be rendered face-up for width calculations\n            _this2.resetCache();\n\n            _this2.forceUpdate();\n          });\n        }\n      });\n      this.handleResize(this.contentWidth);\n      this.resizeObserver.observe(this.container);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.isCalculating) {\n        this.isCalculating = false;\n        this.handleResize(this.contentWidth);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.cancelAnimationFrame(this.animationFrameID);\n      this.resizeObserver.disconnect(this.container);\n      this.container = null;\n    }\n  }, {\n    key: \"setContainer\",\n    value: function setContainer(node) {\n      if (node === null) {\n        return;\n      } // Ref callbacks happen on mount and unmount, element will be null on unmount\n\n\n      this.container = node;\n    }\n  }, {\n    key: \"setMenuButton\",\n    value: function setMenuButton(node) {\n      if (node === null) {\n        return;\n      }\n\n      this.menuButton = node;\n    }\n  }, {\n    key: \"resetCache\",\n    value: function resetCache() {\n      this.animationFrameID = null;\n      this.hiddenStartIndex = -1;\n      this.isCalculating = true;\n      this.menuHidden = false;\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize(width) {\n      var menuButtonWidth = this.menuButton.getBoundingClientRect().width;\n      var availableWidth = width - menuButtonWidth;\n      var hiddenStartIndex = -1;\n      var calcWidth = 0;\n      var menuHidden = true;\n\n      for (var i = 0; i < _react.default.Children.count(this.props.children); i += 1) {\n        var child = this.container.children[i];\n        var childWidth = child.getBoundingClientRect().width;\n        calcWidth += childWidth;\n\n        if (calcWidth > availableWidth) {\n          // If last child fits in the available space, leave it face up\n          if (i === this.props.children.length - 1 && calcWidth <= width) {\n            break;\n          }\n\n          hiddenStartIndex = i;\n          menuHidden = false;\n          break;\n        }\n      }\n\n      if (this.menuHidden !== menuHidden || this.hiddenStartIndex !== hiddenStartIndex) {\n        this.menuHidden = menuHidden;\n        this.hiddenStartIndex = hiddenStartIndex;\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          boundingRef = _this$props.boundingRef,\n          menuWidth = _this$props.menuWidth,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"boundingRef\", \"menuWidth\"]);\n      var intl = this.context.intl;\n      var ellipsesText = intl.formatMessage({\n        id: 'Terra.collapsibleMenuView.more'\n      });\n\n      var visibleChildren = _react.default.Children.toArray(children);\n\n      var hiddenChildren = null;\n\n      if (this.hiddenStartIndex >= 0) {\n        hiddenChildren = visibleChildren.splice(this.hiddenStartIndex);\n      }\n\n      var collapsibleMenuViewClassName = cx(['collapsible-menu-view', {\n        'is-calculating': this.isCalculating\n      }, customProps.className]);\n      var menuButtonClassName = cx(['menu-button', {\n        hidden: this.menuHidden\n      }]);\n      return _react.default.createElement(\"div\", (0, _extends2.default)({}, customProps, {\n        className: collapsibleMenuViewClassName,\n        ref: this.setContainer\n      }), visibleChildren, _react.default.createElement(\"div\", {\n        className: menuButtonClassName,\n        ref: this.setMenuButton\n      }, _react.default.createElement(_CollapsibleMenuViewItem.default, {\n        \"data-collapsible-menu-toggle\": true,\n        icon: _react.default.createElement(\"span\", {\n          className: cx('menu-button-icon')\n        }),\n        subMenuItems: hiddenChildren,\n        boundingRef: boundingRef,\n        menuWidth: menuWidth,\n        isIconOnly: true,\n        text: ellipsesText\n      })));\n    }\n  }]);\n  return CollapsibleMenuView;\n}(_react.default.Component);\n\nCollapsibleMenuView.Item = _CollapsibleMenuViewItem.default;\nCollapsibleMenuView.ItemGroup = _CollapsibleMenuViewItemGroup.default;\nCollapsibleMenuView.Toggle = _CollapsibleMenuViewToggle.default;\nCollapsibleMenuView.Divider = _CollapsibleMenuViewDivider.default;\nCollapsibleMenuView.propTypes = propTypes;\nCollapsibleMenuView.contextTypes = contextTypes;\nvar _default = CollapsibleMenuView;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraButtonGroup = _interopRequireDefault(require(\"terra-button-group\"));\n\nvar _CollapsibleMenu = _interopRequireDefault(require(\"./_CollapsibleMenu\"));\n\nvar _CollapsibleMenuViewModule = _interopRequireDefault(require(\"./CollapsibleMenuView.module.scss\"));\n\nvar cx = _bind.default.bind(_CollapsibleMenuViewModule.default);\n\nvar propTypes = {\n  /**\n   * Sets the item's text\n   */\n  text: _propTypes.default.string.isRequired,\n\n  /**\n   * Bounding container for the menu, will use window if no value provided.\n   */\n  boundingRef: _propTypes.default.func,\n\n  /**\n  * An optional icon. Nested inline with the text when provided\n  */\n  icon: _propTypes.default.element,\n\n  /**\n   * Indicates if only the icon should display when item is face-up. (Text should still be given to be displayed when item is in the menu)\n   */\n  isIconOnly: _propTypes.default.bool,\n\n  /**\n  * Reverses the position of the icon and text\n  */\n  isReversed: _propTypes.default.bool,\n\n  /**\n   * Indicates if the item start as selected when placed in a button group\n   */\n  isSelected: _propTypes.default.bool,\n\n  /**\n   * Indicates if the item should be disabled.\n   */\n  isDisabled: _propTypes.default.bool,\n\n  /**\n   * Indicates that clicking on this item while displayed inside a menu should close the menu.\n   */\n  shouldCloseOnClick: _propTypes.default.bool,\n\n  /**\n   * List of Menu.Items to display in a submenu when this item is selected.\n   */\n  subMenuItems: _propTypes.default.arrayOf(_propTypes.default.element),\n\n  /**\n   * Callback function for when the item is clicked\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * A string representation of the width in px, limited to:\n   * 160, 240, 320, 640, 960, 1280, 1760, or auto\n   */\n  menuWidth: _propTypes.default.oneOf(Object.keys(_CollapsibleMenu.default.Opts.widths))\n};\nvar contextTypes = {\n  isCollapsibleGroupItem: _propTypes.default.bool,\n  isCollapsibleMenuItem: _propTypes.default.bool\n};\nvar defaultProps = {\n  isSelected: false,\n  isReversed: false,\n  shouldCloseOnClick: true,\n  isIconOnly: false\n};\n\nvar CollapsibleMenuViewItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenuViewItem, _React$Component);\n\n  function CollapsibleMenuViewItem(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenuViewItem);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenuViewItem).call(this, props));\n    _this.setButtonNode = _this.setButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getButtonNode = _this.getButtonNode.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollapsibleMenuViewItem, [{\n    key: \"setButtonNode\",\n    value: function setButtonNode(node) {\n      this.buttonNode = node;\n    }\n  }, {\n    key: \"getButtonNode\",\n    value: function getButtonNode() {\n      return this.buttonNode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          isIconOnly = _this$props.isIconOnly,\n          isReversed = _this$props.isReversed,\n          text = _this$props.text,\n          isSelected = _this$props.isSelected,\n          isDisabled = _this$props.isDisabled,\n          subMenuItems = _this$props.subMenuItems,\n          shouldCloseOnClick = _this$props.shouldCloseOnClick,\n          boundingRef = _this$props.boundingRef,\n          menuWidth = _this$props.menuWidth,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"icon\", \"isIconOnly\", \"isReversed\", \"text\", \"isSelected\", \"isDisabled\", \"subMenuItems\", \"shouldCloseOnClick\", \"boundingRef\", \"menuWidth\"]);\n      var _this$context = this.context,\n          isCollapsibleGroupItem = _this$context.isCollapsibleGroupItem,\n          isCollapsibleMenuItem = _this$context.isCollapsibleMenuItem;\n      var attributes = (0, _extends2.default)({}, customProps);\n      var item;\n\n      if (isCollapsibleMenuItem) {\n        item = _react.default.createElement(_CollapsibleMenu.default.Item, (0, _extends2.default)({}, attributes, {\n          text: text,\n          isSelected: isSelected && isCollapsibleGroupItem,\n          isDisabled: isDisabled,\n          subMenuItems: subMenuItems\n        }));\n      } else if (isCollapsibleGroupItem) {\n        item = _react.default.createElement(_terraButtonGroup.default.Button, (0, _extends2.default)({}, attributes, {\n          icon: icon,\n          text: text,\n          isDisabled: isDisabled\n        }));\n      } else if (subMenuItems && subMenuItems.length > 0) {\n        item = _react.default.createElement(_CollapsibleMenu.default, {\n          contentWidth: menuWidth,\n          boundingRef: boundingRef,\n          button: _react.default.createElement(_terraButton.default, (0, _extends2.default)({}, attributes, {\n            icon: icon,\n            text: text,\n            isReversed: isReversed,\n            isDisabled: isDisabled,\n            onClick: this.handleButtonClick,\n            isIconOnly: isIconOnly\n          }))\n        }, subMenuItems);\n      } else {\n        item = _react.default.createElement(\"div\", {\n          className: cx('face-up-item')\n        }, _react.default.createElement(_terraButton.default, (0, _extends2.default)({}, attributes, {\n          icon: icon,\n          text: text,\n          isReversed: isReversed,\n          isDisabled: isDisabled,\n          isIconOnly: isIconOnly\n        })));\n      }\n\n      return item;\n    }\n  }]);\n  return CollapsibleMenuViewItem;\n}(_react.default.Component);\n\nCollapsibleMenuViewItem.propTypes = propTypes;\nCollapsibleMenuViewItem.defaultProps = defaultProps;\nCollapsibleMenuViewItem.contextTypes = contextTypes;\nCollapsibleMenuViewItem.Opts = {\n  widths: _CollapsibleMenu.default.Opts.widths\n};\nvar _default = CollapsibleMenuViewItem;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraButtonGroup = _interopRequireDefault(require(\"terra-button-group\"));\n\nvar _terraList = _interopRequireDefault(require(\"terra-list\"));\n\nvar _CollapsibleMenu = _interopRequireDefault(require(\"./_CollapsibleMenu\"));\n\nvar _CollapsibleMenuViewModule = _interopRequireDefault(require(\"./CollapsibleMenuView.module.scss\"));\n\nvar cx = _bind.default.bind(_CollapsibleMenuViewModule.default);\n\nvar propTypes = {\n  /**\n   * Callback function that is called when the group's selection state changes\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * CollapsibleMenuView.Items to be grouped together\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * A list of keys of the CollapsibleMenuView.Items that should be selected.\n   */\n  selectedKeys: _propTypes.default.arrayOf(_propTypes.default.string)\n};\nvar defaultProps = {\n  selectedKeys: []\n};\nvar childContextTypes = {\n  isCollapsibleGroupItem: _propTypes.default.bool\n};\nvar contextTypes = {\n  isCollapsibleMenuItem: _propTypes.default.bool\n};\n\nvar CollapsibleMenuViewItemGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenuViewItemGroup, _React$Component);\n\n  function CollapsibleMenuViewItemGroup(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenuViewItemGroup);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenuViewItemGroup).call(this, props));\n    _this.handleOnChange = _this.handleOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollapsibleMenuViewItemGroup, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        isCollapsibleGroupItem: true\n      };\n    }\n  }, {\n    key: \"handleOnChange\",\n    value: function handleOnChange(event, selectedIndex) {\n      if (this.props.onChange) {\n        var selectedKey = selectedIndex;\n\n        _react.default.Children.forEach(this.props.children, function (child, index) {\n          if (selectedIndex === index) {\n            selectedKey = child.key;\n          }\n        });\n\n        this.props.onChange(event, selectedKey);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          onChange = _this$props.onChange,\n          selectedKeys = _this$props.selectedKeys,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"onChange\", \"selectedKeys\"]);\n      var isCollapsibleMenuItem = this.context.isCollapsibleMenuItem;\n\n      if (isCollapsibleMenuItem && selectedKeys.length) {\n        return _react.default.createElement(\"li\", {\n          role: \"none\"\n        }, _react.default.createElement(_CollapsibleMenu.default.ItemGroup, (0, _extends2.default)({}, customProps, {\n          onChange: this.handleOnChange\n        }), children));\n      }\n\n      if (isCollapsibleMenuItem) {\n        return _react.default.createElement(\"li\", {\n          role: \"none\"\n        }, _react.default.createElement(_terraList.default, (0, _extends2.default)({}, customProps, {\n          role: \"listbox\"\n        }), children));\n      }\n\n      var buttonGroupClassNames = cx(['face-up-item', customProps.className]);\n      return _react.default.createElement(_terraButtonGroup.default, (0, _extends2.default)({}, customProps, {\n        onChange: onChange,\n        className: buttonGroupClassNames,\n        selectedKeys: selectedKeys\n      }), children);\n    }\n  }]);\n  return CollapsibleMenuViewItemGroup;\n}(_react.default.Component);\n\nCollapsibleMenuViewItemGroup.propTypes = propTypes;\nCollapsibleMenuViewItemGroup.defaultProps = defaultProps;\nCollapsibleMenuViewItemGroup.childContextTypes = childContextTypes;\nCollapsibleMenuViewItemGroup.contextTypes = contextTypes;\nvar _default = CollapsibleMenuViewItemGroup;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraFormCheckbox = _interopRequireDefault(require(\"terra-form-checkbox\"));\n\nvar _CollapsibleMenu = _interopRequireDefault(require(\"./_CollapsibleMenu\"));\n\nvar _CollapsibleMenuViewModule = _interopRequireDefault(require(\"./CollapsibleMenuView.module.scss\"));\n\nvar cx = _bind.default.bind(_CollapsibleMenuViewModule.default);\n\nvar propTypes = {\n  /**\n   * Sets the item's text\n   */\n  text: _propTypes.default.string.isRequired,\n\n  /**\n   * Indicates if the item is selected.\n   */\n  isSelected: _propTypes.default.bool,\n\n  /**\n   * Callback function for when selection state changes. Is called with event and isSelected parameters\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   *  Indicates that the toggle should be selectable\n   */\n  isSelectable: _propTypes.default.bool,\n\n  /**\n   * Indicates if the toggle should be disabled.\n   */\n  isDisabled: _propTypes.default.bool,\n\n  /**\n   * Indicates that clicking on this item while displayed inside a menu should close the menu\n   */\n  shouldCloseOnClick: _propTypes.default.bool\n};\nvar contextTypes = {\n  isCollapsibleMenuItem: _propTypes.default.bool\n};\nvar defaultProps = {\n  isSelected: false,\n  isSelectable: true,\n  shouldCloseOnClick: true\n};\n\nvar CollapsibleMenuViewToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(CollapsibleMenuViewToggle, _React$Component);\n\n  function CollapsibleMenuViewToggle(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollapsibleMenuViewToggle);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollapsibleMenuViewToggle).call(this, props));\n    _this.wrappedOnChange = _this.wrappedOnChange.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  } // Wrapping onChange event so that the same parameters will be given when the display is a checkbox and a menu.item\n\n\n  (0, _createClass2.default)(CollapsibleMenuViewToggle, [{\n    key: \"wrappedOnChange\",\n    value: function wrappedOnChange(event) {\n      if (this.props.onChange) {\n        this.props.onChange(event, event.target.checked);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          isSelected = _this$props.isSelected,\n          isSelectable = _this$props.isSelectable,\n          isDisabled = _this$props.isDisabled,\n          onChange = _this$props.onChange,\n          shouldCloseOnClick = _this$props.shouldCloseOnClick,\n          customProps = (0, _objectWithoutProperties2.default)(_this$props, [\"text\", \"isSelected\", \"isSelectable\", \"isDisabled\", \"onChange\", \"shouldCloseOnClick\"]);\n      var isCollapsibleMenuItem = this.context.isCollapsibleMenuItem;\n      var controllClassName = cx(['control', {\n        'is-disabled': isDisabled || !isSelectable\n      }, customProps.className]);\n\n      if (isCollapsibleMenuItem) {\n        return _react.default.createElement(_CollapsibleMenu.default.Item, (0, _extends2.default)({}, customProps, {\n          text: text,\n          isSelected: isSelected,\n          isSelectable: isSelectable,\n          isDisabled: isDisabled,\n          onChange: onChange\n        }));\n      }\n\n      return _react.default.createElement(\"div\", {\n        className: cx(['face-up-item'])\n      }, _react.default.createElement(_terraFormCheckbox.default, (0, _extends2.default)({}, customProps, {\n        className: controllClassName,\n        labelText: text,\n        defaultChecked: isSelected,\n        onChange: this.wrappedOnChange,\n        disabled: isDisabled || !isSelectable\n      })));\n    }\n  }]);\n  return CollapsibleMenuViewToggle;\n}(_react.default.Component);\n\nCollapsibleMenuViewToggle.propTypes = propTypes;\nCollapsibleMenuViewToggle.defaultProps = defaultProps;\nCollapsibleMenuViewToggle.contextTypes = contextTypes;\nvar _default = CollapsibleMenuViewToggle;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraMenu = _interopRequireDefault(require(\"terra-menu\"));\n\nvar _CollapsibleMenuViewModule = _interopRequireDefault(require(\"./CollapsibleMenuView.module.scss\"));\n\nvar cx = _bind.default.bind(_CollapsibleMenuViewModule.default);\n\nvar contextTypes = {\n  isCollapsibleMenuItem: _propTypes.default.bool\n};\n\nvar CollapsibleMenuViewDivider = function CollapsibleMenuViewDivider(props, _ref) {\n  var isCollapsibleMenuItem = _ref.isCollapsibleMenuItem;\n\n  if (isCollapsibleMenuItem) {\n    return _react.default.createElement(_terraMenu.default.Divider, null);\n  }\n\n  return _react.default.createElement(\"div\", {\n    className: cx(['divider', 'face-up-item'])\n  });\n};\n\nCollapsibleMenuViewDivider.contextTypes = contextTypes;\nvar _default = CollapsibleMenuViewDivider;\nexports.default = _default;","export default \"import React from 'react';\\nimport IconTable from 'terra-icon/lib/icon/IconTable';\\nimport IconFlowsheet from 'terra-icon/lib/icon/IconFlowsheet';\\nimport IconVisualization from 'terra-icon/lib/icon/IconVisualization';\\nimport IconSend from 'terra-icon/lib/icon/IconSend';\\nimport IconPrinter from 'terra-icon/lib/icon/IconPrinter';\\nimport IconFolder from 'terra-icon/lib/icon/IconFolder';\\nimport IconTrash from 'terra-icon/lib/icon/IconTrash';\\n// eslint-disable-next-line import/no-unresolved, import/extensions\\nimport CollapsibleMenuView from 'terra-collapsible-menu-view/lib/CollapsibleMenuView';\\n\\nclass CollapsibleMenuViewDemo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleDisplayTypeChange = this.handleDisplayTypeChange.bind(this);\\n    this.handleToggleOneOnChange = this.handleToggleOneOnChange.bind(this);\\n    this.handleToggleTwoOnChange = this.handleToggleTwoOnChange.bind(this);\\n    this.state = {\\n      toggle1Selection: false,\\n      toggle2Selection: false,\\n      displayType: 'tableView',\\n    };\\n  }\\n\\n  handleToggleOneOnChange(event, isSelected) {\\n    this.setState({ toggle1Selection: isSelected });\\n  }\\n\\n  handleToggleTwoOnChange(event, isSelected) {\\n    this.setState({ toggle2Selection: isSelected });\\n  }\\n\\n  handleDisplayTypeChange(event, selectedKey) {\\n    this.setState({ displayType: selectedKey });\\n  }\\n\\n  render() {\\n    return (\\n      <CollapsibleMenuView>\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 1\\\"\\n          key=\\\"toggle1\\\"\\n          shouldCloseOnClick={false}\\n          onChange={this.handleToggleOneOnChange}\\n          isSelected={this.state.toggle1Selection}\\n          isSelectable={false}\\n        />\\n        <CollapsibleMenuView.Toggle\\n          text=\\\"Toggle Item 2\\\"\\n          key=\\\"toggle2\\\"\\n          shouldCloseOnClick={false}\\n          onChange={this.handleToggleTwoOnChange}\\n          isSelected={this.state.toggle2Selection}\\n          isDisabled\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider1\\\" />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 1\\\"\\n          key=\\\"MenuButton1\\\"\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Item\\n          text=\\\"Menu Button 2\\\"\\n          key=\\\"MenuButton 2\\\"\\n          isDisabled\\n          shouldCloseOnClick={false}\\n          subMenuItems={[\\n            <CollapsibleMenuView.Item text=\\\"Default Item 1\\\" key=\\\"defaultItem1\\\" />,\\n            <CollapsibleMenuView.Item text=\\\"Default Item 2\\\" key=\\\"defaultItem2\\\" isDisabled />,\\n          ]}\\n        />\\n        <CollapsibleMenuView.Divider key=\\\"Divider2\\\" />\\n        <CollapsibleMenuView.ItemGroup key=\\\"ViewTypeSelection\\\" selectedKeys={[this.state.displayType]} onChange={this.handleDisplayTypeChange}>\\n          <CollapsibleMenuView.Item\\n            icon={<IconTable />}\\n            text=\\\"Table View\\\"\\n            key=\\\"tableView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'tableView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconFlowsheet />}\\n            text=\\\"Expanded View\\\"\\n            key=\\\"expandedView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'expandedView'}\\n          />\\n          <CollapsibleMenuView.Item\\n            icon={<IconVisualization />}\\n            text=\\\"Trending View\\\"\\n            key=\\\"trendingView\\\"\\n            isIconOnly\\n            shouldCloseOnClick={false}\\n            isSelected={this.state.displayType === 'trendingView'}\\n            isDisabled\\n          />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider3\\\" />\\n        <CollapsibleMenuView.Item icon={<IconSend />} text=\\\"Send Message\\\" key=\\\"send\\\" isIconOnly />\\n        <CollapsibleMenuView.ItemGroup key=\\\"messageActionGroup\\\">\\n          <CollapsibleMenuView.Item icon={<IconPrinter />} text=\\\"Print Message\\\" key=\\\"print\\\" isIconOnly />\\n          <CollapsibleMenuView.Item icon={<IconFolder />} text=\\\"Move Message to Folder...\\\" key=\\\"move\\\" isIconOnly isDisabled />\\n          <CollapsibleMenuView.Item icon={<IconTrash />} text=\\\"Trash Message\\\" key=\\\"trash\\\" isIconOnly />\\n        </CollapsibleMenuView.ItemGroup>\\n        <CollapsibleMenuView.Divider key=\\\"Divider4\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 1\\\" key=\\\"button1\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 2\\\" key=\\\"button2\\\" isDisabled />\\n        <CollapsibleMenuView.Item text=\\\"Button 3\\\" key=\\\"button3\\\" />\\n        <CollapsibleMenuView.Item text=\\\"Button 4\\\" key=\\\"button4\\\" />\\n      </CollapsibleMenuView>\\n    );\\n  }\\n}\\n\\nexport default CollapsibleMenuViewDemo;\\n\"","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _CollapsibleMenuView = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuView\"));\n\nvar _CollapsibleMenuViewItem = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuViewItem\"));\n\nvar _CollapsibleMenuViewItemGroup = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuViewItemGroup\"));\n\nvar _CollapsibleMenuViewToggle = _interopRequireDefault(require(\"!raw-loader!../../../../src/CollapsibleMenuViewToggle\"));\n\nvar _CollapsibleMenuViewDemo = _interopRequireDefault(require(\"../example/CollapsibleMenuViewDemo\"));\n\nvar _CollapsibleMenuViewDemo2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/CollapsibleMenuViewDemo\"));\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Example Files\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-framework/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'CollapsibleMenuView Example',\n      example: _react.default.createElement(_CollapsibleMenuViewDemo.default, null),\n      source: _CollapsibleMenuViewDemo2.default\n    }],\n    propsTables: [{\n      componentName: 'CollapsibleMenuView',\n      componentSrc: _CollapsibleMenuView.default\n    }, {\n      componentName: 'CollapsibleMenuView.Item',\n      componentSrc: _CollapsibleMenuViewItem.default\n    }, {\n      componentName: 'CollapsibleMenuView.ItemGroup',\n      componentSrc: _CollapsibleMenuViewItemGroup.default\n    }, {\n      componentName: 'CollapsibleMenuView.Toggle',\n      componentSrc: _CollapsibleMenuViewToggle.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _CheckboxModule = _interopRequireDefault(require(\"./Checkbox.module.scss\"));\n\nvar _CheckboxUtil = _interopRequireDefault(require(\"./CheckboxUtil\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar cx = _bind.default.bind(_CheckboxModule.default);\n\nvar propTypes = {\n  /**\n    * Whether or not the checkbox element is checked. Use this to generate a controlled Checkbox Element.\n    */\n  checked: _propTypes.default.bool,\n\n  /**\n    * The checked property of the Input element. Use this to generate an uncontrolled Checkbox Element.\n    */\n  defaultChecked: _propTypes.default.bool,\n\n  /**\n    * The id of the checkbox.\n    */\n  id: _propTypes.default.string,\n\n  /**\n    * Additional attributes for the input object.\n    */\n  // eslint-disable-next-line react/forbid-prop-types\n  inputAttrs: _propTypes.default.object,\n\n  /**\n    * Whether the checkbox element is disabled.\n    */\n  disabled: _propTypes.default.bool,\n\n  /**\n    * Whether the checkbox element is inline.\n    */\n  isInline: _propTypes.default.bool,\n\n  /**\n    * Whether the label is hidden.\n    */\n  isLabelHidden: _propTypes.default.bool,\n\n  /**\n    * Text of the label.\n    */\n  labelText: _propTypes.default.node.isRequired,\n\n  /**\n    * Additional attributes for the text object.\n    */\n  // eslint-disable-next-line react/forbid-prop-types\n  labelTextAttrs: _propTypes.default.object,\n\n  /**\n    * Name attribute of the input.\n    */\n  name: _propTypes.default.string,\n\n  /**\n   * Function to trigger when focus is lost from the checkbox.\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n    * Function to trigger when user clicks on the checkbox. Provide a function to create a controlled input.\n    */\n  onChange: _propTypes.default.func,\n\n  /**\n   *  Function to trigger when user focuses on the checkbox.\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n    * The value of the input element.\n    */\n  value: _propTypes.default.string\n};\nvar defaultProps = {\n  checked: undefined,\n  defaultChecked: undefined,\n  id: undefined,\n  inputAttrs: {},\n  disabled: false,\n  isInline: false,\n  isLabelHidden: false,\n  labelTextAttrs: {},\n  name: null,\n  onBlur: undefined,\n  onChange: undefined,\n  onFocus: undefined,\n  value: undefined\n};\n\nvar Checkbox = function Checkbox(_ref) {\n  var checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      inputAttrs = _ref.inputAttrs,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      isInline = _ref.isInline,\n      isLabelHidden = _ref.isLabelHidden,\n      labelText = _ref.labelText,\n      labelTextAttrs = _ref.labelTextAttrs,\n      name = _ref.name,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      value = _ref.value,\n      customProps = _objectWithoutProperties(_ref, [\"checked\", \"defaultChecked\", \"inputAttrs\", \"id\", \"disabled\", \"isInline\", \"isLabelHidden\", \"labelText\", \"labelTextAttrs\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"value\"]);\n\n  var controlInputAttrs = _extends({}, inputAttrs);\n\n  if (checked !== undefined) {\n    controlInputAttrs.checked = checked;\n  } else {\n    controlInputAttrs.defaultChecked = defaultChecked;\n  }\n\n  var checkboxClasses = cx(['checkbox', {\n    'is-inline': isInline\n  }, customProps.className]);\n  var labelClasses = cx(['label', {\n    'is-disabled': disabled\n  }, {\n    'is-mobile': _CheckboxUtil.default.isConsideredMobileDevice()\n  }, labelTextAttrs.className]);\n  var inputClasses = cx(['native-input', inputAttrs.className]);\n  var labelTextClasses = cx(['label-text', {\n    'is-hidden': isLabelHidden\n  }, {\n    'is-mobile': _CheckboxUtil.default.isConsideredMobileDevice()\n  }]);\n  var labelTextContainer = null;\n\n  if (isLabelHidden) {\n    controlInputAttrs['aria-label'] = labelText;\n    labelTextContainer = _react.default.createElement(\"span\", _extends({}, labelTextAttrs, {\n      className: labelTextClasses\n    }));\n  } else {\n    labelTextContainer = _react.default.createElement(\"span\", _extends({}, labelTextAttrs, {\n      className: labelTextClasses\n    }), labelText);\n  }\n\n  return _react.default.createElement(\"div\", _extends({}, customProps, {\n    className: checkboxClasses\n  }), _react.default.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, _react.default.createElement(\"input\", _extends({}, controlInputAttrs, {\n    type: \"checkbox\",\n    id: id,\n    disabled: disabled,\n    name: name,\n    value: value,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: inputClasses\n  })), labelTextContainer));\n};\n\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\nCheckbox.isCheckbox = true;\nvar _default = Checkbox;\nexports.default = _default;"],"sourceRoot":""}