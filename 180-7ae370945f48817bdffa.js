(window.webpackJsonp=window.webpackJsonp||[]).push([[180,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],{2649:function(e,t,n){"use strict";n.r(t),t.default="# Terra I18n\n\n## Getting Started\n\nThis component is not intended for direct usage by developers. It is recommended to use the `terra-base` component instead which acts as an abstraction around terra-i18n and react-intl's Intl Provider component. See [`terra-base documentation`](https://github.com/cerner/terra-core/tree/master/packages/terra-base) to get started.\n\nHowever, terra-i18n can be installed with [npmjs](https://www.npmjs.com):\n  - `npm install terra-i18n`\n  - `yarn add terra-i18n`\n\nThe terra-i18n package provides internationalization for React components by loading translations and locale data on demand and providing the translated messages to the component. It does this by utilizing the [`react-intl`](https://github.com/yahoo/react-intl) dependency to provide the formatted translation messages to the supplied React children. To enable this behavior, terra-i18n provides the `i18nLoader` and `I18nProvider` components.\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\n<details>\n<summary>View information on this component's peer dependencies.</summary>\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| react-intl | ^2.8.0 |\n\n\n</details>\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## i18nLoader\n\nThe `i18nLoader` component guarantees that the Intl polyfill, locale data and translation messages are loaded before the translation-needing component is rendered. _This loader should be utilized only once within an application, because all internationalization information is loaded into memory to remove the need to dynamically load locale data on the server._\n\nNote: the `i18nLoader` state object for the callback must contain the following keys to work properly:\n- `areTranslationsLoaded` - _boolean_\n- `locale` - _string_\n- `messages` - _key-value pairs such that the key is the message name and the value is the translation message_\n\n## I18nProvider\n\nThe `I18nProvider` component configures the react-intl's `IntlProvider` and supplies it with the translation-needing components such that the i18n context is accessible. Usually, one `I18nProvider` will wrap an application's root component such that the entire application is within the same configured i18n context, however it is possible to render nested `I18nProvider` components to provide different, or modified i18n context.\n\n### Supported Locales\n\n[You can view a list of locales supported by Terra UI here.](https://github.com/cerner/terra-aggregate-translations/blob/master/config/i18nSupportedLocales.js)\n\n### Non-Supported Locales\n\nIt is possible to add and load non-supported locales with `terra-i18n`, however one must ensure the locales are supported by `react-intl`, otherwise no locale-data will exist and loading the intl data will result in an error. Once confirmed that the locale is supported by `react-intl`, one is responsible for including the appropriate translations messages for each terra component used in your application, otherwise the translations will fail and `react-intl` will display the message name as the fallback.\n\n### Locale Fallback\n\nThe `i18nLoader` loads internationalized information from the translationLoader and intlLoader modules, both which utilize a locale fallback strategy. This implemented fallback strategy when loading a locale is:\n\n1. Try the regional locale (if applicable)\n2. Try the base locale\n3. Try the 'en' base locale\n4. Throw an error if 'en' is not provided\n\n**Note:** This fallback strategy is only applied when an aggregated translation file does not exist. For example if the 'es' locale is loaded and the translation for `Terra.button.close` is missing, `react-intl` will display the `Terra.button.close` message name, not the english translation, because locale data was only loaded for 'es'. The `terra-i18n` package does not support loading multiple locales at once. This ensures an application will never have a mix of 'es' and 'en' translations.\n\n\n## Component Features\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n* [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n* [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n* [react_on_rails Compatible](https://github.com/shakacode/react_on_rails/blob/8cb06ed35cb5c2c453bcc193282b4c091574c1b7/docs/basics/i18n.md#how-to-add-i18n)\n* [CND Compatible](https://github.com/webpack/docs/wiki/configuration#outputpublicpath)\n"},2650:function(e){e.exports=JSON.parse('{"_from":"terra-i18n@^4.0.0","_id":"terra-i18n@4.11.0","_inBundle":false,"_integrity":"sha512-8cEHqFlRDR9oe6B1qnC0dPw94c7ZFJ5Mh847p8eiDol3xL43OovQ8H7rkmvXIPDlPYJfCP78QTlMFw1YVkNb4A==","_location":"/terra-i18n","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-i18n@^4.0.0","name":"terra-i18n","escapedName":"terra-i18n","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/","/terra-base"],"_resolved":"https://registry.npmjs.org/terra-i18n/-/terra-i18n-4.11.0.tgz","_shasum":"e342b200e81fb33658aebd9808bdc479e6af843b","_spec":"terra-i18n@^4.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-core/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","intl":"^1.2.5","prop-types":"^15.5.8","terra-doc-template":"^2.15.0"},"deprecated":false,"description":"The terra-i18n package provides on-demand internationalization of React components.","gitHead":"0b893dc4a80250c0b485a5f205f2defde7c38ecf","homepage":"https://github.com/cerner/terra-core#readme","keywords":["Cerner","Terra","terra-i18n","I18n","UI"],"license":"Apache-2.0","main":"lib/I18n.js","name":"terra-i18n","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"4.11.0"}')},2651:function(e,t,n){e.exports={"example-description":"i18n-1-module__example-description___1KAc2","weighted-text":"i18n-1-module__weighted-text___2fFh_"}},2652:function(e,t,n){"use strict";n.r(t),t.default="/* eslint-disable react/forbid-prop-types */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\n\nconst propTypes = {\n  /**\n   * The component that will be wrapped by i18n provider.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The locale name.\n   */\n  locale: PropTypes.string.isRequired,\n  /**\n   * Translations messages object.\n   */\n  messages: PropTypes.object.isRequired,\n};\n\nconst I18nProvider = ({ children, locale, messages }) => (\n  <IntlProvider locale={locale} key={locale} messages={messages}>\n    <React.Fragment>\n      {children}\n    </React.Fragment>\n  </IntlProvider>\n);\n\nI18nProvider.propTypes = propTypes;\n\nexport default I18nProvider;\n"},2653:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a,r=(a=n(0))&&a.__esModule?a:{default:a},o=n(21),i=n(365);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var u=function(e){function t(e){var n,a,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a=this,(n=!(r=c(t).call(this,e))||"object"!==s(r)&&"function"!=typeof r?d(a):r).state={areTranslationsLoaded:!1,locale:"en-US",messages:{}},n.handleLocaleChange=n.handleLocaleChange.bind(d(n)),n}var n,a,u;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(t,r.default.Component),n=t,(a=[{key:"componentDidMount",value:function(){(0,i.i18nLoader)(this.state.locale,this.setState,this)}},{key:"handleLocaleChange",value:function(e){(0,i.i18nLoader)(e.target.value,this.setState,this)}},{key:"render",value:function(){return this.state.areTranslationsLoaded?r.default.createElement(i.I18nProvider,{locale:this.state.locale,messages:this.state.messages},r.default.createElement(o.FormattedMessage,{id:"Terra.ajax.error"}),r.default.createElement("label",{htmlFor:"locale"}," ","Current locale:",this.state.locale," "),r.default.createElement("select",{id:"locale",value:this.state.locale,onChange:this.handleLocaleChange},r.default.createElement("option",{value:"en"},"en"),r.default.createElement("option",{value:"en-GB"},"en-GB"),r.default.createElement("option",{value:"en-US"},"en-US"),r.default.createElement("option",{value:"de"},"de"),r.default.createElement("option",{value:"es"},"es"),r.default.createElement("option",{value:"fr"},"fr"),r.default.createElement("option",{value:"nl"},"nl"),r.default.createElement("option",{value:"pt"},"pt"),r.default.createElement("option",{value:"fi-FI"},"fi-FI"))):r.default.createElement("div",null)}}])&&l(n.prototype,a),u&&l(n,u),t}();t.default=function(){return r.default.createElement(u,null)}},3733:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=p(n(0)),r=p(n(911)),o=p(n(4)),i=p(n(2649)),s=n(2650),l=p(n(2651)),c=p(n(2652)),d=p(n(2653));function p(e){return e&&e.__esModule?e:{default:e}}var u=o.default.bind(l.default),m=function(){return a.default.createElement(r.default,{packageName:s.name,readme:i.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(s.name),examples:[{title:"I18nProvider Example",description:a.default.createElement("p",{className:u("example-description")},a.default.createElement("span",{className:u("weighted-text")},"Note:")," ","This is an example of a nested I18nProvider. The site overall is an example of using an application-level I18nProvider implemented through the terra-base component."),example:a.default.createElement(d.default,null)}],propsTables:[{componentName:"I18n Provider",componentSrc:c.default}]})};t.default=m},912:function(e,t){}}]);
//# sourceMappingURL=180-7ae370945f48817bdffa.js.map