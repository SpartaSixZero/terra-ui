{"version":3,"sources":["webpack:///./node_modules/final-form/dist/final-form.es.js","webpack:///./node_modules/react-final-form/dist/react-final-form.es.js"],"names":["toPath","key","length","Error","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","setIn","value","destroyArrays","setInRecursor","index","_extends2","_ref","_result2","_result","numKeys","Object","keys","map","numericKey","_result3","_array","result","array","concat","splice","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","valid","dirty","dirtySinceLastSubmit","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","clearAsyncValidationPromise","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","getValidators","validators","validator","push","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","asyncValidationPromiseKey","promise","runRecordLevelValidation","setError","errorOrPromise","runFieldLevelValidation","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromises","Promise","all","fieldState","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","every","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getFieldState","getRegisteredFields","getState","initialize","isValidationPaused","pauseValidation","registerField","fieldConfig","afterSubmit","beforeSubmit","getValidator","initialValue","defaultValue","sentFirstNotification","reset","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","find","resolvePromise","completeCalled","complete","resolve","subscribe","memoized","renderComponent","props","render","children","component","rest","useWhenValueChanges","useRef","useEffect","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","useLatest","ref","versions","ReactFinalForm","init","decorators","alternateFormApi","form","initialValuesEqual","_ref$subscription","f","_React$useState","initialState","setState","stateRef","unsubscriptions","s","decorator","unsubscribe","renderProps","eventOrValues","handleSubmit","event","preventDefault","Provider","__versions","useForm","componentName","useFormState","_temp","onChange","firstRender","newState","FormSpy","reactFinalForm","isReactNative","window","navigator","product","getValue","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","target","type","checked","slice","options","option","selected","getSelectedValues","all$1","defaultFormat","defaultParse","useField","allowNull","_ref$format","format","formatOnBlur","multiple","_ref$parse","parse","_value","validateRef","beforeSubmitRef","formatted","register","handlers","onBlur","onFocus","otherState","meta","withTypes","Form"],"mappings":"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","file":"3-d6b6c8c85b7f0d984dfe.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  return key.split(/[.[\\]]+/).filter(Boolean);\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.18.2\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  if (force === void 0) {\n    force = false;\n  }\n\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n  }\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber;\n      notifySubscriber(subscriber, subscription, state, lastState, filter, force);\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = false;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        var asyncValidationPromiseKey = nextAsyncValidationKey++;\n        var promise = errorsOrPromise.then(setErrors).then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n        promises.push(promise);\n        asyncValidationPromises[asyncValidationPromiseKey] = promise;\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          var asyncValidationPromiseKey = nextAsyncValidationKey++;\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }) // errors must be resolved, not rejected\n          .then(clearAsyncValidationPromise(asyncValidationPromiseKey));\n          promises.push(promise);\n          asyncValidationPromises[asyncValidationPromiseKey] = promise;\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors();\n\n    if (promises.length) {\n      // sync errors have been set. notify listeners while we wait for others\n      state.formState.validating++;\n      callback();\n\n      var afterPromises = function afterPromises() {\n        state.formState.validating--;\n        processErrors();\n        callback();\n      };\n\n      Promise.all(promises).then(afterPromises, afterPromises);\n    } else {\n      callback();\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners() {\n    if (inBatch || validationPaused) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    Object.keys(safeFields).forEach(function (name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n\n      if (!shallowEqual(fieldState, lastFieldState)) {\n        // **************************************************************\n        // Curious about why a field is getting notified? Uncomment this.\n        // **************************************************************\n        // const diffKeys = Object.keys(fieldState).filter(\n        //   key => fieldState[key] !== (lastFieldState && lastFieldState[key])\n        // )\n        // console.debug(\n        //   'notifying',\n        //   field.name,\n        //   '\\nField State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({ ...result, [key]: fieldState[key] }),\n        //     {}\n        //   ),\n        //   '\\nLast Field State\\n',\n        //   diffKeys.reduce(\n        //     (result, key) => ({\n        //       ...result,\n        //       [key]: lastFieldState && lastFieldState[key]\n        //     }),\n        //     {}\n        //   )\n        // )\n        field.lastFieldState = fieldState;\n        var fieldSubscriber = fieldSubscribers[name];\n\n        if (fieldSubscriber) {\n          notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n        }\n      }\n    });\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && !safeFieldKeys.every(function (key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      return safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key));\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).find(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {});\n  var api = {\n    batch: function batch(fn) {\n      inBatch = true;\n      fn();\n      inBatch = false;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n\n      Object.keys(safeFields).forEach(function (key) {\n        var field = safeFields[key];\n        field.modified = false;\n        field.touched = false;\n        field.visited = false;\n\n        if (keepDirtyOnReinitialize) {\n          var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n          if (pristine) {\n            // only update pristine values\n            formState.values = setIn(formState.values, key, getIn(values, key));\n          }\n        }\n      });\n      formState.initialValues = values;\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      if (fieldConfig) {\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n        }\n\n        if (fieldConfig.defaultValue !== undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      var sentFirstNotification = false;\n\n      var firstNotification = function firstNotification() {\n        var fieldState = publishFieldState(state.formState, state.fields[name]);\n        notifySubscriber(subscriber, subscription, fieldState, undefined, filterFieldState, true);\n        state.fields[name].lastFieldState = fieldState;\n        sentFirstNotification = true;\n      };\n\n      runValidation(undefined, function () {\n        notifyFormListeners();\n\n        if (!sentFirstNotification) {\n          firstNotification();\n        }\n\n        notifyFieldListeners();\n      });\n      return function () {\n        // istanbul ignore next\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n\n        if (!Object.keys(state.fieldSubscribers[name].entries).length) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n          state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.reduce(function (result, key) {\n          result.push(asyncValidationPromises[Number(key)]);\n          return result;\n        }, [])).then(api.submit, api.submit);\n        return;\n      }\n\n      var fieldBlockingSubmit = beforeSubmit();\n\n      if (fieldBlockingSubmit) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers,\n          lastFormState = state.lastFormState;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription\n      };\n      var nextFormState = calculateNextFormState();\n\n      if (nextFormState !== lastFormState) {\n        state.lastFormState = nextFormState;\n      }\n\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\n//\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React__default, { createElement, createContext, useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return createElement(component, _extends({}, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? rest : _extends({}, rest, {\n      children: children\n    })); // inject children back in\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(rest);\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.3.0\";\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config);\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  useEffect(function () {\n    // We have rendered, so all fields are no registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      unsubscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = _extends({}, state, {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  });\n\n  return createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, renderProps, {\n    __versions: versions\n  }), 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChange) {\n          onChange(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return state;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, state, renderProps), 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all$1 = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nfunction useField(name, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      component = _ref.component,\n      defaultValue = _ref.defaultValue,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? defaultFormat : _ref$format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      _ref$parse = _ref.parse,\n      parse = _ref$parse === void 0 ? defaultParse : _ref$parse,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      _value = _ref.value;\n\n  var form = useForm('useField');\n  var validateRef = useLatest(validate);\n  var beforeSubmitRef = useLatest(function () {\n    if (formatOnBlur) {\n      var formatted = format(state.value, state.name);\n\n      if (formatted !== state.value) {\n        state.change(formatted);\n      }\n    }\n\n    return beforeSubmit && beforeSubmit();\n  });\n\n  var register = function register(callback) {\n    return form.registerField(name, callback, subscription, {\n      afterSubmit: afterSubmit,\n      beforeSubmit: function beforeSubmit() {\n        return beforeSubmitRef.current();\n      },\n      defaultValue: defaultValue,\n      getValidator: function getValidator() {\n        return validateRef.current;\n      },\n      initialValue: initialValue,\n      isEqual: isEqual,\n      validateFields: validateFields\n    });\n  };\n\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    })(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue, isEqual // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name); // this ternary is primarily to appease the Flow gods\n        // istanbul ignore next\n\n        state.change(format(fieldState ? fieldState.value : state.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.name, state.value, format, formatOnBlur]),\n    onChange: useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type;\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: useCallback(function (event) {\n      state.focus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n  };\n\n  var blur = state.blur,\n      change = state.change,\n      focus = state.focus,\n      value = state.value,\n      ignoreName = state.name,\n      otherState = _objectWithoutPropertiesLoose(state, [\"blur\", \"change\", \"focus\", \"value\", \"name\"]);\n\n  var meta = {\n    // this is to appease the Flow gods\n    active: otherState.active,\n    data: otherState.data,\n    dirty: otherState.dirty,\n    dirtySinceLastSubmit: otherState.dirtySinceLastSubmit,\n    error: otherState.error,\n    initial: otherState.initial,\n    invalid: otherState.invalid,\n    length: otherState.length,\n    modified: otherState.modified,\n    pristine: otherState.pristine,\n    submitError: otherState.submitError,\n    submitFailed: otherState.submitFailed,\n    submitSucceeded: otherState.submitSucceeded,\n    submitting: otherState.submitting,\n    touched: otherState.touched,\n    valid: otherState.valid,\n    validating: otherState.validating,\n    visited: otherState.visited\n  };\n\n  if (formatOnBlur) {\n    if (component === 'input') {\n      value = defaultFormat(value);\n    }\n  } else {\n    value = format(value, name);\n  }\n\n  if (value === null && !allowNull) {\n    value = '';\n  }\n\n  var input = _extends({\n    name: name,\n    value: value,\n    type: type\n  }, handlers);\n\n  if (type === 'checkbox') {\n    if (_value === undefined) {\n      input.checked = !!value;\n    } else {\n      input.checked = !!(Array.isArray(value) && ~value.indexOf(_value));\n      input.value = _value;\n    }\n  } else if (type === 'radio') {\n    input.checked = value === _value;\n    input.value = _value;\n  } else if (component === 'select' && multiple) {\n    input.value = input.value || [];\n    input.multiple = true;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta // assign to force Flow check\n\n  };\n  return renderProps;\n}\n\nvar Field = function Field(_ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return createElement(component, _extends({}, field.input, {\n      children: children\n    }, rest));\n  }\n\n  return renderComponent(_extends({}, field, {\n    children: children,\n    component: component\n  }, rest), \"Field(\" + name + \")\");\n};\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n"],"sourceRoot":""}