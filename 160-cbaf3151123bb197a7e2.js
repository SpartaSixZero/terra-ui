(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{3281:function(e,n,t){"use strict";t.r(n),n.default="# Terra Signature\n\nThe terra-signature component provides users a way to define a signature with a series of line segments.\nThe component can define line width, line color, and optionally display a signature if the line segments have\nalready been recorded. Exiting the canvas then re-entering continues the drawing, as long as the pointer does not exit the confines of the browser. For mouse usage, only left click drawing is enabled.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-signature`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\n<details>\n<summary>View information on this component's peer dependencies.</summary>\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n\n\n</details>\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Usage\n\n```jsx\nimport React from 'react';\nimport Signature from 'terra-signature';\n\n// Signature with line width\n<Signature lineWidth={Signature.Opts.Width.FINE} />\n\n// Signature with line width and simple intial signature line\n<Signature\n\tlineWidth={Signature.Opts.Width.EXTRA_FINE}\n\tlineSegments={ [{ x1: 70, y1: 8, x2: 70, y2: 9 }, { x1: 70, y1: 9, x2: 70, y2: 10 }] }\n/>\n\n// Signature with with line width and cleared signature\n<Signature lineWidth={Signature.Opts.Width.MEDIUM} lineSegments={ [] } />\n\n// Signature with with line width and callback function\n<Signature lineWidth={Signature.Opts.Width.HEAVY} onChange={this.handleChange.bind(this)} />\n```\n\n## Component Features\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n"},3282:function(e){e.exports=JSON.parse('{"_from":"terra-signature@^2.0.0","_id":"terra-signature@2.17.0","_inBundle":false,"_integrity":"sha512-NTm5wefhmU7UTgBM5icP7r21BAu8MOXatSikYFoSzEFVRyIizPkmZiVSUzPnExcSRu+UWtGb6teXE+QzsTktow==","_location":"/terra-signature","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-signature@^2.0.0","name":"terra-signature","escapedName":"terra-signature","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/terra-signature/-/terra-signature-2.17.0.tgz","_shasum":"af7fed1cc56757efecef872668108521edd5b721","_spec":"terra-signature@^2.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-core/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","terra-doc-template":"^2.15.0"},"deprecated":false,"description":"A signature defined by an array of line segments.","gitHead":"0b893dc4a80250c0b485a5f205f2defde7c38ecf","homepage":"https://github.com/cerner/terra-core#readme","keywords":["Cerner","Terra","terra-signature","Signature","UI"],"license":"Apache-2.0","main":"lib/Signature.js","name":"terra-signature","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"2.17.0"}')},3283:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Signature.module.scss';\n\nconst LINEWIDTHS = {\n  EXTRA_FINE: 1,\n  FINE: 2,\n  MEDIUM: 4,\n  HEAVY: 6,\n};\n\nconst MOUSECODES = {\n  LEFTCLICK: 0,\n};\n\nconst propTypes = {\n  /**\n   * The line width to use when drawing the signature on the canvas.\n   * One of Signature.Opts.Width.EXTRA_FINE, Signature.Opts.Width.FINE, Signature.Opts.Width.MEDIUM, Signature.Opts.Width.HEAVY.\n   */\n  lineWidth: PropTypes.oneOf([LINEWIDTHS.EXTRA_FINE, LINEWIDTHS.FINE, LINEWIDTHS.MEDIUM, LINEWIDTHS.HEAVY]),\n  /**\n  * Line segments that define signature.\n  */\n  // eslint-disable-next-line react/forbid-prop-types\n  lineSegments: PropTypes.array,\n  /**\n   * A callback function to execute when a line segment is drawn. The first parameter is the event, the\n   * second parameter is all the line segments, and the last parameter is the most recent line segment drawn.\n   */\n  onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n  lineWidth: LINEWIDTHS.FINE,\n  lineSegments: [],\n  onChange: undefined,\n};\n\nclass Signature extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { lineSegments: props.lineSegments };\n\n    this.mouseInBounds = this.mouseInBounds.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseXY = this.mouseXY.bind(this);\n    this.mouseLeave = this.mouseLeave.bind(this);\n    this.addLine = this.addLine.bind(this);\n    this.draw = this.draw.bind(this);\n    this.drawSignature = this.drawSignature.bind(this);\n    this.clearSignature = this.clearSignature.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    if ('ontouchstart' in document.documentElement) {\n      this.canvas.addEventListener('touchstart', this.mouseDown, false);\n      this.canvas.addEventListener('touchmove', this.mouseXY, true);\n      this.canvas.addEventListener('touchend', this.mouseUp, false);\n      document.body.addEventListener('touchleave', this.mouseLeave, false);\n      document.body.addEventListener('touchcancel', this.mouseUp, false);\n    } else {\n      this.canvas.addEventListener('mousedown', this.mouseDown);\n      this.canvas.addEventListener('mousemove', this.mouseXY);\n      document.body.addEventListener('mouseleave', this.mouseLeave, false);\n      document.body.addEventListener('mouseup', this.mouseUp);\n    }\n\n    const context = this.canvas.getContext('2d');\n\n    context.lineWidth = this.props.lineWidth;\n\n    this.updateDimensions();\n\n    this.canvas.addEventListener('resize', this.updateDimensions);\n  }\n\n  componentDidUpdate(prevProps) {\n    if ((this.props.lineSegments !== prevProps.lineSegments) || (this.props.lineWidth !== prevProps.lineWidth)) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ lineSegments: this.props.lineSegments });\n      this.drawSignature(this.props.lineSegments, this.props.lineWidth);\n    }\n  }\n\n  componentWillUnmount() {\n    if ('ontouchstart' in document.documentElement) {\n      this.canvas.removeEventListener('touchstart', this.mouseDown);\n      this.canvas.removeEventListener('touchmove', this.mouseXY);\n      this.canvas.removeEventListener('touchend', this.mouseUp);\n      document.body.removeEventListener('touchleave', this.mouseLeave);\n      document.body.removeEventListener('touchcancel', this.mouseUp);\n    } else {\n      this.canvas.removeEventListener('mousedown', this.mouseDown);\n      this.canvas.removeEventListener('mousemove', this.mouseXY);\n      document.body.removeEventListener('mouseleave', this.mouseLeave);\n      document.body.removeEventListener('mouseup', this.mouseUp);\n    }\n\n    this.canvas.removeEventListener('resize', this.updateDimensions);\n  }\n\n  mouseInBounds(event) {\n    const rect = this.canvasRect;\n    return rect.top < event.pageY && rect.left < event.pageX && rect.bottom > event.pageY && rect.right > event.pageX;\n  }\n\n  mouseDown(event) {\n    if ('button' in event && event.button !== MOUSECODES.LEFTCLICK) {\n      return;\n    }\n    this.setState({ lastLineSegments: [], painting: true });\n\n    this.canvasRect = this.canvas.getBoundingClientRect();\n\n    this.addLine(event.pageX - this.canvasRect.left, event.pageY - this.canvasRect.top, false);\n\n    this.draw();\n  }\n\n  mouseUp(event) {\n    this.setState({ painting: false });\n\n    if (this.props.onChange) {\n      this.props.onChange(event, this.state.lineSegments, this.state.lastLineSegments);\n    }\n  }\n\n  mouseXY(event) {\n    if (this.state.painting && this.mouseInBounds(event)) {\n      this.addLine(event.pageX - this.canvasRect.left, event.pageY - this.canvasRect.top, true);\n\n      this.draw();\n    }\n  }\n\n  mouseLeave(event) {\n    if (this.state.painting) {\n      this.setState({ painting: false });\n      if (this.props.onChange) {\n        this.props.onChange(event, this.state.lineSegments, this.state.lastLineSegments);\n      }\n    }\n  }\n\n  addLine(x, y, dragging) {\n    let newSegment;\n\n    if (dragging) {\n      const lastLineSegment = this.state.lineSegments[this.state.lineSegments.length - 1];\n      newSegment = {\n        x1: lastLineSegment.x2, y1: lastLineSegment.y2, x2: x, y2: y,\n      };\n    } else {\n      newSegment = {\n        x1: x, y1: y, x2: x, y2: y,\n      };\n    }\n\n    // Record new line segment\n    this.setState(prevState => ({\n      lineSegments: [...prevState.lineSegments, newSegment],\n      lastLineSegments: [...prevState.lastLineSegments, newSegment],\n    }));\n  }\n\n\n  draw() {\n    const context = this.canvas.getContext('2d');\n\n    if (this.state.lineSegments.length > 0) {\n      const lastLineSegment = this.state.lineSegments[this.state.lineSegments.length - 1];\n      const style = window.getComputedStyle(this.canvas);\n      const color = style.getPropertyValue('color');\n\n      context.lineJoin = 'round';\n\n      context.beginPath();\n      context.moveTo(lastLineSegment.x1, lastLineSegment.y1);\n      context.lineTo(lastLineSegment.x2, lastLineSegment.y2);\n      context.strokeStyle = color;\n      context.stroke();\n    }\n  }\n\n  drawSignature(lineSegments, lineWidth) {\n    const context = this.canvas.getContext('2d');\n    const style = window.getComputedStyle(this.canvas);\n    const color = style.getPropertyValue('color');\n\n    context.lineJoin = 'round';\n    context.lineWidth = lineWidth;\n\n    // clear canvas\n    context.clearRect(0, 0, this.canvasRect.width, this.canvasRect.height);\n\n    // iterate and draw all recorded line segments\n    const segmentCount = lineSegments.length;\n    for (let i = 0; i < segmentCount; i += 1) {\n      context.beginPath();\n      context.moveTo(lineSegments[i].x1, lineSegments[i].y1);\n      context.lineTo(lineSegments[i].x2, lineSegments[i].y2);\n      context.strokeStyle = color;\n      context.stroke();\n    }\n  }\n\n  clearSignature() {\n    this.setState({ lineSegments: [] });\n\n    const context = this.canvas.getContext('2d');\n\n    context.clearRect(0, 0, this.canvasRect.width, this.canvasRect.height);\n  }\n\n  updateDimensions() {\n    setTimeout(() => {\n      this.canvasRect = this.canvas.getBoundingClientRect();\n\n      this.canvas.width = this.canvasRect.width;\n      this.canvas.height = this.canvasRect.height;\n\n      this.drawSignature(this.state.lineSegments);\n    }, 250);\n  }\n\n  render() {\n    const {\n      lineSegments, lineWidth, onChange, ...custProps\n    } = this.props;\n\n    return (\n      <canvas {...custProps} className={styles.signature} ref={(node) => { this.canvas = node; }} />\n    );\n  }\n}\n\nSignature.propTypes = propTypes;\nSignature.defaultProps = defaultProps;\nSignature.Opts = {};\nSignature.Opts.Width = LINEWIDTHS;\n\nexport default Signature;\n"},3284:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=r(t(0)),s=r(t(3285)),a=r(t(4)),o=r(t(3287));function r(e){return e&&e.__esModule?e:{default:e}}function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(){return(l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}function c(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e,n){return(m=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var p=a.default.bind(o.default),g=function(e){function n(){var e,t,i;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),t=this,(e=!(i=d(n).call(this))||"object"!==u(i)&&"function"!=typeof i?h(t):i).state={lineSegments:[],lineWidth:s.default.Opts.Width.FINE},e.handleSingleLine=e.handleSingleLine.bind(h(e)),e.handleClear=e.handleClear.bind(h(e)),e.handleLineWidth=e.handleLineWidth.bind(h(e)),e}var t,a,o;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&m(e,n)}(n,i.default.Component),t=n,(a=[{key:"handleSingleLine",value:function(){var e=l({},this.state,{lineSegments:[{x1:71,y1:8,x2:71,y2:8},{x1:71,y1:8,x2:71,y2:10},{x1:71,y1:10,x2:71,y2:17},{x1:71,y1:17,x2:71,y2:28},{x1:71,y1:28,x2:71,y2:44},{x1:71,y1:44,x2:71,y2:56},{x1:71,y1:56,x2:71,y2:68},{x1:71,y1:68,x2:71,y2:75},{x1:71,y1:75,x2:71,y2:81},{x1:71,y1:81,x2:71,y2:84},{x1:71,y1:84,x2:71,y2:86},{x1:71,y1:86,x2:71,y2:87},{x1:71,y1:87,x2:71,y2:87}]});this.setState(e)}},{key:"handleClear",value:function(){var e=l({},this.state,{lineSegments:[]});this.setState(e)}},{key:"handleLineWidth",value:function(e){var n,t,i;this.setState((n={},t=e.target.name,i=e.target.value,t in n?Object.defineProperty(n,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[t]=i,n))}},{key:"render",value:function(){return i.default.createElement("div",null,i.default.createElement("div",{className:p("signature-wrapper")},i.default.createElement(s.default,{id:"foo",lineWidth:this.state.lineWidth,lineSegments:this.state.lineSegments})),i.default.createElement("div",null,i.default.createElement("button",{type:"button",onClick:this.handleClear},"Clear "),i.default.createElement("button",{type:"button",onClick:this.handleSingleLine},"Sign w/Line "),i.default.createElement("div",null,i.default.createElement("p",null,i.default.createElement("label",{htmlFor:"lineWidth"},"Select a line width:")),i.default.createElement("select",{id:"lineWidth",name:"lineWidth",value:this.state.lineWidth,onChange:this.handleLineWidth},i.default.createElement("option",{value:"1"},"EXTRAFINE"),i.default.createElement("option",{value:"2"},"FINE"),i.default.createElement("option",{value:"4"},"MEDIUM"),i.default.createElement("option",{value:"6"},"HEAVY")))))}}])&&c(t.prototype,a),o&&c(t,o),n}();n.default=g},3285:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=o(t(0)),s=o(t(2)),a=o(t(3286));function o(e){return e&&e.__esModule?e:{default:e}}function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(){return(u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}function l(e,n){if(null==e)return{};var t,i,s=function(e,n){if(null==e)return{};var t,i,s={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}function c(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function d(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(e,n){return(p=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var g={EXTRA_FINE:1,FINE:2,MEDIUM:4,HEAVY:6},v=0,f={lineWidth:s.default.oneOf([g.EXTRA_FINE,g.FINE,g.MEDIUM,g.HEAVY]),lineSegments:s.default.array,onChange:s.default.func},y={lineWidth:g.FINE,lineSegments:[],onChange:void 0},S=function(e){function n(e){var t,i,s;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),i=this,(t=!(s=h(n).call(this,e))||"object"!==r(s)&&"function"!=typeof s?m(i):s).state={lineSegments:e.lineSegments},t.mouseInBounds=t.mouseInBounds.bind(m(t)),t.mouseDown=t.mouseDown.bind(m(t)),t.mouseUp=t.mouseUp.bind(m(t)),t.mouseXY=t.mouseXY.bind(m(t)),t.mouseLeave=t.mouseLeave.bind(m(t)),t.addLine=t.addLine.bind(m(t)),t.draw=t.draw.bind(m(t)),t.drawSignature=t.drawSignature.bind(m(t)),t.clearSignature=t.clearSignature.bind(m(t)),t.updateDimensions=t.updateDimensions.bind(m(t)),t}var t,s,o;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&p(e,n)}(n,i.default.Component),t=n,(s=[{key:"componentDidMount",value:function(){"ontouchstart"in document.documentElement?(this.canvas.addEventListener("touchstart",this.mouseDown,!1),this.canvas.addEventListener("touchmove",this.mouseXY,!0),this.canvas.addEventListener("touchend",this.mouseUp,!1),document.body.addEventListener("touchleave",this.mouseLeave,!1),document.body.addEventListener("touchcancel",this.mouseUp,!1)):(this.canvas.addEventListener("mousedown",this.mouseDown),this.canvas.addEventListener("mousemove",this.mouseXY),document.body.addEventListener("mouseleave",this.mouseLeave,!1),document.body.addEventListener("mouseup",this.mouseUp)),this.canvas.getContext("2d").lineWidth=this.props.lineWidth,this.updateDimensions(),this.canvas.addEventListener("resize",this.updateDimensions)}},{key:"componentDidUpdate",value:function(e){this.props.lineSegments===e.lineSegments&&this.props.lineWidth===e.lineWidth||(this.setState({lineSegments:this.props.lineSegments}),this.drawSignature(this.props.lineSegments,this.props.lineWidth))}},{key:"componentWillUnmount",value:function(){"ontouchstart"in document.documentElement?(this.canvas.removeEventListener("touchstart",this.mouseDown),this.canvas.removeEventListener("touchmove",this.mouseXY),this.canvas.removeEventListener("touchend",this.mouseUp),document.body.removeEventListener("touchleave",this.mouseLeave),document.body.removeEventListener("touchcancel",this.mouseUp)):(this.canvas.removeEventListener("mousedown",this.mouseDown),this.canvas.removeEventListener("mousemove",this.mouseXY),document.body.removeEventListener("mouseleave",this.mouseLeave),document.body.removeEventListener("mouseup",this.mouseUp)),this.canvas.removeEventListener("resize",this.updateDimensions)}},{key:"mouseInBounds",value:function(e){var n=this.canvasRect;return n.top<e.pageY&&n.left<e.pageX&&n.bottom>e.pageY&&n.right>e.pageX}},{key:"mouseDown",value:function(e){"button"in e&&e.button!==v||(this.setState({lastLineSegments:[],painting:!0}),this.canvasRect=this.canvas.getBoundingClientRect(),this.addLine(e.pageX-this.canvasRect.left,e.pageY-this.canvasRect.top,!1),this.draw())}},{key:"mouseUp",value:function(e){this.setState({painting:!1}),this.props.onChange&&this.props.onChange(e,this.state.lineSegments,this.state.lastLineSegments)}},{key:"mouseXY",value:function(e){this.state.painting&&this.mouseInBounds(e)&&(this.addLine(e.pageX-this.canvasRect.left,e.pageY-this.canvasRect.top,!0),this.draw())}},{key:"mouseLeave",value:function(e){this.state.painting&&(this.setState({painting:!1}),this.props.onChange&&this.props.onChange(e,this.state.lineSegments,this.state.lastLineSegments))}},{key:"addLine",value:function(e,n,t){var i;if(t){var s=this.state.lineSegments[this.state.lineSegments.length-1];i={x1:s.x2,y1:s.y2,x2:e,y2:n}}else i={x1:e,y1:n,x2:e,y2:n};this.setState(function(e){return{lineSegments:[].concat(c(e.lineSegments),[i]),lastLineSegments:[].concat(c(e.lastLineSegments),[i])}})}},{key:"draw",value:function(){var e=this.canvas.getContext("2d");if(this.state.lineSegments.length>0){var n=this.state.lineSegments[this.state.lineSegments.length-1],t=window.getComputedStyle(this.canvas).getPropertyValue("color");e.lineJoin="round",e.beginPath(),e.moveTo(n.x1,n.y1),e.lineTo(n.x2,n.y2),e.strokeStyle=t,e.stroke()}}},{key:"drawSignature",value:function(e,n){var t=this.canvas.getContext("2d"),i=window.getComputedStyle(this.canvas).getPropertyValue("color");t.lineJoin="round",t.lineWidth=n,t.clearRect(0,0,this.canvasRect.width,this.canvasRect.height);for(var s=e.length,a=0;a<s;a+=1)t.beginPath(),t.moveTo(e[a].x1,e[a].y1),t.lineTo(e[a].x2,e[a].y2),t.strokeStyle=i,t.stroke()}},{key:"clearSignature",value:function(){this.setState({lineSegments:[]}),this.canvas.getContext("2d").clearRect(0,0,this.canvasRect.width,this.canvasRect.height)}},{key:"updateDimensions",value:function(){var e=this;setTimeout(function(){e.canvasRect=e.canvas.getBoundingClientRect(),e.canvas.width=e.canvasRect.width,e.canvas.height=e.canvasRect.height,e.drawSignature(e.state.lineSegments)},250)}},{key:"render",value:function(){var e=this,n=this.props,t=(n.lineSegments,n.lineWidth,n.onChange,l(n,["lineSegments","lineWidth","onChange"]));return i.default.createElement("canvas",u({},t,{className:a.default.signature,ref:function(n){e.canvas=n}}))}}])&&d(t.prototype,s),o&&d(t,o),n}();S.propTypes=f,S.defaultProps=y,S.Opts={},S.Opts.Width=g;var b=S;n.default=b},3286:function(e,n,t){e.exports={signature:"Signature-module__signature___2YE4v"}},3287:function(e,n,t){e.exports={"signature-wrapper":"SignatureExample-module__signature-wrapper___2NWWY"}},3288:function(e,n,t){"use strict";t.r(n),n.default='import React from \'react\';\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nimport Signature from \'terra-signature/lib/Signature\';\nimport classNames from \'classnames/bind\';\nimport styles from \'./SignatureExample.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nclass SignatureExample extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { lineSegments: [], lineWidth: Signature.Opts.Width.FINE };\n\n    this.handleSingleLine = this.handleSingleLine.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleLineWidth = this.handleLineWidth.bind(this);\n  }\n\n  handleSingleLine() {\n    const singleLine = [{\n      x1: 71, y1: 8, x2: 71, y2: 8,\n    }, {\n      x1: 71, y1: 8, x2: 71, y2: 10,\n    }, {\n      x1: 71, y1: 10, x2: 71, y2: 17,\n    }, {\n      x1: 71, y1: 17, x2: 71, y2: 28,\n    }, {\n      x1: 71, y1: 28, x2: 71, y2: 44,\n    }, {\n      x1: 71, y1: 44, x2: 71, y2: 56,\n    }, {\n      x1: 71, y1: 56, x2: 71, y2: 68,\n    }, {\n      x1: 71, y1: 68, x2: 71, y2: 75,\n    }, {\n      x1: 71, y1: 75, x2: 71, y2: 81,\n    }, {\n      x1: 71, y1: 81, x2: 71, y2: 84,\n    }, {\n      x1: 71, y1: 84, x2: 71, y2: 86,\n    }, {\n      x1: 71, y1: 86, x2: 71, y2: 87,\n    }, {\n      x1: 71, y1: 87, x2: 71, y2: 87,\n    }];\n    const newState = Object.assign({}, this.state, { lineSegments: singleLine });\n    this.setState(newState);\n  }\n\n  handleClear() {\n    const newState = Object.assign({}, this.state, { lineSegments: [] });\n    this.setState(newState);\n  }\n\n  handleLineWidth(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={cx(\'signature-wrapper\')}>\n          <Signature id="foo" lineWidth={this.state.lineWidth} lineSegments={this.state.lineSegments} />\n        </div>\n        <div>\n          <button type="button" onClick={this.handleClear}>Clear </button>\n          <button type="button" onClick={this.handleSingleLine}>Sign w/Line </button>\n          <div>\n            <p><label htmlFor="lineWidth">Select a line width:</label></p>\n            <select id="lineWidth" name="lineWidth" value={this.state.lineWidth} onChange={this.handleLineWidth}>\n              <option value="1">EXTRAFINE</option>\n              <option value="2">FINE</option>\n              <option value="4">MEDIUM</option>\n              <option value="6">HEAVY</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignatureExample;\n'},3813:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=c(t(0)),s=c(t(911)),a=c(t(3281)),o=t(3282),r=c(t(3283)),u=c(t(3284)),l=c(t(3288));function c(e){return e&&e.__esModule?e:{default:e}}var d=function(){return i.default.createElement(s.default,{packageName:o.name,readme:a.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(o.name),examples:[{title:"Default Signature",example:i.default.createElement(u.default,null),source:l.default}],propsTables:[{componentName:"Signature",componentSrc:r.default}]})};n.default=d}}]);
//# sourceMappingURL=160-cbaf3151123bb197a7e2.js.map