(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{1182:function(e,n,t){e.exports={"slide-panel":"SlidePanel-module__slide-panel___ITIbM",main:"SlidePanel-module__main___2oo1I",panel:"SlidePanel-module__panel___22lWd","is-open":"SlidePanel-module__is-open___3OdYE","is-fullscreen":"SlidePanel-module__is-fullscreen___32Wbh",fill:"SlidePanel-module__fill___2g_EL"}},1232:function(e,n,t){"use strict";var a=t(5),r=t(32);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.disclosureType=void 0;var l,s=a(t(17)),i=a(t(34)),o=a(t(20)),d=a(t(24)),u=a(t(25)),c=a(t(26)),p=a(t(31)),m=a(t(27)),f=a(t(331)),h=a(t(0)),g=a(t(2)),v=r(t(209)),b=a(t(353)),S=a(t(931));n.disclosureType="panel";var y={children:g.default.node,panelBehavior:g.default.oneOf(["overlay","squish"])},P=(l={},(0,f.default)(l,v.availableDisclosureSizes.TINY,"small"),(0,f.default)(l,v.availableDisclosureSizes.SMALL,"small"),(0,f.default)(l,v.availableDisclosureSizes.MEDIUM,"large"),(0,f.default)(l,v.availableDisclosureSizes.LARGE,"large"),(0,f.default)(l,v.availableDisclosureSizes.HUGE,"large"),l),E=function(e){function n(e){var t;return(0,o.default)(this,n),(t=(0,u.default)(this,(0,c.default)(n).call(this,e))).renderSlidePanel=t.renderSlidePanel.bind((0,p.default)(t)),t}return(0,m.default)(n,e),(0,d.default)(n,[{key:"renderSlidePanel",value:function(e){var n,t,a,r=this.props,l=(r.children,r.panelBehavior),o=(0,i.default)(r,["children","panelBehavior"]);return(e.disclosure.size===v.availableDisclosureSizes.FULLSCREEN||e.disclosure.isMaximized)&&(n=!0),t=e.disclosure.dimensions?(a=e.disclosure.dimensions).width>480||a.height>600?"large":"small":P[e.disclosure.size],h.default.createElement(S.default,(0,s.default)({},o,{fill:!0,panelBehavior:l,isFullscreen:n,panelSize:t,isOpen:e.disclosure.isOpen,panelContent:h.default.createElement(b.default,{items:e.disclosure.components,isAnimated:!0}),mainContent:e.children.components}))}},{key:"render",value:function(){var e=this.props.children;return h.default.createElement(v.default,{supportedDisclosureTypes:["panel"],render:this.renderSlidePanel},e)}}]),n}(h.default.Component);E.propTypes=y,E.defaultProps={panelBehavior:"overlay"};var T=E;n.default=T},1385:function(e){e.exports=JSON.parse('{"_from":"terra-slide-panel-manager@^5.0.0","_id":"terra-slide-panel-manager@5.7.0","_inBundle":false,"_integrity":"sha512-EVEnRBeG2cr2KLDpbVL54+3li6kUdcnC50B5UNZCu3Qp4ZrTkb5Ci0cdcLVSlMvVomCnVoKqLSiCCHrKkzM7cw==","_location":"/terra-slide-panel-manager","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"terra-slide-panel-manager@^5.0.0","name":"terra-slide-panel-manager","escapedName":"terra-slide-panel-manager","rawSpec":"^5.0.0","saveSpec":null,"fetchSpec":"^5.0.0"},"_requiredBy":["/","/terra-application"],"_resolved":"https://registry.npmjs.org/terra-slide-panel-manager/-/terra-slide-panel-manager-5.7.0.tgz","_shasum":"18f9e01b7a44ca462cd40147d2ec4f8a804f5402","_spec":"terra-slide-panel-manager@^5.0.0","_where":"/home/travis/build/cerner/terra-ui","author":{"name":"Cerner Corporation"},"bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"bundleDependencies":false,"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","terra-slide-group":"^4.6.0","terra-slide-panel":"^3.11.0"},"deprecated":false,"description":"A DisclosureManager implementation that presents disclosed content using a SlidePanel.","devDependencies":{"terra-action-header":"^2.0.0","terra-button":"^3.3.0","terra-content-container":"^3.0.0","terra-doc-template":"^2.2.0","terra-form-input":"^2.3.0"},"gitHead":"f763d8f2d030d85d834554d5c2eca6f2917f2eac","homepage":"https://github.com/cerner/terra-framework#readme","keywords":["Cerner","Terra","Framework","terra-slide-panel-manager","SlidePanelManager","DisclosureManager","UI"],"license":"Apache-2.0","main":"lib/SlidePanelManager.js","name":"terra-slide-panel-manager","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","terra-disclosure-manager":"^4.9.0"},"repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run test:jest && npm run test:wdio","test:jest":"jest --config ../../jestconfig.js","test:wdio":"../../node_modules/.bin/wdio ../../node_modules/terra-dev-site/config/wdio/wdio.conf.js"},"version":"5.7.0"}')},1386:function(e,n,t){e.exports={"example-wrapper":"SlidePanelManager-module__example-wrapper___2hjOk","content-wrapper":"SlidePanelManager-module__content-wrapper___2Oeux"}},3322:function(e,n,t){"use strict";t.r(n),n.default='# Terra SlidePanel Manager\n\nThe SlidePanelManager is a DisclosureManager implementation that presents disclosed content using a SlidePanel.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-slide-panel-manager`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\n<details>\n<summary>View information on this component\'s peer dependencies.</summary>\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| terra-disclosure-manager | ^4.9.0 |\n\n\n</details>\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Usage\n\n### Implementation Requirements\n\nThe SlidePanelManager utilizes the DisclosureManager API to manage disclosure requests. The components provided as children to the SlidePanelManager, and the components disclosed within it, must interface with the SlidePanelManager\'s context using the `withDisclosureManager()` higher-order component generator provided by the `terra-disclosure-manager` package.\n\nThe SlidePanelManager responds to the `"panel"` disclosure type. Components that wish to disclose content using the SlidePanelManager should provide a preferred type of `"panel"`. This value is exported from the package as `disclosureType`. Please see the [DisclosureManager documentation](https://engineering.cerner.com/terra-ui/#/components/terra-disclosure-manager/disclosure-manager/about) for a full description of the SlidePanelManager\'s capabilities.\n\n## Component Features\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n'},3323:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport DisclosureManager, { availableDisclosureSizes } from 'terra-disclosure-manager';\nimport SlideGroup from 'terra-slide-group';\nimport SlidePanel from 'terra-slide-panel';\n\nconst disclosureType = 'panel';\nexport { disclosureType };\n\nconst propTypes = {\n  /**\n   * The components to be rendered in the body of the SlidePanelManager. These components will receive the\n   * disclosure capabilities through the DisclosureManger's context API.\n   */\n  children: PropTypes.node,\n  /**\n   * The desired panel behavior. Either 'squish' or 'overlay'.\n   */\n  panelBehavior: PropTypes.oneOf(['overlay', 'squish']),\n};\n\nconst defaultProps = {\n  panelBehavior: 'overlay',\n};\n\n/**\n * The SlidePanel component does not support the full range of DisclosureManager sizes in its API. The potential sizes are mapped to the\n * SlidePanel's supported sizes.\n */\nconst disclosureSizeToPanelSize = {\n  [availableDisclosureSizes.TINY]: 'small',\n  [availableDisclosureSizes.SMALL]: 'small',\n  [availableDisclosureSizes.MEDIUM]: 'large',\n  [availableDisclosureSizes.LARGE]: 'large',\n  [availableDisclosureSizes.HUGE]: 'large',\n};\n\nconst disclosureDimensionsToPanelSize = (dimensions) => {\n  if (dimensions.width > 480 || dimensions.height > 600) {\n    return 'large';\n  }\n  return 'small';\n};\n\nclass SlidePanelManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSlidePanel = this.renderSlidePanel.bind(this);\n  }\n\n  renderSlidePanel(manager) {\n    const {\n      children, panelBehavior, ...customProps\n    } = this.props;\n\n    let isFullscreen;\n    if (manager.disclosure.size === availableDisclosureSizes.FULLSCREEN || manager.disclosure.isMaximized) {\n      isFullscreen = true;\n    }\n\n    let panelSize;\n    if (manager.disclosure.dimensions) {\n      panelSize = disclosureDimensionsToPanelSize(manager.disclosure.dimensions);\n    } else {\n      panelSize = disclosureSizeToPanelSize[manager.disclosure.size];\n    }\n\n    return (\n      <SlidePanel\n        {...customProps}\n        fill\n        panelBehavior={panelBehavior}\n        isFullscreen={isFullscreen}\n        panelSize={panelSize}\n        isOpen={manager.disclosure.isOpen}\n        panelContent={(\n          <SlideGroup items={manager.disclosure.components} isAnimated />\n        )}\n        mainContent={manager.children.components}\n      />\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <DisclosureManager\n        supportedDisclosureTypes={[disclosureType]}\n        render={this.renderSlidePanel}\n      >\n        {children}\n      </DisclosureManager>\n    );\n  }\n}\n\nSlidePanelManager.propTypes = propTypes;\nSlidePanelManager.defaultProps = defaultProps;\n\nexport default SlidePanelManager;\n"},3324:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=a(t(0)),l=a(t(2)),s=a(t(4)),i=a(t(1232)),o=a(t(1386)),d=a(t(3325)),u=s.default.bind(o.default),c={behavior:l.default.string},p=function(e){var n=e.behavior;return r.default.createElement("div",{className:u("example-wrapper")},r.default.createElement(i.default,{panelBehavior:n},r.default.createElement(d.default,{panelBehavior:n,disclosureType:"panel"})))};p.propTypes=c;var m=p;n.default=m},3325:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=a(t(331)),l=a(t(20)),s=a(t(24)),i=a(t(25)),o=a(t(26)),d=a(t(31)),u=a(t(27)),c=a(t(0)),p=a(t(2)),m=a(t(4)),f=a(t(61)),h=a(t(67)),g=a(t(122)),v=t(209),b=a(t(3326)),S=a(t(1386)),y=m.default.bind(S.default),P={disclosureType:p.default.string,disclosureManager:v.disclosureManagerShape,panelBehavior:p.default.oneOf(["overlay","squish"])},E=Object.keys(v.availableDisclosureHeights),T=Object.keys(v.availableDisclosureWidths),M=function(e){return e.map(function(e,n){var t=n;return c.default.createElement("option",{key:t,value:e},e)})},_=function(e){function n(e){var t;return(0,l.default)(this,n),(t=(0,i.default)(this,(0,o.default)(n).call(this,e))).renderButton=t.renderButton.bind((0,d.default)(t)),t.handleSelectChange=t.handleSelectChange.bind((0,d.default)(t)),t.getId=t.getId.bind((0,d.default)(t)),t.state={id:"dimensions",disclosureHeight:E[0],disclosureWidth:T[0]},t}return(0,u.default)(n,e),(0,s.default)(n,[{key:"getId",value:function(e){return e+this.state.id}},{key:"handleSelectChange",value:function(e){this.setState((0,r.default)({},e.target.name,e.target.value))}},{key:"renderButton",value:function(e){var n=this.props,t=n.disclosureManager,a=n.disclosureType;return c.default.createElement(f.default,{text:"Disclose (".concat(e,")"),onClick:function(){t.disclose({preferredType:a,size:e,content:{key:"Content-Disclosure-".concat(e),component:c.default.createElement(b.default,{name:"Disclosure Component (".concat(e,")"),disclosureType:a})}})}})}},{key:"renderFormButton",value:function(){var e=this,n=this.props,t=n.disclosureManager,a=n.disclosureType,r="Disclose (".concat(this.state.disclosureHeight,") x (").concat(this.state.disclosureWidth,")");return c.default.createElement(f.default,{text:r,onClick:function(){t.disclose({preferredType:a,dimensions:{height:e.state.disclosureHeight,width:e.state.disclosureWidth},content:{key:"Content-Disclosure-Dimensions",component:c.default.createElement(b.default,{name:"Disclosure Component (".concat(r,")"),disclosureType:a})}})}})}},{key:"renderForm",value:function(){return c.default.createElement("form",null,c.default.createElement("label",{htmlFor:this.getId("disclosureHeight".concat(this.props.panelBehavior))},"Pop Content Height"),c.default.createElement("select",{id:this.getId("disclosureHeight".concat(this.props.panelBehavior)),name:"disclosureHeight",value:this.state.disclosureHeight,onChange:this.handleSelectChange},M(E)),c.default.createElement("br",null),c.default.createElement("br",null),c.default.createElement("label",{htmlFor:this.getId("disclosureWidth".concat(this.props.panelBehavior))},"Pop Content Width"),c.default.createElement("select",{id:this.getId("disclosureWidth".concat(this.props.panelBehavior)),name:"disclosureWidth",value:this.state.disclosureWidth,onChange:this.handleSelectChange},M(T)),c.default.createElement("br",null),c.default.createElement("br",null))}},{key:"render",value:function(){return c.default.createElement(h.default,{header:c.default.createElement(g.default,{title:"Manager Child"})},c.default.createElement("div",{className:y("content-wrapper")},this.renderButton("default"),this.renderButton("tiny"),this.renderButton("small"),this.renderButton("medium"),this.renderButton("large"),this.renderButton("huge"),this.renderButton("fullscreen"),c.default.createElement("br",null),c.default.createElement("p",null,"The child components can disclose content in the panel at various sizes.")),c.default.createElement("div",{className:y("content-wrapper")},this.renderForm(),this.renderFormButton()))}}]),n}(c.default.Component);_.propTypes=P;var D=(0,v.withDisclosureManager)(_);n.default=D},3326:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=a(t(20)),l=a(t(24)),s=a(t(25)),i=a(t(26)),o=a(t(31)),d=a(t(27)),u=a(t(0)),c=a(t(2)),p=a(t(4)),m=a(t(61)),f=a(t(67)),h=a(t(332)),g=a(t(122)),v=t(209),b=a(t(1386)),S=p.default.bind(b.default),y={name:c.default.string,disclosureType:c.default.string,disclosureManager:v.disclosureManagerShape},P=function(e){function n(e){var t;return(0,r.default)(this,n),(t=(0,s.default)(this,(0,i.default)(n).call(this,e))).checkLockState=t.checkLockState.bind((0,o.default)(t)),t.state={text:void 0},t}return(0,d.default)(n,e),(0,l.default)(n,[{key:"componentDidMount",value:function(){var e=this.props.disclosureManager;e&&e.registerDismissCheck&&e.registerDismissCheck(this.checkLockState)}},{key:"checkLockState",value:function(){var e=this;return this.state.text&&this.state.text.length?new Promise(function(n,t){confirm("".concat(e.props.name," has unsaved changes that will be lost. Do you wish to continue?"))?n():t()}):Promise.resolve()}},{key:"render",value:function(){var e=this,n=this.props,t=n.disclosureManager,a=n.name,r=n.disclosureType;return u.default.createElement(f.default,{fill:!0,header:u.default.createElement(g.default,{title:"Disclosure - ".concat(a),onClose:t.closeDisclosure,onBack:t.goBack,onMaximize:t.maximize,onMinimize:t.minimize})},u.default.createElement("div",{className:S("content-wrapper")},u.default.createElement("h3",null,a),u.default.createElement("p",null,"The disclosed component can disclose content within the same panel."),u.default.createElement("p",null,"It can also render a header (like above) that implements the various DisclosureManager control functions."),u.default.createElement(m.default,{text:"Dismiss",onClick:function(){t.dismiss().catch(function(){console.log("Dismiss failed. A lock must be in place.")})}}),u.default.createElement(m.default,{text:"Disclose Again",onClick:function(){t.disclose({preferredType:r,size:"small",content:{key:"Nested ".concat(a),component:u.default.createElement(E,{name:"Nested ".concat(a),disclosureType:r})}})}}),u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("p",null,"The disclosed component can register a dismiss check function that can interrupt and prevent dismissal. This component will prompt the user if text is detected in the input field below."),u.default.createElement(h.default,{value:this.state.text||"",onChange:function(n){e.setState({text:n.target.value})}}),this.state.text&&this.state.text.length?u.default.createElement("p",null,"Component has unsaved changes!"):null))}}]),n}(u.default.Component);P.propTypes=y,P.defaultProps={name:"Disclosure Component"};var E=(0,v.withDisclosureManager)(P),T=(0,v.withDisclosureManager)(E);n.default=T},3327:function(e,n,t){"use strict";t.r(n),n.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n/* eslint-disable import/no-unresolved, import/extensions */\nimport SlidePanelManager from 'terra-slide-panel-manager/lib/SlidePanelManager';\nimport styles from 'terra-slide-panel-manager/lib/terra-dev-site/doc/example/SlidePanelManager.module.scss';\n/* eslint-enable import/no-unresolved, import/extensions */\n\nimport ContentComponent from './ContentComponent';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  behavior: PropTypes.string,\n};\n\nconst SlidePanelManagerExample = ({ behavior }) => (\n  <div className={cx('example-wrapper')}>\n    <SlidePanelManager panelBehavior={behavior}>\n      <ContentComponent panelBehavior={behavior} disclosureType=\"panel\" />\n    </SlidePanelManager>\n  </div>\n);\n\nSlidePanelManagerExample.propTypes = propTypes;\n\nexport default SlidePanelManagerExample;\n"},3820:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=a(t(0)),l=a(t(911)),s=t(1385),i=a(t(3322)),o=a(t(3323)),d=a(t(3324)),u=a(t(3327)),c=function(){return r.default.createElement(l.default,{packageName:s.name,readme:i.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(s.name),examples:[{title:"Overlay Example",example:r.default.createElement(d.default,{behavior:"overlay"}),source:u.default},{title:"Squish Example",example:r.default.createElement(d.default,{behavior:"squish"}),source:u.default}],propsTables:[{componentSrc:o.default,source:u.default}]})};n.default=c},931:function(e,n,t){"use strict";var a=t(5);Object.defineProperty(n,"__esModule",{value:!0}),n.SlidePanelPositions=n.default=void 0;var r=a(t(17)),l=a(t(34)),s=a(t(20)),i=a(t(24)),o=a(t(25)),d=a(t(26)),u=a(t(31)),c=a(t(27)),p=a(t(0)),m=a(t(2)),f=a(t(4)),h=a(t(1182)),g=f.default.bind(h.default),v={START:"start",END:"end"};n.SlidePanelPositions=v;var b={mainContent:m.default.node,panelContent:m.default.node,panelBehavior:m.default.oneOf(["overlay","squish"]),panelPosition:m.default.oneOf(["start","end"]),panelSize:m.default.oneOf(["small","large"]),isFullscreen:m.default.bool,isOpen:m.default.bool,fill:m.default.bool},S={panelBehavior:"overlay",panelPosition:v.END,panelSize:"small"},y=function(e){function n(e){var t;return(0,s.default)(this,n),(t=(0,o.default)(this,(0,d.default)(n).call(this,e))).setPanelNode=t.setPanelNode.bind((0,u.default)(t)),t.mainNode=p.default.createRef(),t}return(0,c.default)(n,e),(0,i.default)(n,[{key:"componentDidUpdate",value:function(e){this.props.isOpen&&this.props.isOpen!==e.isOpen?this.panelNode.focus():this.props.isOpen||this.props.isOpen===e.isOpen||this.mainNode.current.focus()}},{key:"setPanelNode",value:function(e){this.panelNode=e}},{key:"render",value:function(){var e=this.props,n=e.mainContent,t=e.panelContent,a=e.panelBehavior,s=e.panelPosition,i=e.panelSize,o=e.isFullscreen,d=e.isOpen,u=e.fill,c=(0,l.default)(e,["mainContent","panelContent","panelBehavior","panelPosition","panelSize","isFullscreen","isOpen","fill"]),m=g(["slide-panel",{"is-open":d},{"is-fullscreen":o},{fill:u},c.className]),f=p.default.createElement("div",{className:g(["panel"]),tabIndex:"-1","aria-hidden":d?"false":"true",ref:this.setPanelNode},t),h=p.default.createElement("div",{className:g("main"),tabIndex:"-1",ref:this.mainNode},n),b=s===v.START?p.default.createElement(p.default.Fragment,null,f,h):p.default.createElement(p.default.Fragment,null,h,f);return p.default.createElement("div",(0,r.default)({},c,{className:m,"data-slide-panel-panel-behavior":a,"data-slide-panel-panel-position":s,"data-slide-panel-panel-size":i}),b)}}]),n}(p.default.Component);y.propTypes=b,y.defaultProps=S;var P=y;n.default=P}}]);
//# sourceMappingURL=132-6191149c969b83a7969c.js.map