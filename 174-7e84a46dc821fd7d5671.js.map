{"version":3,"sources":["webpack:///./node_modules/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing.js","webpack:///./node_modules/terra-clinical-data-grid/src/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing.jsx","webpack:///./node_modules/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing.5.doc.js","webpack:///./node_modules/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/ContentCellLayout.js","webpack:///./node_modules/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/ContentCellLayout.scss?c8b8","webpack:///./node_modules/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/Datagrid.module.scss?f571"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_terraClinicalDataGrid","_bind","_ContentCellLayout","_DatagridModule","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","this","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","Constructor","protoProps","staticProps","_setPrototypeOf","p","cx","bind","_default","_React$Component","DatagridWithColumnResizing","_this","instance","TypeError","_classCallCheck","state","columns","id","width","text","isResizable","subClass","superClass","create","_inherits","Component","sectionId","num","Array","fill","map","rowVal","rowIndex","concat","cells","cellVal","cellIndex","columnKey","columnId","component","createElement","sectionName","numberOfRows","rows","buildRows","_this2","className","pinnedColumns","overflowColumns","sections","buildSection","hasResizableColumns","onRequestColumnResize","columnToUpdate","Math","max","setState","prevState","_ExampleTemplate","_DatagridWithColumnResizing","_DatagridWithColumnResizing2","description","example","exampleSrc","_propTypes","propTypes","string","ContentCellLayout","_ref","module"],"mappings":"6FAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAyBD,EAAuB,EAAQ,OAExDE,EAAQF,EAAuB,EAAQ,IAEvCG,EAAqBH,EAAuB,EAAQ,MAEpDI,EAAkBJ,EAAuB,EAAQ,MAErD,SAASA,EAAuBK,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEP,QAASO,GAEvF,SAASE,EAAQF,GAAwT,OAAtOE,EAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBJ,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXG,QAAyBH,EAAIK,cAAgBF,QAAUH,IAAQG,OAAOG,UAAY,gBAAkBN,IAAyBA,GAIxV,SAASO,IAA2Q,OAA9PA,EAAWlB,OAAOmB,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcxB,OAAOiB,UAAUS,eAAeC,KAAKH,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BQ,MAAMC,KAAMP,WAIhT,SAASQ,EAA2BC,EAAMJ,GAAQ,OAAIA,GAA2B,WAAlBd,EAAQc,IAAsC,mBAATA,EAEpG,SAAgCI,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIC,eAAe,6DAAgE,OAAOD,EAFbE,CAAuBF,GAAtCJ,EAInI,SAASO,EAAgBC,GAAwJ,OAAnJD,EAAkBlC,OAAOoC,eAAiBpC,OAAOqC,eAAiB,SAAyBF,GAAK,OAAOA,EAAEG,WAAatC,OAAOqC,eAAeF,KAA8BA,GAExM,SAASI,EAAkBnB,EAAQoB,GAAS,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAAMjB,OAAQF,IAAK,CAAE,IAAIoB,EAAaD,EAAMnB,GAAIoB,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAM5C,OAAOC,eAAemB,EAAQqB,EAAWhB,IAAKgB,IAE7S,SAASI,EAAaC,EAAaC,EAAYC,GAAmJ,OAAhID,GAAYR,EAAkBO,EAAY7B,UAAW8B,GAAiBC,GAAaT,EAAkBO,EAAaE,GAAqBF,EAIzM,SAASG,EAAgBd,EAAGe,GAA+G,OAA1GD,EAAkBjD,OAAOoC,gBAAkB,SAAyBD,EAAGe,GAAsB,OAAjBf,EAAEG,UAAYY,EAAUf,IAA6BA,EAAGe,GAErK,IAAIC,EAAK3C,EAAMJ,QAAQgD,KAAK1C,EAAgBN,SA0IxCiD,EAtIJ,SAAUC,GAkCR,SAASC,EAA2Bf,GAClC,IAAIgB,EA+DJ,OAtHJ,SAAyBC,EAAUX,GAAe,KAAMW,aAAoBX,GAAgB,MAAM,IAAIY,UAAU,qCAyD5GC,CAAgB9B,KAAM0B,IAEtBC,EAAQ1B,EAA2BD,KAAMK,EAAgBqB,GAA4B5B,KAAKE,KAAMW,KAC1FoB,MAAQ,CACZC,QAAS,CACP,WAAY,CACVC,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,2BACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,GAEf,WAAY,CACVH,GAAI,WACJC,MAAO,IACPC,KAAM,WACNC,aAAa,KAIZT,EAiCT,OA3IF,SAAmBU,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIT,UAAU,sDAAyDQ,EAASjD,UAAYjB,OAAOoE,OAAOD,GAAcA,EAAWlD,UAAW,CAAED,YAAa,CAAEb,MAAO+D,EAAUtB,UAAU,EAAMD,cAAc,KAAewB,GAAYlB,EAAgBiB,EAAUC,GASjXE,CAAUd,EAmIVlD,EAAOD,QAAQkE,WAjIfzB,EAAaU,EAA4B,KAAM,CAAC,CAC9C9B,IAAK,YACLtB,MAAO,SAAmBoE,EAAWC,GAgBnC,OAfW,IAAIC,MAAMD,GAAKE,OAAOC,IAAI,SAAUC,EAAQC,GACrD,MAAO,CACLf,GAAI,OAAOgB,OAAOD,GAClBE,MAAO,IAAIN,MAAM,GAAGC,KAAK,GAAGC,IAAI,SAAUK,EAASC,GACjD,MAAO,UAAUH,OAAOG,KACvBN,IAAI,SAAUO,GACf,MAAO,CACLC,SAAUD,EACVE,UAAW/E,EAAOD,QAAQiF,cAAc5E,EAAmBL,QAAS,CAClE4D,KAAM,OAAOc,OAAOD,EAAU,MAAMC,OAAOI,aAQtD,CACDzD,IAAK,eACLtB,MAAO,SAAsBoE,EAAWe,EAAaC,GACnD,MAAO,CACLzB,GAAIS,EACJP,KAAMsB,EACNE,KAAMjC,EAA2BkC,UAAUlB,EAAWgB,QAwE5D1C,EAAaU,EAA4B,CAAC,CACxC9B,IAAK,SACLtB,MAAO,WACL,IAAIuF,EAAS7D,KAETgC,EAAUhC,KAAK+B,MAAMC,QACzB,OAAOxD,EAAOD,QAAQiF,cAAc,MAAO,CACzCM,UAAWxC,EAAG,oBACb9C,EAAOD,QAAQiF,cAAc9E,EAAuBH,QAAS,CAC9D0D,GAAI,wBACJ8B,cAAe,CAAC/B,EAAQ,YAAaA,EAAQ,YAAaA,EAAQ,aAClEgC,gBAAiB,CAAChC,EAAQ,YAAaA,EAAQ,YAAaA,EAAQ,YAAaA,EAAQ,YAAaA,EAAQ,YAAaA,EAAQ,aACnIiC,SAAU,CAACvC,EAA2BwC,aAAa,YAAa,YAAa,IAAKxC,EAA2BwC,aAAa,YAAa,YAAa,KACpJC,qBAAqB,EACrBtB,MAAM,EACNuB,sBAAuB,SAA+Bd,EAAUpB,GAC9D,IAAImC,EAAiBhF,EAAS,GAAIwE,EAAO9B,MAAMC,QAAQsB,IAEvDe,EAAenC,MAAQoC,KAAKC,IAAIrC,EAAO,IAEvC2B,EAAOW,SAAS,SAAUC,GACxB,MAAO,CACLzC,QAAS3C,EAAS,GAAIoF,EAAUzC,SAnJrBlD,EAmJ8C,GAnJzCc,EAmJ6C,GAAGqD,OAAOK,GAnJlDhF,EAmJ6D+F,EAnJhDzE,KAAOd,EAAOX,OAAOC,eAAeU,EAAKc,EAAK,CAAEtB,MAAOA,EAAOuC,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBjC,EAAIc,GAAOtB,EAAgBQ,KAA3M,IAAyBA,EAAKc,EAAKtB,YA2J1BoD,EAnIT,GAuIArD,EAAQE,QAAUiD,G,kCCpLlB,OAAe,0rH,kCCEfrD,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCiG,EAAmBjG,EAAuB,EAAQ,OAElDkG,EAA8BlG,EAAuB,EAAQ,OAE7DmG,EAA+BnG,EAAuB,EAAQ,OAElE,SAASA,EAAuBK,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEP,QAASO,GAKvF,IAQI0C,EARoC,WACtC,OAAOhD,EAAOD,QAAQiF,cAAckB,EAAiBnG,QAAS,CAC5DsG,YAAa,8IACbC,QAAStG,EAAOD,QAAQiF,cAAcmB,EAA4BpG,QAAS,MAC3EwG,WAAYH,EAA6BrG,WAK7CF,EAAQE,QAAUiD,G,iCC3BlBrD,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCuG,EAAavG,EAAuB,EAAQ,IAE5CE,EAAQF,EAAuB,EAAQ,IAEvCG,EAAqBH,EAAuB,EAAQ,MAExD,SAASA,EAAuBK,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEP,QAASO,GAEvF,IAAIwC,EAAK3C,EAAMJ,QAAQgD,KAAK3C,EAAmBL,SAE3C0G,EAAY,CACd9C,KAAM6C,EAAWzG,QAAQ2G,QAGvBC,EAAoB,SAA2BC,GACjD,IAAIjD,EAAOiD,EAAKjD,KAChB,OAAO3D,EAAOD,QAAQiF,cAAc,MAAO,CACzCM,UAAWxC,EAAG,iBACba,IAGLgD,EAAkBF,UAAYA,EAC9B,IAAIzD,EAAW2D,EACf9G,EAAQE,QAAUiD,G,oBC/BlB6D,EAAOhH,QAAU,CAAC,eAAe,4C,oBCAjCgH,EAAOhH,QAAU,CAAC,kBAAkB,2CAA2C,sBAAsB,+CAA+C,mBAAmB,4CAA4C,kBAAkB","file":"174-7e84a46dc821fd7d5671.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraClinicalDataGrid = _interopRequireDefault(require(\"terra-clinical-data-grid\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout\"));\n\nvar _DatagridModule = _interopRequireDefault(require(\"./Datagrid.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_DatagridModule.default);\n\nvar DatagridWithColumnResizing =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DatagridWithColumnResizing, _React$Component);\n\n  _createClass(DatagridWithColumnResizing, null, [{\n    key: \"buildRows\",\n    value: function buildRows(sectionId, num) {\n      var rows = new Array(num).fill().map(function (rowVal, rowIndex) {\n        return {\n          id: \"Row-\".concat(rowIndex),\n          cells: new Array(9).fill(0).map(function (cellVal, cellIndex) {\n            return \"Column-\".concat(cellIndex);\n          }).map(function (columnKey) {\n            return {\n              columnId: columnKey,\n              component: _react.default.createElement(_ContentCellLayout.default, {\n                text: \"Row-\".concat(rowIndex, \", \").concat(columnKey)\n              })\n            };\n          })\n        };\n      });\n      return rows;\n    }\n  }, {\n    key: \"buildSection\",\n    value: function buildSection(sectionId, sectionName, numberOfRows) {\n      return {\n        id: sectionId,\n        text: sectionName,\n        rows: DatagridWithColumnResizing.buildRows(sectionId, numberOfRows)\n      };\n    }\n  }]);\n\n  function DatagridWithColumnResizing(props) {\n    var _this;\n\n    _classCallCheck(this, DatagridWithColumnResizing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DatagridWithColumnResizing).call(this, props));\n    _this.state = {\n      columns: {\n        'Column-0': {\n          id: 'Column-0',\n          width: 200,\n          text: 'Column 0',\n          isResizable: true\n        },\n        'Column-1': {\n          id: 'Column-1',\n          width: 250,\n          text: 'Column 1 (Not Resizable)',\n          isResizable: false\n        },\n        'Column-2': {\n          id: 'Column-2',\n          width: 200,\n          text: 'Column 2',\n          isResizable: true\n        },\n        'Column-3': {\n          id: 'Column-3',\n          width: 200,\n          text: 'Column 3',\n          isResizable: true\n        },\n        'Column-4': {\n          id: 'Column-4',\n          width: 200,\n          text: 'Column 4',\n          isResizable: true\n        },\n        'Column-5': {\n          id: 'Column-5',\n          width: 200,\n          text: 'Column 5',\n          isResizable: true\n        },\n        'Column-6': {\n          id: 'Column-6',\n          width: 200,\n          text: 'Column 6',\n          isResizable: true\n        },\n        'Column-7': {\n          id: 'Column-7',\n          width: 200,\n          text: 'Column 7',\n          isResizable: true\n        },\n        'Column-8': {\n          id: 'Column-8',\n          width: 200,\n          text: 'Column 8',\n          isResizable: true\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DatagridWithColumnResizing, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = this.state.columns;\n      return _react.default.createElement(\"div\", {\n        className: cx('data-grid-basic')\n      }, _react.default.createElement(_terraClinicalDataGrid.default, {\n        id: \"column-resize-example\",\n        pinnedColumns: [columns['Column-0'], columns['Column-1'], columns['Column-2']],\n        overflowColumns: [columns['Column-3'], columns['Column-4'], columns['Column-5'], columns['Column-6'], columns['Column-7'], columns['Column-8']],\n        sections: [DatagridWithColumnResizing.buildSection('Section-0', 'Section 0', 15), DatagridWithColumnResizing.buildSection('Section-1', 'Section 1', 15)],\n        hasResizableColumns: true,\n        fill: true,\n        onRequestColumnResize: function onRequestColumnResize(columnId, width) {\n          var columnToUpdate = _extends({}, _this2.state.columns[columnId]);\n\n          columnToUpdate.width = Math.max(width, 50);\n\n          _this2.setState(function (prevState) {\n            return {\n              columns: _extends({}, prevState.columns, _defineProperty({}, \"\".concat(columnId), columnToUpdate))\n            };\n          });\n        }\n      }));\n    }\n  }]);\n\n  return DatagridWithColumnResizing;\n}(_react.default.Component);\n\nvar _default = DatagridWithColumnResizing;\nexports.default = _default;","export default \"import React from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport DataGrid from 'terra-clinical-data-grid';\\nimport classNames from 'classnames/bind';\\nimport ContentCellLayout from './ContentCellLayout';\\nimport styles from './Datagrid.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nclass DatagridWithColumnResizing extends React.Component {\\n  static buildRows(sectionId, num) {\\n    const rows = (new Array(num)).fill().map((rowVal, rowIndex) => ({\\n      id: `Row-${rowIndex}`,\\n      cells: ((new Array(9).fill(0)).map((cellVal, cellIndex) => (`Column-${cellIndex}`))).map(columnKey => ({\\n        columnId: columnKey,\\n        component: <ContentCellLayout text={`Row-${rowIndex}, ${columnKey}`} />,\\n      })),\\n    }));\\n\\n    return rows;\\n  }\\n\\n  static buildSection(sectionId, sectionName, numberOfRows) {\\n    return {\\n      id: sectionId,\\n      text: sectionName,\\n      rows: DatagridWithColumnResizing.buildRows(sectionId, numberOfRows),\\n    };\\n  }\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      columns: {\\n        'Column-0': {\\n          id: 'Column-0',\\n          width: 200,\\n          text: 'Column 0',\\n          isResizable: true,\\n        },\\n        'Column-1': {\\n          id: 'Column-1',\\n          width: 250,\\n          text: 'Column 1 (Not Resizable)',\\n          isResizable: false,\\n        },\\n        'Column-2': {\\n          id: 'Column-2',\\n          width: 200,\\n          text: 'Column 2',\\n          isResizable: true,\\n        },\\n        'Column-3': {\\n          id: 'Column-3',\\n          width: 200,\\n          text: 'Column 3',\\n          isResizable: true,\\n        },\\n        'Column-4': {\\n          id: 'Column-4',\\n          width: 200,\\n          text: 'Column 4',\\n          isResizable: true,\\n        },\\n        'Column-5': {\\n          id: 'Column-5',\\n          width: 200,\\n          text: 'Column 5',\\n          isResizable: true,\\n        },\\n        'Column-6': {\\n          id: 'Column-6',\\n          width: 200,\\n          text: 'Column 6',\\n          isResizable: true,\\n        },\\n        'Column-7': {\\n          id: 'Column-7',\\n          width: 200,\\n          text: 'Column 7',\\n          isResizable: true,\\n        },\\n        'Column-8': {\\n          id: 'Column-8',\\n          width: 200,\\n          text: 'Column 8',\\n          isResizable: true,\\n        },\\n      },\\n    };\\n  }\\n\\n  render() {\\n    const { columns } = this.state;\\n\\n    return (\\n      <div className={cx('data-grid-basic')}>\\n        <DataGrid\\n          id=\\\"column-resize-example\\\"\\n          pinnedColumns={[\\n            columns['Column-0'],\\n            columns['Column-1'],\\n            columns['Column-2'],\\n          ]}\\n          overflowColumns={[\\n            columns['Column-3'],\\n            columns['Column-4'],\\n            columns['Column-5'],\\n            columns['Column-6'],\\n            columns['Column-7'],\\n            columns['Column-8'],\\n          ]}\\n          sections={[\\n            DatagridWithColumnResizing.buildSection('Section-0', 'Section 0', 15),\\n            DatagridWithColumnResizing.buildSection('Section-1', 'Section 1', 15),\\n          ]}\\n          hasResizableColumns\\n          fill\\n          onRequestColumnResize={(columnId, width) => {\\n            const columnToUpdate = Object.assign({}, this.state.columns[columnId]);\\n            columnToUpdate.width = Math.max(width, 50);\\n            this.setState(prevState => (\\n              { columns: Object.assign({}, prevState.columns, { [`${columnId}`]: columnToUpdate }) }\\n            ));\\n          }}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default DatagridWithColumnResizing;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ExampleTemplate = _interopRequireDefault(require(\"terra-doc-template/lib/ExampleTemplate\"));\n\nvar _DatagridWithColumnResizing = _interopRequireDefault(require(\"./DatagridWithColumnResizing\"));\n\nvar _DatagridWithColumnResizing2 = _interopRequireDefault(require(\"!raw-loader!../../../../../src/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DatagridWithColumnResizingExample = function DatagridWithColumnResizingExample() {\n  return _react.default.createElement(_ExampleTemplate.default, {\n    description: \"This example features column resizing using the draggable resize region in the column header. Resizing for Column 1 is explicitly disabled.\",\n    example: _react.default.createElement(_DatagridWithColumnResizing.default, null),\n    exampleSrc: _DatagridWithColumnResizing2.default\n  });\n};\n\nvar _default = DatagridWithColumnResizingExample;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_ContentCellLayout.default);\n\nvar propTypes = {\n  text: _propTypes.default.string\n};\n\nvar ContentCellLayout = function ContentCellLayout(_ref) {\n  var text = _ref.text;\n  return _react.default.createElement(\"div\", {\n    className: cx('content-cell')\n  }, text);\n};\n\nContentCellLayout.propTypes = propTypes;\nvar _default = ContentCellLayout;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-cell\":\"ContentCellLayout__content-cell___1l9SY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-grid-basic\":\"Datagrid-module__data-grid-basic___2jvhh\",\"data-grid-row-style\":\"Datagrid-module__data-grid-row-style___1eRFT\",\"data-grid-paging\":\"Datagrid-module__data-grid-paging___3PtUm\",\"loading-overlay\":\"Datagrid-module__loading-overlay___aAZco\"};"],"sourceRoot":""}