{"version":3,"sources":["webpack:///./node_modules/terra-breakpoints/docs/README.md","webpack:///./node_modules/terra-breakpoints/lib/terra-dev-site/doc/example/ActiveBreakpointProviderExample.js","webpack:///./node_modules/terra-breakpoints/src/terra-dev-site/doc/example/ActiveBreakpointProviderExample.jsx","webpack:///./node_modules/terra-breakpoints/lib/terra-dev-site/doc/example/MixinsExample.js","webpack:///./node_modules/terra-breakpoints/lib/terra-dev-site/doc/example/MixinsExample.module.scss?1bc0","webpack:///./node_modules/terra-breakpoints/src/terra-dev-site/doc/example/MixinsExample.jsx","webpack:///./node_modules/terra-breakpoints/lib/terra-dev-site/doc/breakpoints/About.1.doc.js"],"names":["Object","defineProperty","exports","value","default","obj","_react","__esModule","_terraBreakpoints","ActiveBreakpointConsumer1","withActiveBreakpoint","_ref","activeBreakpoint","createElement","ActiveBreakpointConsumer2","ActiveBreakpointContext","Consumer","_default","ActiveBreakpointProvider","_interopRequireDefault","_bind","_MixinsExampleModule","cx","bind","className","module","_terraDocTemplate","_README","_package","_ActiveBreakpointProviderExample","_ActiveBreakpointProviderExample2","_MixinsExample","_MixinsExample2","packageName","name","readme","srcPath","concat","examples","title","example","source"],"mappings":"6VAAA,OAAe,mkM,wjECEfA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAIgCC,EAJ5BC,GAI4BD,EAJI,EAAQ,KAISA,EAAIE,WAAaF,EAAM,CAAED,QAASC,GAFnFG,EAAoB,EAAQ,KAKhC,IAAIC,GAA4B,EAAID,EAAkBE,sBAAsB,SAAUC,GACpF,IAAIC,EAAmBD,EAAKC,iBAC5B,OAAON,EAAOF,QAAQS,cAAc,MAAO,KAAMP,EAAOF,QAAQS,cAAc,IAAK,KAAM,sHAAuHP,EAAOF,QAAQS,cAAc,IAAK,KAAM,4BAA6B,IAAKD,MAGxRE,EAA4B,WAC9B,OAAOR,EAAOF,QAAQS,cAAcL,EAAkBO,wBAAwBC,SAAU,KAAM,SAAUJ,GACtG,OAAON,EAAOF,QAAQS,cAAc,MAAO,KAAMP,EAAOF,QAAQS,cAAc,IAAK,KAAM,wEAAyEP,EAAOF,QAAQS,cAAc,IAAK,KAAM,4BAA6B,IAAKD,OAQ5OK,EAJkC,WACpC,OAAOX,EAAOF,QAAQS,cAAcL,EAAkBU,yBAA0B,KAAMZ,EAAOF,QAAQS,cAAcJ,EAA2B,MAAOH,EAAOF,QAAQS,cAAc,KAAM,MAAOP,EAAOF,QAAQS,cAAcC,EAA2B,QAIzPZ,EAAQE,QAAUa,G,kCC9BlB,OAAe,ouC,kCCEfjB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIE,EAASa,EAAuB,EAAQ,IAExCC,EAAQD,EAAuB,EAAQ,IAEvCE,EAAuBF,EAAuB,EAAQ,OAE1D,SAASA,EAAuBd,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAED,QAASC,GAiCvF,IAAIiB,EAAKF,EAAMhB,QAAQmB,KAAKF,EAAqBjB,SAQ7Ca,EANgB,WAClB,OAAOX,EAAOF,QAAQS,cAAc,MAAO,KAAMP,EAAOF,QAAQS,cAAc,IAAK,KAAM,qEAAsEP,EAAOF,QAAQS,cAAc,IAAK,CAC/LW,UAAWF,EAAG,eAKlBpB,EAAQE,QAAUa,G,qBCtDlBQ,EAAOvB,QAAU,CAAC,QAAU,0C,kCCD5B,OAAe,yiC,kCCEfF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIE,EAASa,EAAuB,EAAQ,IAExCO,EAAoBP,EAAuB,EAAQ,MAEnDQ,EAAUR,EAAuB,EAAQ,OAEzCS,EAAW,EAAQ,MAEnBC,EAAmCV,EAAuB,EAAQ,OAElEW,EAAoCX,EAAuB,EAAQ,OAEnEY,EAAiBZ,EAAuB,EAAQ,OAEhDa,EAAkBb,EAAuB,EAAQ,OAErD,SAASA,EAAuBd,GAAO,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CAAED,QAASC,GAIvF,IAiBIY,EAjBU,WACZ,OAAOX,EAAOF,QAAQS,cAAca,EAAkBtB,QAAS,CAC7D6B,YAAaL,EAASM,KACtBC,OAAQR,EAAQvB,QAChBgC,QAAS,6DAA6DC,OAAOT,EAASM,MACtFI,SAAU,CAAC,CACTC,MAAO,mCACPC,QAASlC,EAAOF,QAAQS,cAAcgB,EAAiCzB,QAAS,MAChFqC,OAAQX,EAAkC1B,SACzC,CACDmC,MAAO,gBACPC,QAASlC,EAAOF,QAAQS,cAAckB,EAAe3B,QAAS,MAC9DqC,OAAQT,EAAgB5B,aAM9BF,EAAQE,QAAUa,G","file":"161-5c9765a10065cbd8e862.js","sourcesContent":["export default \"# Terra Breakpoints\\n\\n`terra-breakpoints` contains components and utilities related to Terra's supported responsive breakpoints.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-breakpoints`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Usage\\n\\n### Breakpoints\\n\\nAn object containing the named breakpoint values is the default export of the `terra-breakpoints` package. These named breakpoints are defined as minimum values.\\n\\n|Breakpoint Name|Minimum Value|Media Query|Description|\\n|---|---|---|---|\\n|`tiny`|0px|`@media screen and (min-width: 0px)`| Active from viewport width 0px and up |\\n|`small`|544px|`@media screen and (min-width: 544px)`|Active from viewport width 544px and up|\\n|`medium`|768px|`@media screen and (min-width: 768px)`|Active from viewport width 768px and up|\\n|`large`|992px|`@media screen and (min-width: 992px)`|Active from viewport width 992px and up|\\n|`huge`|1216px|`@media screen and (min-width: 1216px)`|Active from viewport width 1216 and up|\\n|`enormous`|1440px|`@media screen and (min-width: 1440px)`|Active from viewport width 1440px and up|\\n\\nUtility functions are also provided to help determine what breakpoint is active for a given value.\\n\\n#### `activeBreakpointForSize(widthValue)`\\n\\n`activeBreakpointForSize` will return the closest active breakpoint that matches the given width value.\\n\\n```jsx\\nimport { activeBreakpointForSize } from 'terra-breakpoints';\\n\\nconsole.log(activeBreakpointForSize(300));  // 'tiny'\\nconsole.log(activeBreakpointForSize(544));  // 'small'\\nconsole.log(activeBreakpointForSize(800));  // 'medium'\\nconsole.log(activeBreakpointForSize(1000)); // 'large'\\nconsole.log(activeBreakpointForSize(1300)); // 'huge'\\nconsole.log(activeBreakpointForSize(1500)); // 'enormous'\\n```\\n\\n#### `isBreakpointActiveForSize(breakpointName, widthValue)`\\n\\n`isBreakpointActiveForSize` will return a boolean value indicating whether or not the given breakpoint name is active for the width value.\\n\\n> Note that since the breakpoints are defined as minimum values, a breakpoint will be determined to be active if the width value is larger than the defined minimum, even if the width value is included in a higher breakpoint's range.\\n\\n```jsx\\nimport { isBreakpointActiveForSize } from 'terra-breakpoints';\\n\\nconsole.log(isBreakpointActiveForSize('tiny', 300));      // true\\nconsole.log(isBreakpointActiveForSize('tiny', 544));      // true\\nconsole.log(isBreakpointActiveForSize('tiny', 800));      // true\\nconsole.log(isBreakpointActiveForSize('tiny', 1000));     // true\\n\\nconsole.log(isBreakpointActiveForSize('medium', 300));    // false\\nconsole.log(isBreakpointActiveForSize('medium', 544));    // false\\nconsole.log(isBreakpointActiveForSize('medium', 800));    // true\\nconsole.log(isBreakpointActiveForSize('medium', 1500));   // true\\n\\nconsole.log(isBreakpointActiveForSize('enormous', 300));  // false\\nconsole.log(isBreakpointActiveForSize('enormous', 544));  // false\\nconsole.log(isBreakpointActiveForSize('enormous', 800));  // false\\nconsole.log(isBreakpointActiveForSize('enormous', 1500)); // true\\n```\\n\\n### ActiveBreakpointProvider\\n\\n`terra-breakpoints` also provides `<ActiveBreakpointProvider>`. a component that provides the current active breakpoint to child components using a Context-based API. This can be used to minimize the number of required resize event listeners and ensure consistency across the component hierarchy.\\n\\nA component generator called `withActiveBreakpoint()` is included to provide simple interfacing with the ActiveBreakpointProvider. However, the ActiveBreakpointContext can also be imported and used directly, if needed.\\n\\n```jsx\\nimport React from 'react';\\nimport { ActiveBreakpointProvider, withActiveBreakpoint, ActiveBreakpointContext } from 'terra-breakpoints';\\n\\nconst ActiveBreakpointConsumer1 = withActiveBreakpoint(({ activeBreakpoint }) => (\\n  <div>\\n    <p>This component uses the withActiveBreakpoint() component generator to interface with the ActiveBreakpointProvider.</p>\\n    <p>\\n      The active breakpoint is:\\n      {' '}\\n      {activeBreakpoint}\\n    </p>\\n  </div>\\n));\\n\\nconst ActiveBreakpointConsumer2 = () => (\\n  <ActiveBreakpointContext.Consumer>\\n    {\\n      activeBreakpoint => (\\n        <div>\\n          <p>This component interfaces with the ActiveBreakpointContext directly.</p>\\n          <p>\\n            The active breakpoint is:\\n            {' '}\\n            {activeBreakpoint}\\n          </p>\\n        </div>\\n      )\\n    }\\n  </ActiveBreakpointContext.Consumer>\\n);\\n\\nconst ActiveBreakpointProviderExample = () => (\\n  <ActiveBreakpointProvider>\\n    <ActiveBreakpointConsumer1 />\\n    <hr />\\n    <ActiveBreakpointConsumer2 />\\n  </ActiveBreakpointProvider>\\n);\\n```\\n\\n### Media Queries\\n\\n`terra-breakpoints` includes `_media-queries.scss`, which contains a set of Sass mixins that define media queries for the supported breakpoints.\\n\\n```scss\\n@import '~terra-breakpoints/lib/media-queries';\\n\\n.example {\\n  color: blue;\\n\\n  @include terra-mq-small-up {\\n    color: red;\\n  }\\n\\n  @include terra-mq-medium-up {\\n    color: purple;\\n  }\\n\\n  @include terra-mq-large-up {\\n    color: green;\\n  }\\n\\n  @include terra-mq-huge-up {\\n    color: yellow;\\n  }\\n\\n  @include terra-mq-enormous-up {\\n    color: orange;\\n  }\\n}\\n```\\n\\n## Component Features\\n* [Cross-Browser Support](https://engineering.cerner.com/terra-ui/#/getting-started/terra-ui/features)\\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraBreakpoints = require(\"terra-breakpoints\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar ActiveBreakpointConsumer1 = (0, _terraBreakpoints.withActiveBreakpoint)(function (_ref) {\n  var activeBreakpoint = _ref.activeBreakpoint;\n  return _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"This component uses the withActiveBreakpoint() component generator to interface with the ActiveBreakpointProvider.\"), _react.default.createElement(\"p\", null, \"The active breakpoint is:\", ' ', activeBreakpoint));\n});\n\nvar ActiveBreakpointConsumer2 = function ActiveBreakpointConsumer2() {\n  return _react.default.createElement(_terraBreakpoints.ActiveBreakpointContext.Consumer, null, function (activeBreakpoint) {\n    return _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"This component interfaces with the ActiveBreakpointContext directly.\"), _react.default.createElement(\"p\", null, \"The active breakpoint is:\", ' ', activeBreakpoint));\n  });\n};\n\nvar ActiveBreakpointProviderExample = function ActiveBreakpointProviderExample() {\n  return _react.default.createElement(_terraBreakpoints.ActiveBreakpointProvider, null, _react.default.createElement(ActiveBreakpointConsumer1, null), _react.default.createElement(\"hr\", null), _react.default.createElement(ActiveBreakpointConsumer2, null));\n};\n\nvar _default = ActiveBreakpointProviderExample;\nexports.default = _default;","export default \"import React from 'react';\\n\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport { ActiveBreakpointProvider, withActiveBreakpoint, ActiveBreakpointContext } from 'terra-breakpoints';\\n\\nconst ActiveBreakpointConsumer1 = withActiveBreakpoint(({ activeBreakpoint }) => (\\n  <div>\\n    <p>This component uses the withActiveBreakpoint() component generator to interface with the ActiveBreakpointProvider.</p>\\n    <p>\\n      The active breakpoint is:\\n      {' '}\\n      {activeBreakpoint}\\n    </p>\\n  </div>\\n));\\n\\nconst ActiveBreakpointConsumer2 = () => (\\n  <ActiveBreakpointContext.Consumer>\\n    {\\n      activeBreakpoint => (\\n        <div>\\n          <p>This component interfaces with the ActiveBreakpointContext directly.</p>\\n          <p>\\n            The active breakpoint is:\\n            {' '}\\n            {activeBreakpoint}\\n          </p>\\n        </div>\\n      )\\n    }\\n  </ActiveBreakpointContext.Consumer>\\n);\\n\\nconst ActiveBreakpointProviderExample = () => (\\n  <ActiveBreakpointProvider>\\n    <ActiveBreakpointConsumer1 />\\n    <hr />\\n    <ActiveBreakpointConsumer2 />\\n  </ActiveBreakpointProvider>\\n);\\n\\nexport default ActiveBreakpointProviderExample;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _MixinsExampleModule = _interopRequireDefault(require(\"./MixinsExample.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n  MixinsExample.module.scss\n\n  @import 'terra-breakpoints/mixins';\n\n  :local {\n    .content::after {\n      content: 'The active breakpoint is: tiny';\n\n      @include terra-mq-small-up {\n        content: 'The active breakpoint is: small';\n      }\n\n      @include terra-mq-medium-up {\n        content: 'The active breakpoint is: medium';\n      }\n\n      @include terra-mq-large-up {\n        content: 'The active breakpoint is: large';\n      }\n\n      @include terra-mq-huge-up {\n        content: 'The active breakpoint is: huge';\n      }\n\n      @include terra-mq-enormous-up {\n        content: 'The active breakpoint is: enormous';\n      }\n    }\n  }\n*/\nvar cx = _bind.default.bind(_MixinsExampleModule.default);\n\nvar MixinsExample = function MixinsExample() {\n  return _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"This example uses Sass mixins to determine the active breakpoint.\"), _react.default.createElement(\"p\", {\n    className: cx('content')\n  }));\n};\n\nvar _default = MixinsExample;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MixinsExample-module__content___2WkWn\"};","export default \"import React from 'react';\\nimport classNames from 'classnames/bind';\\nimport styles from './MixinsExample.module.scss';\\n\\n/**\\n  MixinsExample.module.scss\\n\\n  @import 'terra-breakpoints/mixins';\\n\\n  :local {\\n    .content::after {\\n      content: 'The active breakpoint is: tiny';\\n\\n      @include terra-mq-small-up {\\n        content: 'The active breakpoint is: small';\\n      }\\n\\n      @include terra-mq-medium-up {\\n        content: 'The active breakpoint is: medium';\\n      }\\n\\n      @include terra-mq-large-up {\\n        content: 'The active breakpoint is: large';\\n      }\\n\\n      @include terra-mq-huge-up {\\n        content: 'The active breakpoint is: huge';\\n      }\\n\\n      @include terra-mq-enormous-up {\\n        content: 'The active breakpoint is: enormous';\\n      }\\n    }\\n  }\\n*/\\n\\nconst cx = classNames.bind(styles);\\n\\nconst MixinsExample = () => (\\n  <div>\\n    <p>This example uses Sass mixins to determine the active breakpoint.</p>\\n    <p className={cx('content')} />\\n  </div>\\n);\\n\\nexport default MixinsExample;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _ActiveBreakpointProviderExample = _interopRequireDefault(require(\"../example/ActiveBreakpointProviderExample\"));\n\nvar _ActiveBreakpointProviderExample2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/ActiveBreakpointProviderExample.jsx\"));\n\nvar _MixinsExample = _interopRequireDefault(require(\"../example/MixinsExample\"));\n\nvar _MixinsExample2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/MixinsExample.jsx\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-duplicates, import/no-unresolved */\n// Example Files\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      title: 'ActiveBreakpointProvider Example',\n      example: _react.default.createElement(_ActiveBreakpointProviderExample.default, null),\n      source: _ActiveBreakpointProviderExample2.default\n    }, {\n      title: 'Mixin Example',\n      example: _react.default.createElement(_MixinsExample.default, null),\n      source: _MixinsExample2.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}