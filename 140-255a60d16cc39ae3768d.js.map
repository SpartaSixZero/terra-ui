{"version":3,"sources":["webpack:///./node_modules/terra-form-select/docs/SelectField.md","webpack:///./node_modules/terra-form-select/src/SelectField.jsx","webpack:///./node_modules/terra-form-select/lib/terra-dev-site/doc/example/MaxSelection.js","webpack:///./node_modules/terra-form-select/src/terra-dev-site/doc/example/MaxSelection.jsx","webpack:///./node_modules/terra-form-select/lib/terra-dev-site/doc/example/SelectField.js","webpack:///./node_modules/terra-form-select/src/terra-dev-site/doc/example/SelectField.jsx","webpack:///./node_modules/terra-form-select/lib/terra-dev-site/doc/example/RequiredSelectField.js","webpack:///./node_modules/terra-form-select/src/terra-dev-site/doc/example/RequiredSelectField.jsx","webpack:///./node_modules/terra-form-select/lib/terra-dev-site/doc/form-select/SelectField.2.doc.js","webpack:///./node_modules/terra-form-select/lib/terra-dev-site/doc/example/FormSelectDocCommon.module.scss?2d8e"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_SelectField","_bind","_FormSelectDocCommonModule","obj","__esModule","cx","bind","_default","createElement","help","label","maxSelectionCount","placeholder","selectId","variant","className","OptGroup","Option","display","disabled","required","_terraDocTemplate","_package","_SelectField2","_MaxSelection","_MaxSelection2","_SelectField3","_SelectField4","_RequiredSelectField","_RequiredSelectField2","packageName","name","readme","srcPath","concat","propsTables","componentName","componentSrc","examples","title","example","source","description","module"],"mappings":"6VAAA,OAAe,04C,ioECAf,OAAe,gpM,kCCEfA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAeD,EAAuB,EAAQ,MAE9CE,EAAQF,EAAuB,EAAQ,IAEvCG,EAA6BH,EAAuB,EAAQ,MAEhE,SAASA,EAAuBI,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEN,QAASM,GAGvF,IAAIE,EAAKJ,EAAMJ,QAAQS,KAAKJ,EAA2BL,SAkDnDU,EAhDsB,WACxB,OAAOT,EAAOD,QAAQW,cAAcR,EAAaH,QAAS,CACxDY,KAAM,4BACNC,MAAO,SACPC,kBAAmB,EACnBC,YAAa,gBACbC,SAAU,sBACVC,QAAS,WACTC,UAAWV,EAAG,gBACbP,EAAOD,QAAQW,cAAcR,EAAaH,QAAQmB,SAAU,CAC7DN,MAAO,kBACNZ,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC3DrB,MAAO,OACPsB,QAAS,SACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,OACPsB,QAAS,SACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DE,UAAU,EACVvB,MAAO,OACPsB,QAAS,SACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,OACPsB,QAAS,SACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,OACPsB,QAAS,UACNpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQmB,SAAU,CAC/DN,MAAO,mBACNZ,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC3DrB,MAAO,QACPsB,QAAS,UACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,SACPsB,QAAS,iBACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DE,UAAU,EACVvB,MAAO,OACPsB,QAAS,eACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,OACPsB,QAAS,eACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,UACPsB,QAAS,eAKbvB,EAAQE,QAAUU,G,kCCrElB,OAAe,i6C,kCCEfd,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAeD,EAAuB,EAAQ,MAE9CE,EAAQF,EAAuB,EAAQ,IAEvCG,EAA6BH,EAAuB,EAAQ,MAEhE,SAASA,EAAuBI,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEN,QAASM,GAGvF,IAAIE,EAAKJ,EAAMJ,QAAQS,KAAKJ,EAA2BL,SA0BnDU,EAxBqB,WACvB,OAAOT,EAAOD,QAAQW,cAAcR,EAAaH,QAAS,CACxDa,MAAO,eACPE,YAAa,gBACbC,SAAU,oBACVE,UAAWV,EAAG,gBACbP,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC3DrB,MAAO,SACPsB,QAAS,gBACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,QACPsB,QAAS,UACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,SACPsB,QAAS,WACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,QACPsB,QAAS,UACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,SACPsB,QAAS,kBAKbvB,EAAQE,QAAUU,G,kCC7ClB,OAAe,s3B,kCCEfd,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAeD,EAAuB,EAAQ,MAE9CE,EAAQF,EAAuB,EAAQ,IAEvCG,EAA6BH,EAAuB,EAAQ,MAEhE,SAASA,EAAuBI,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEN,QAASM,GAGvF,IAAIE,EAAKJ,EAAMJ,QAAQS,KAAKJ,EAA2BL,SA2BnDU,EAzBqB,WACvB,OAAOT,EAAOD,QAAQW,cAAcR,EAAaH,QAAS,CACxDa,MAAO,eACPE,YAAa,gBACbC,SAAU,oBACVO,UAAU,EACVL,UAAWV,EAAG,gBACbP,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC3DrB,MAAO,SACPsB,QAAS,gBACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,QACPsB,QAAS,UACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,SACPsB,QAAS,WACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,QACPsB,QAAS,UACPpB,EAAOD,QAAQW,cAAcR,EAAaH,QAAQoB,OAAQ,CAC5DrB,MAAO,SACPsB,QAAS,kBAKbvB,EAAQE,QAAUU,G,kCC9ClB,OAAe,+3B,kCCEfd,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCsB,EAAoBtB,EAAuB,EAAQ,MAEnDC,EAAeD,EAAuB,EAAQ,OAE9CuB,EAAW,EAAQ,MAEnBC,EAAgBxB,EAAuB,EAAQ,OAE/CyB,EAAgBzB,EAAuB,EAAQ,OAE/C0B,EAAiB1B,EAAuB,EAAQ,OAEhD2B,EAAgB3B,EAAuB,EAAQ,OAE/C4B,EAAgB5B,EAAuB,EAAQ,OAE/C6B,EAAuB7B,EAAuB,EAAQ,OAEtD8B,EAAwB9B,EAAuB,EAAQ,OAE3D,SAASA,EAAuBI,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEN,QAASM,GASvF,IA0BII,EA1BU,WACZ,OAAOT,EAAOD,QAAQW,cAAca,EAAkBxB,QAAS,CAC7DiC,YAAaR,EAASS,KACtBC,OAAQhC,EAAaH,QACrBoC,QAAS,6DAA6DC,OAAOZ,EAASS,MACtFI,YAAa,CAAC,CACZC,cAAe,eACfC,aAAcd,EAAc1B,UAE9ByC,SAAU,CAAC,CACTC,MAAO,uBACPC,QAAS1C,EAAOD,QAAQW,cAAckB,EAAc7B,QAAS,MAC7D4C,OAAQd,EAAc9B,SACrB,CACD0C,MAAO,gCACPC,QAAS1C,EAAOD,QAAQW,cAAcoB,EAAqB/B,QAAS,MACpE4C,OAAQZ,EAAsBhC,SAC7B,CACD0C,MAAO,2DACPG,YAAa,+IACbF,QAAS1C,EAAOD,QAAQW,cAAcgB,EAAc3B,QAAS,MAC7D4C,OAAQhB,EAAe5B,aAM7BF,EAAQE,QAAUU,G,wCChElBoC,EAAOhD,QAAU,CAAC,cAAc","file":"140-255a60d16cc39ae3768d.js","sourcesContent":["export default \"# Terra Form Select Field\\n\\nA convenience wrapper assembling a [terra-form-select](https://github.com/cerner/terra-core/tree/master/packages/terra-form-select) within a [terra-form-field](https://github.com/cerner/terra-core/tree/master/packages/terra-form-field).\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-form-select`\\n\\n## Component Features\\n\\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n * [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n * [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Field from 'terra-form-field';\\nimport Select from './Select';\\nimport Variants from './_constants';\\n\\nconst propTypes = {\\n  /**\\n   * Whether a clear option is available to clear the selection.\\n   * This is not applicable to the `multiple` or `tag` variants since the selection can already be deselected using the tag.\\n   */\\n  allowClear: PropTypes.bool,\\n  /**\\n   * The select options.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * The field label.\\n   */\\n  label: PropTypes.node.isRequired,\\n  /**\\n   * The default value of the select.\\n   */\\n  defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.number, PropTypes.string]),\\n  /**\\n   * Whether the input is disabled.\\n   */\\n  disabled: PropTypes.bool,\\n  /**\\n   * Error message displayed when the select is invalid.\\n   */\\n  error: PropTypes.node,\\n  /**\\n   * Help message to display with the select.\\n   */\\n  help: PropTypes.node,\\n  /**\\n   * Whether to hide the required indicator on the label.\\n   */\\n  hideRequired: PropTypes.bool,\\n  /**\\n   * Whether the field is displayed inline. Displays block by default.\\n   */\\n  isInline: PropTypes.bool,\\n  /**\\n   * Whether the field is invalid.\\n   */\\n  isInvalid: PropTypes.bool,\\n  /**\\n   * Whether the label is hidden. Allows hiding the label while meeting accessibility guidelines.\\n   */\\n  isLabelHidden: PropTypes.bool,\\n  /**\\n   * Additional attributes to spread onto the label.\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  labelAttrs: PropTypes.object,\\n  /**\\n   * The maximum number of options that can be selected. A value less than 2 will be ignored.\\n   * Only applicable to variants allowing multiple selections (e.g.; `multiple`; `tag`).\\n   */\\n  maxSelectionCount: PropTypes.number,\\n  /**\\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\\n   */\\n  maxWidth: PropTypes.string,\\n  /**\\n   * Callback function triggered when the select value changes. function(value)\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   * Placeholder text.\\n   */\\n  placeholder: PropTypes.string,\\n  /**\\n   * Whether the field is required.\\n   */\\n  required: PropTypes.bool,\\n  /**\\n   * Additional attributes to spread onto the select.\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  selectAttrs: PropTypes.object,\\n  /**\\n   * The Select identifier. Links the htmlFor of the field to the select identifier.\\n   */\\n  selectId: PropTypes.string.isRequired,\\n  /**\\n   * Whether to append the 'optional' label to a non-required field label.\\n   */\\n  showOptional: PropTypes.bool,\\n  /**\\n   * The value of the select.\\n   */\\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.number, PropTypes.string]),\\n  /**\\n   * The select variant. One of `default`, `combobox`, `multiple`, `tag`, or `search`.\\n   */\\n  variant: PropTypes.oneOf([\\n    Variants.COMBOBOX,\\n    Variants.DEFAULT,\\n    Variants.MULTIPLE,\\n    Variants.SEARCH,\\n    Variants.TAG,\\n  ]),\\n};\\n\\nconst defaultProps = {\\n  allowClear: false,\\n  children: undefined,\\n  defaultValue: undefined,\\n  disabled: false,\\n  error: undefined,\\n  help: undefined,\\n  hideRequired: false,\\n  isInline: false,\\n  isInvalid: false,\\n  isLabelHidden: false,\\n  labelAttrs: {},\\n  maxSelectionCount: undefined,\\n  maxWidth: undefined,\\n  onChange: undefined,\\n  placeholder: undefined,\\n  required: false,\\n  selectAttrs: {},\\n  showOptional: false,\\n  value: undefined,\\n  variant: 'default',\\n};\\n\\nconst contextTypes = {\\n  /* eslint-disable consistent-return */\\n  intl: (context) => {\\n    if (context.intl === undefined) {\\n      return new Error('Component is internationalized, and must be wrapped in terra-base');\\n    }\\n  },\\n};\\n\\n\\nconst SelectField = ({\\n  allowClear,\\n  children,\\n  defaultValue,\\n  disabled,\\n  error,\\n  help,\\n  hideRequired,\\n  isInline,\\n  isInvalid,\\n  isLabelHidden,\\n  label,\\n  labelAttrs,\\n  maxSelectionCount,\\n  maxWidth,\\n  onChange,\\n  placeholder,\\n  required,\\n  selectAttrs,\\n  selectId,\\n  showOptional,\\n  value,\\n  variant,\\n  ...customProps\\n}, context) => {\\n  let helpText = help;\\n  if (maxSelectionCount !== undefined && maxSelectionCount >= 2) {\\n    const limitSelectionText = context.intl.formatMessage({ id: 'Terra.form.select.maxSelectionHelp' }, { text: maxSelectionCount });\\n\\n    if (help) {\\n      helpText = (\\n        <span>\\n          { limitSelectionText }\\n          { ' ' }\\n          { help }\\n        </span>\\n      );\\n    } else {\\n      helpText = limitSelectionText;\\n    }\\n  }\\n\\n  let ariaDescriptionIds;\\n\\n  if (help && error && isInvalid) {\\n    ariaDescriptionIds = `${selectId}-error ${selectId}-help`;\\n  } else {\\n    if (help) {\\n      ariaDescriptionIds = `${selectId}-help`;\\n    }\\n\\n    if (error && isInvalid) {\\n      ariaDescriptionIds = `${selectId}-error`;\\n    }\\n  }\\n\\n  return (\\n    <Field\\n      {...customProps}\\n      label={label}\\n      labelAttrs={labelAttrs}\\n      error={error}\\n      help={helpText}\\n      hideRequired={hideRequired}\\n      required={required}\\n      showOptional={showOptional}\\n      isInvalid={isInvalid}\\n      isInline={isInline}\\n      isLabelHidden={isLabelHidden}\\n      htmlFor={selectId}\\n      maxWidth={maxWidth}\\n    >\\n      <Select\\n        {...selectAttrs}\\n        ariaLabel={label}\\n        allowClear={allowClear}\\n        aria-describedby={ariaDescriptionIds}\\n        disabled={selectAttrs.disabled || disabled}\\n        id={selectId}\\n        isInvalid={isInvalid}\\n        defaultValue={defaultValue}\\n        maxSelectionCount={maxSelectionCount !== undefined && maxSelectionCount < 2 ? undefined : maxSelectionCount}\\n        onChange={onChange}\\n        placeholder={placeholder}\\n        required={required}\\n        value={value}\\n        variant={variant}\\n      >\\n        {children}\\n      </Select>\\n    </Field>\\n  );\\n};\\n\\nSelectField.propTypes = propTypes;\\nSelectField.defaultProps = defaultProps;\\nSelectField.contextTypes = contextTypes;\\n\\nSelectField.Option = Select.Option;\\nSelectField.OptGroup = Select.OptGroup;\\n\\nexport default SelectField;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SelectField = _interopRequireDefault(require(\"terra-form-select/lib/SelectField\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _FormSelectDocCommonModule = _interopRequireDefault(require(\"./FormSelectDocCommon.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar cx = _bind.default.bind(_FormSelectDocCommonModule.default);\n\nvar MaxSelectionExample = function MaxSelectionExample() {\n  return _react.default.createElement(_SelectField.default, {\n    help: \"Shades of blue and green.\",\n    label: \"Colors\",\n    maxSelectionCount: 3,\n    placeholder: \"Select a size\",\n    selectId: \"max-selection-field\",\n    variant: \"multiple\",\n    className: cx('form-select')\n  }, _react.default.createElement(_SelectField.default.OptGroup, {\n    label: \"Shades of Blue\"\n  }, _react.default.createElement(_SelectField.default.Option, {\n    value: \"blue\",\n    display: \"Blue\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"cyan\",\n    display: \"Cyan\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    disabled: true,\n    value: \"teal\",\n    display: \"Teal\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"azul\",\n    display: \"Azul\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"aqua\",\n    display: \"Aqua\"\n  })), _react.default.createElement(_SelectField.default.OptGroup, {\n    label: \"Shades of Green\"\n  }, _react.default.createElement(_SelectField.default.Option, {\n    value: \"green\",\n    display: \"Green\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"forest\",\n    display: \"Forest Green\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    disabled: true,\n    value: \"dark\",\n    display: \"Dark Green\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"neon\",\n    display: \"Neon Green\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"emerald\",\n    display: \"Emerald\"\n  })));\n};\n\nvar _default = MaxSelectionExample;\nexports.default = _default;","export default \"import React from 'react';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport SelectField from 'terra-form-select/lib/SelectField';\\nimport classNames from 'classnames/bind';\\nimport styles from './FormSelectDocCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst MaxSelectionExample = () => (\\n  <SelectField help=\\\"Shades of blue and green.\\\" label=\\\"Colors\\\" maxSelectionCount={3} placeholder=\\\"Select a size\\\" selectId=\\\"max-selection-field\\\" variant=\\\"multiple\\\" className={cx('form-select')}>\\n    <SelectField.OptGroup label=\\\"Shades of Blue\\\">\\n      <SelectField.Option value=\\\"blue\\\" display=\\\"Blue\\\" />\\n      <SelectField.Option value=\\\"cyan\\\" display=\\\"Cyan\\\" />\\n      <SelectField.Option disabled value=\\\"teal\\\" display=\\\"Teal\\\" />\\n      <SelectField.Option value=\\\"azul\\\" display=\\\"Azul\\\" />\\n      <SelectField.Option value=\\\"aqua\\\" display=\\\"Aqua\\\" />\\n    </SelectField.OptGroup>\\n    <SelectField.OptGroup label=\\\"Shades of Green\\\">\\n      <SelectField.Option value=\\\"green\\\" display=\\\"Green\\\" />\\n      <SelectField.Option value=\\\"forest\\\" display=\\\"Forest Green\\\" />\\n      <SelectField.Option disabled value=\\\"dark\\\" display=\\\"Dark Green\\\" />\\n      <SelectField.Option value=\\\"neon\\\" display=\\\"Neon Green\\\" />\\n      <SelectField.Option value=\\\"emerald\\\" display=\\\"Emerald\\\" />\\n    </SelectField.OptGroup>\\n  </SelectField>\\n);\\n\\nexport default MaxSelectionExample;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SelectField = _interopRequireDefault(require(\"terra-form-select/lib/SelectField\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _FormSelectDocCommonModule = _interopRequireDefault(require(\"./FormSelectDocCommon.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar cx = _bind.default.bind(_FormSelectDocCommonModule.default);\n\nvar SelectFieldExample = function SelectFieldExample() {\n  return _react.default.createElement(_SelectField.default, {\n    label: \"T-shirt size\",\n    placeholder: \"Select a size\",\n    selectId: \"tshirt-size-field\",\n    className: cx('form-select')\n  }, _react.default.createElement(_SelectField.default.Option, {\n    value: \"xSmall\",\n    display: \"Extra Small\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"small\",\n    display: \"Small\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"medium\",\n    display: \"Medium\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"large\",\n    display: \"Large\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"xLarge\",\n    display: \"Extra Large\"\n  }));\n};\n\nvar _default = SelectFieldExample;\nexports.default = _default;","export default \"import React from 'react';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport SelectField from 'terra-form-select/lib/SelectField';\\nimport classNames from 'classnames/bind';\\nimport styles from './FormSelectDocCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst SelectFieldExample = () => (\\n  <SelectField label=\\\"T-shirt size\\\" placeholder=\\\"Select a size\\\" selectId=\\\"tshirt-size-field\\\" className={cx('form-select')}>\\n    <SelectField.Option value=\\\"xSmall\\\" display=\\\"Extra Small\\\" />\\n    <SelectField.Option value=\\\"small\\\" display=\\\"Small\\\" />\\n    <SelectField.Option value=\\\"medium\\\" display=\\\"Medium\\\" />\\n    <SelectField.Option value=\\\"large\\\" display=\\\"Large\\\" />\\n    <SelectField.Option value=\\\"xLarge\\\" display=\\\"Extra Large\\\" />\\n  </SelectField>\\n);\\n\\nexport default SelectFieldExample;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SelectField = _interopRequireDefault(require(\"terra-form-select/lib/SelectField\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _FormSelectDocCommonModule = _interopRequireDefault(require(\"./FormSelectDocCommon.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar cx = _bind.default.bind(_FormSelectDocCommonModule.default);\n\nvar SelectFieldExample = function SelectFieldExample() {\n  return _react.default.createElement(_SelectField.default, {\n    label: \"T-shirt size\",\n    placeholder: \"Select a size\",\n    selectId: \"tshirt-size-field\",\n    required: true,\n    className: cx('form-select')\n  }, _react.default.createElement(_SelectField.default.Option, {\n    value: \"xSmall\",\n    display: \"Extra Small\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"small\",\n    display: \"Small\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"medium\",\n    display: \"Medium\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"large\",\n    display: \"Large\"\n  }), _react.default.createElement(_SelectField.default.Option, {\n    value: \"xLarge\",\n    display: \"Extra Large\"\n  }));\n};\n\nvar _default = SelectFieldExample;\nexports.default = _default;","export default \"import React from 'react';\\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\\nimport SelectField from 'terra-form-select/lib/SelectField';\\nimport classNames from 'classnames/bind';\\nimport styles from './FormSelectDocCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst SelectFieldExample = () => (\\n  <SelectField label=\\\"T-shirt size\\\" placeholder=\\\"Select a size\\\" selectId=\\\"tshirt-size-field\\\" required className={cx('form-select')}>\\n    <SelectField.Option value=\\\"xSmall\\\" display=\\\"Extra Small\\\" />\\n    <SelectField.Option value=\\\"small\\\" display=\\\"Small\\\" />\\n    <SelectField.Option value=\\\"medium\\\" display=\\\"Medium\\\" />\\n    <SelectField.Option value=\\\"large\\\" display=\\\"Large\\\" />\\n    <SelectField.Option value=\\\"xLarge\\\" display=\\\"Extra Large\\\" />\\n  </SelectField>\\n);\\n\\nexport default SelectFieldExample;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _SelectField = _interopRequireDefault(require(\"../../../../docs/SelectField.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _SelectField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/SelectField\"));\n\nvar _MaxSelection = _interopRequireDefault(require(\"../example/MaxSelection\"));\n\nvar _MaxSelection2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/MaxSelection\"));\n\nvar _SelectField3 = _interopRequireDefault(require(\"../example/SelectField\"));\n\nvar _SelectField4 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/SelectField\"));\n\nvar _RequiredSelectField = _interopRequireDefault(require(\"../example/RequiredSelectField\"));\n\nvar _RequiredSelectField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/RequiredSelectField\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-extraneous-dependencies, import/no-webpack-loader-syntax, import/first, import/no-unresolved, import/extensions */\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Example Files\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _SelectField.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/\".concat(_package.name),\n    propsTables: [{\n      componentName: 'Select Field',\n      componentSrc: _SelectField2.default\n    }],\n    examples: [{\n      title: 'Select Field Example',\n      example: _react.default.createElement(_SelectField3.default, null),\n      source: _SelectField4.default\n    }, {\n      title: 'Required Select Field Example',\n      example: _react.default.createElement(_RequiredSelectField.default, null),\n      source: _RequiredSelectField2.default\n    }, {\n      title: 'Maximum Selection (applies to only \\'multiple\\' and \\'tag\\')',\n      description: 'A multiple selection variant that allows up to a set number of selections. (Not applicable to  \\'default\\', \\'combobox\\', and \\'search\\' variants)',\n      example: _react.default.createElement(_MaxSelection.default, null),\n      source: _MaxSelection2.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-select\":\"FormSelectDocCommon-module__form-select___3izDR\"};"],"sourceRoot":""}